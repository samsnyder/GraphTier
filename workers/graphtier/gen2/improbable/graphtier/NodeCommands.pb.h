// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/graphtier/NodeCommands.proto

#ifndef PROTOBUF_improbable_2fgraphtier_2fNodeCommands_2eproto__INCLUDED
#define PROTOBUF_improbable_2fgraphtier_2fNodeCommands_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "improbable/entity_state.pb.h"
#include "improbable/graphtier/GraphTierTypes.pb.h"
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace graphtier {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_improbable_2fgraphtier_2fNodeCommands_2eproto();
void protobuf_InitDefaults_improbable_2fgraphtier_2fNodeCommands_2eproto();
void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeCommands_2eproto();
void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeCommands_2eproto();

class NodeCommands;
class NodeCommandsData;
class NodeCommands_Commands;
class NodeCommands_Events;
class RouteFindRequest;
class RouteFindResponse;

// ===================================================================

class RouteFindResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.RouteFindResponse) */ {
 public:
  RouteFindResponse();
  virtual ~RouteFindResponse();

  RouteFindResponse(const RouteFindResponse& from);

  inline RouteFindResponse& operator=(const RouteFindResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RouteFindResponse& default_instance();

  static const RouteFindResponse* internal_default_instance();

  void Swap(RouteFindResponse* other);

  // implements Message ----------------------------------------------

  inline RouteFindResponse* New() const { return New(NULL); }

  RouteFindResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RouteFindResponse& from);
  void MergeFrom(const RouteFindResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RouteFindResponse* other);
  void UnsafeMergeFrom(const RouteFindResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .schema.improbable.graphtier.Path field1_path = 1;
  bool has_field1_path() const;
  void clear_field1_path();
  static const int kField1PathFieldNumber = 1;
  const ::schema::improbable::graphtier::Path& field1_path() const;
  ::schema::improbable::graphtier::Path* mutable_field1_path();
  ::schema::improbable::graphtier::Path* release_field1_path();
  void set_allocated_field1_path(::schema::improbable::graphtier::Path* field1_path);

  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.RouteFindResponse)
 private:
  inline void set_has_field1_path();
  inline void clear_has_field1_path();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::schema::improbable::graphtier::Path* field1_path_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeCommands_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeCommands_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RouteFindResponse> RouteFindResponse_default_instance_;

// -------------------------------------------------------------------

class RouteFindRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.RouteFindRequest) */ {
 public:
  RouteFindRequest();
  virtual ~RouteFindRequest();

  RouteFindRequest(const RouteFindRequest& from);

  inline RouteFindRequest& operator=(const RouteFindRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RouteFindRequest& default_instance();

  static const RouteFindRequest* internal_default_instance();

  void Swap(RouteFindRequest* other);

  // implements Message ----------------------------------------------

  inline RouteFindRequest* New() const { return New(NULL); }

  RouteFindRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RouteFindRequest& from);
  void MergeFrom(const RouteFindRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RouteFindRequest* other);
  void UnsafeMergeFrom(const RouteFindRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 field2_to = 2;
  bool has_field2_to() const;
  void clear_field2_to();
  static const int kField2ToFieldNumber = 2;
  ::google::protobuf::int64 field2_to() const;
  void set_field2_to(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.RouteFindRequest)
 private:
  inline void set_has_field2_to();
  inline void clear_has_field2_to();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 field2_to_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeCommands_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeCommands_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RouteFindRequest> RouteFindRequest_default_instance_;

// -------------------------------------------------------------------

class NodeCommandsData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.NodeCommandsData) */ {
 public:
  NodeCommandsData();
  virtual ~NodeCommandsData();

  NodeCommandsData(const NodeCommandsData& from);

  inline NodeCommandsData& operator=(const NodeCommandsData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeCommandsData& default_instance();

  static const NodeCommandsData* internal_default_instance();

  void Swap(NodeCommandsData* other);

  // implements Message ----------------------------------------------

  inline NodeCommandsData* New() const { return New(NULL); }

  NodeCommandsData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeCommandsData& from);
  void MergeFrom(const NodeCommandsData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeCommandsData* other);
  void UnsafeMergeFrom(const NodeCommandsData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.NodeCommandsData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeCommands_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeCommands_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeCommandsData> NodeCommandsData_default_instance_;

// -------------------------------------------------------------------

class NodeCommands_Events : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.NodeCommands.Events) */ {
 public:
  NodeCommands_Events();
  virtual ~NodeCommands_Events();

  NodeCommands_Events(const NodeCommands_Events& from);

  inline NodeCommands_Events& operator=(const NodeCommands_Events& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeCommands_Events& default_instance();

  static const NodeCommands_Events* internal_default_instance();

  void Swap(NodeCommands_Events* other);

  // implements Message ----------------------------------------------

  inline NodeCommands_Events* New() const { return New(NULL); }

  NodeCommands_Events* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeCommands_Events& from);
  void MergeFrom(const NodeCommands_Events& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeCommands_Events* other);
  void UnsafeMergeFrom(const NodeCommands_Events& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.NodeCommands.Events)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeCommands_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeCommands_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeCommands_Events> NodeCommands_Events_default_instance_;

// -------------------------------------------------------------------

class NodeCommands_Commands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.NodeCommands.Commands) */ {
 public:
  NodeCommands_Commands();
  virtual ~NodeCommands_Commands();

  NodeCommands_Commands(const NodeCommands_Commands& from);

  inline NodeCommands_Commands& operator=(const NodeCommands_Commands& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeCommands_Commands& default_instance();

  static const NodeCommands_Commands* internal_default_instance();

  void Swap(NodeCommands_Commands* other);

  // implements Message ----------------------------------------------

  inline NodeCommands_Commands* New() const { return New(NULL); }

  NodeCommands_Commands* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeCommands_Commands& from);
  void MergeFrom(const NodeCommands_Commands& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeCommands_Commands* other);
  void UnsafeMergeFrom(const NodeCommands_Commands& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .schema.improbable.graphtier.RouteFindRequest command_find_route_request = 1;
  bool has_command_find_route_request() const;
  void clear_command_find_route_request();
  static const int kCommandFindRouteRequestFieldNumber = 1;
  const ::schema::improbable::graphtier::RouteFindRequest& command_find_route_request() const;
  ::schema::improbable::graphtier::RouteFindRequest* mutable_command_find_route_request();
  ::schema::improbable::graphtier::RouteFindRequest* release_command_find_route_request();
  void set_allocated_command_find_route_request(::schema::improbable::graphtier::RouteFindRequest* command_find_route_request);

  // optional .schema.improbable.graphtier.RouteFindResponse command_find_route_response = 2;
  bool has_command_find_route_response() const;
  void clear_command_find_route_response();
  static const int kCommandFindRouteResponseFieldNumber = 2;
  const ::schema::improbable::graphtier::RouteFindResponse& command_find_route_response() const;
  ::schema::improbable::graphtier::RouteFindResponse* mutable_command_find_route_response();
  ::schema::improbable::graphtier::RouteFindResponse* release_command_find_route_response();
  void set_allocated_command_find_route_response(::schema::improbable::graphtier::RouteFindResponse* command_find_route_response);

  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.NodeCommands.Commands)
 private:
  inline void set_has_command_find_route_request();
  inline void clear_has_command_find_route_request();
  inline void set_has_command_find_route_response();
  inline void clear_has_command_find_route_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::schema::improbable::graphtier::RouteFindRequest* command_find_route_request_;
  ::schema::improbable::graphtier::RouteFindResponse* command_find_route_response_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeCommands_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeCommands_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeCommands_Commands> NodeCommands_Commands_default_instance_;

// -------------------------------------------------------------------

class NodeCommands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.NodeCommands) */ {
 public:
  NodeCommands();
  virtual ~NodeCommands();

  NodeCommands(const NodeCommands& from);

  inline NodeCommands& operator=(const NodeCommands& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeCommands& default_instance();

  static const NodeCommands* internal_default_instance();

  void Swap(NodeCommands* other);

  // implements Message ----------------------------------------------

  inline NodeCommands* New() const { return New(NULL); }

  NodeCommands* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeCommands& from);
  void MergeFrom(const NodeCommands& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeCommands* other);
  void UnsafeMergeFrom(const NodeCommands& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NodeCommands_Events Events;
  typedef NodeCommands_Commands Commands;

  // accessors -------------------------------------------------------

  static const int kComponentExtensionFieldNumber = 8005;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::graphtier::NodeCommandsData >, 11, false >
    component_extension;
  static const int kEventExtensionFieldNumber = 8005;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::graphtier::NodeCommands_Events >, 11, false >
    event_extension;
  static const int kCommandExtensionFieldNumber = 8005;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::graphtier::NodeCommands_Commands >, 11, false >
    command_extension;
  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.NodeCommands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeCommands_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeCommands_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeCommands_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeCommands> NodeCommands_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RouteFindResponse

// optional .schema.improbable.graphtier.Path field1_path = 1;
inline bool RouteFindResponse::has_field1_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RouteFindResponse::set_has_field1_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RouteFindResponse::clear_has_field1_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RouteFindResponse::clear_field1_path() {
  if (field1_path_ != NULL) field1_path_->::schema::improbable::graphtier::Path::Clear();
  clear_has_field1_path();
}
inline const ::schema::improbable::graphtier::Path& RouteFindResponse::field1_path() const {
  // @@protoc_insertion_point(field_get:schema.improbable.graphtier.RouteFindResponse.field1_path)
  return field1_path_ != NULL ? *field1_path_
                         : *::schema::improbable::graphtier::Path::internal_default_instance();
}
inline ::schema::improbable::graphtier::Path* RouteFindResponse::mutable_field1_path() {
  set_has_field1_path();
  if (field1_path_ == NULL) {
    field1_path_ = new ::schema::improbable::graphtier::Path;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.graphtier.RouteFindResponse.field1_path)
  return field1_path_;
}
inline ::schema::improbable::graphtier::Path* RouteFindResponse::release_field1_path() {
  // @@protoc_insertion_point(field_release:schema.improbable.graphtier.RouteFindResponse.field1_path)
  clear_has_field1_path();
  ::schema::improbable::graphtier::Path* temp = field1_path_;
  field1_path_ = NULL;
  return temp;
}
inline void RouteFindResponse::set_allocated_field1_path(::schema::improbable::graphtier::Path* field1_path) {
  delete field1_path_;
  field1_path_ = field1_path;
  if (field1_path) {
    set_has_field1_path();
  } else {
    clear_has_field1_path();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.graphtier.RouteFindResponse.field1_path)
}

inline const RouteFindResponse* RouteFindResponse::internal_default_instance() {
  return &RouteFindResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// RouteFindRequest

// optional int64 field2_to = 2;
inline bool RouteFindRequest::has_field2_to() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RouteFindRequest::set_has_field2_to() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RouteFindRequest::clear_has_field2_to() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RouteFindRequest::clear_field2_to() {
  field2_to_ = GOOGLE_LONGLONG(0);
  clear_has_field2_to();
}
inline ::google::protobuf::int64 RouteFindRequest::field2_to() const {
  // @@protoc_insertion_point(field_get:schema.improbable.graphtier.RouteFindRequest.field2_to)
  return field2_to_;
}
inline void RouteFindRequest::set_field2_to(::google::protobuf::int64 value) {
  set_has_field2_to();
  field2_to_ = value;
  // @@protoc_insertion_point(field_set:schema.improbable.graphtier.RouteFindRequest.field2_to)
}

inline const RouteFindRequest* RouteFindRequest::internal_default_instance() {
  return &RouteFindRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeCommandsData

inline const NodeCommandsData* NodeCommandsData::internal_default_instance() {
  return &NodeCommandsData_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeCommands_Events

inline const NodeCommands_Events* NodeCommands_Events::internal_default_instance() {
  return &NodeCommands_Events_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeCommands_Commands

// optional .schema.improbable.graphtier.RouteFindRequest command_find_route_request = 1;
inline bool NodeCommands_Commands::has_command_find_route_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NodeCommands_Commands::set_has_command_find_route_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NodeCommands_Commands::clear_has_command_find_route_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NodeCommands_Commands::clear_command_find_route_request() {
  if (command_find_route_request_ != NULL) command_find_route_request_->::schema::improbable::graphtier::RouteFindRequest::Clear();
  clear_has_command_find_route_request();
}
inline const ::schema::improbable::graphtier::RouteFindRequest& NodeCommands_Commands::command_find_route_request() const {
  // @@protoc_insertion_point(field_get:schema.improbable.graphtier.NodeCommands.Commands.command_find_route_request)
  return command_find_route_request_ != NULL ? *command_find_route_request_
                         : *::schema::improbable::graphtier::RouteFindRequest::internal_default_instance();
}
inline ::schema::improbable::graphtier::RouteFindRequest* NodeCommands_Commands::mutable_command_find_route_request() {
  set_has_command_find_route_request();
  if (command_find_route_request_ == NULL) {
    command_find_route_request_ = new ::schema::improbable::graphtier::RouteFindRequest;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.graphtier.NodeCommands.Commands.command_find_route_request)
  return command_find_route_request_;
}
inline ::schema::improbable::graphtier::RouteFindRequest* NodeCommands_Commands::release_command_find_route_request() {
  // @@protoc_insertion_point(field_release:schema.improbable.graphtier.NodeCommands.Commands.command_find_route_request)
  clear_has_command_find_route_request();
  ::schema::improbable::graphtier::RouteFindRequest* temp = command_find_route_request_;
  command_find_route_request_ = NULL;
  return temp;
}
inline void NodeCommands_Commands::set_allocated_command_find_route_request(::schema::improbable::graphtier::RouteFindRequest* command_find_route_request) {
  delete command_find_route_request_;
  command_find_route_request_ = command_find_route_request;
  if (command_find_route_request) {
    set_has_command_find_route_request();
  } else {
    clear_has_command_find_route_request();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.graphtier.NodeCommands.Commands.command_find_route_request)
}

// optional .schema.improbable.graphtier.RouteFindResponse command_find_route_response = 2;
inline bool NodeCommands_Commands::has_command_find_route_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NodeCommands_Commands::set_has_command_find_route_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NodeCommands_Commands::clear_has_command_find_route_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NodeCommands_Commands::clear_command_find_route_response() {
  if (command_find_route_response_ != NULL) command_find_route_response_->::schema::improbable::graphtier::RouteFindResponse::Clear();
  clear_has_command_find_route_response();
}
inline const ::schema::improbable::graphtier::RouteFindResponse& NodeCommands_Commands::command_find_route_response() const {
  // @@protoc_insertion_point(field_get:schema.improbable.graphtier.NodeCommands.Commands.command_find_route_response)
  return command_find_route_response_ != NULL ? *command_find_route_response_
                         : *::schema::improbable::graphtier::RouteFindResponse::internal_default_instance();
}
inline ::schema::improbable::graphtier::RouteFindResponse* NodeCommands_Commands::mutable_command_find_route_response() {
  set_has_command_find_route_response();
  if (command_find_route_response_ == NULL) {
    command_find_route_response_ = new ::schema::improbable::graphtier::RouteFindResponse;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.graphtier.NodeCommands.Commands.command_find_route_response)
  return command_find_route_response_;
}
inline ::schema::improbable::graphtier::RouteFindResponse* NodeCommands_Commands::release_command_find_route_response() {
  // @@protoc_insertion_point(field_release:schema.improbable.graphtier.NodeCommands.Commands.command_find_route_response)
  clear_has_command_find_route_response();
  ::schema::improbable::graphtier::RouteFindResponse* temp = command_find_route_response_;
  command_find_route_response_ = NULL;
  return temp;
}
inline void NodeCommands_Commands::set_allocated_command_find_route_response(::schema::improbable::graphtier::RouteFindResponse* command_find_route_response) {
  delete command_find_route_response_;
  command_find_route_response_ = command_find_route_response;
  if (command_find_route_response) {
    set_has_command_find_route_response();
  } else {
    clear_has_command_find_route_response();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.graphtier.NodeCommands.Commands.command_find_route_response)
}

inline const NodeCommands_Commands* NodeCommands_Commands::internal_default_instance() {
  return &NodeCommands_Commands_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeCommands

inline const NodeCommands* NodeCommands::internal_default_instance() {
  return &NodeCommands_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace graphtier
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_improbable_2fgraphtier_2fNodeCommands_2eproto__INCLUDED
