// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/graphtier/NodeData.proto

#ifndef PROTOBUF_improbable_2fgraphtier_2fNodeData_2eproto__INCLUDED
#define PROTOBUF_improbable_2fgraphtier_2fNodeData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "improbable/entity_state.pb.h"
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace graphtier {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_improbable_2fgraphtier_2fNodeData_2eproto();
void protobuf_InitDefaults_improbable_2fgraphtier_2fNodeData_2eproto();
void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeData_2eproto();
void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeData_2eproto();

class NetworkAttachment;
class NodeData;
class NodeDataData;
class NodeData_Commands;
class NodeData_Events;

// ===================================================================

class NetworkAttachment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.NetworkAttachment) */ {
 public:
  NetworkAttachment();
  virtual ~NetworkAttachment();

  NetworkAttachment(const NetworkAttachment& from);

  inline NetworkAttachment& operator=(const NetworkAttachment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetworkAttachment& default_instance();

  static const NetworkAttachment* internal_default_instance();

  void Swap(NetworkAttachment* other);

  // implements Message ----------------------------------------------

  inline NetworkAttachment* New() const { return New(NULL); }

  NetworkAttachment* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetworkAttachment& from);
  void MergeFrom(const NetworkAttachment& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NetworkAttachment* other);
  void UnsafeMergeFrom(const NetworkAttachment& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 field1_network = 1;
  bool has_field1_network() const;
  void clear_field1_network();
  static const int kField1NetworkFieldNumber = 1;
  ::google::protobuf::int64 field1_network() const;
  void set_field1_network(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.NetworkAttachment)
 private:
  inline void set_has_field1_network();
  inline void clear_has_field1_network();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 field1_network_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeData_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeData_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeData_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NetworkAttachment> NetworkAttachment_default_instance_;

// -------------------------------------------------------------------

class NodeDataData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.NodeDataData) */ {
 public:
  NodeDataData();
  virtual ~NodeDataData();

  NodeDataData(const NodeDataData& from);

  inline NodeDataData& operator=(const NodeDataData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeDataData& default_instance();

  static const NodeDataData* internal_default_instance();

  void Swap(NodeDataData* other);

  // implements Message ----------------------------------------------

  inline NodeDataData* New() const { return New(NULL); }

  NodeDataData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeDataData& from);
  void MergeFrom(const NodeDataData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeDataData* other);
  void UnsafeMergeFrom(const NodeDataData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .schema.improbable.graphtier.NetworkAttachment field1_networks = 1;
  int field1_networks_size() const;
  void clear_field1_networks();
  static const int kField1NetworksFieldNumber = 1;
  const ::schema::improbable::graphtier::NetworkAttachment& field1_networks(int index) const;
  ::schema::improbable::graphtier::NetworkAttachment* mutable_field1_networks(int index);
  ::schema::improbable::graphtier::NetworkAttachment* add_field1_networks();
  ::google::protobuf::RepeatedPtrField< ::schema::improbable::graphtier::NetworkAttachment >*
      mutable_field1_networks();
  const ::google::protobuf::RepeatedPtrField< ::schema::improbable::graphtier::NetworkAttachment >&
      field1_networks() const;

  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.NodeDataData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::schema::improbable::graphtier::NetworkAttachment > field1_networks_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeData_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeData_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeData_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeDataData> NodeDataData_default_instance_;

// -------------------------------------------------------------------

class NodeData_Events : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.NodeData.Events) */ {
 public:
  NodeData_Events();
  virtual ~NodeData_Events();

  NodeData_Events(const NodeData_Events& from);

  inline NodeData_Events& operator=(const NodeData_Events& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeData_Events& default_instance();

  static const NodeData_Events* internal_default_instance();

  void Swap(NodeData_Events* other);

  // implements Message ----------------------------------------------

  inline NodeData_Events* New() const { return New(NULL); }

  NodeData_Events* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeData_Events& from);
  void MergeFrom(const NodeData_Events& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeData_Events* other);
  void UnsafeMergeFrom(const NodeData_Events& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.NodeData.Events)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeData_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeData_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeData_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeData_Events> NodeData_Events_default_instance_;

// -------------------------------------------------------------------

class NodeData_Commands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.NodeData.Commands) */ {
 public:
  NodeData_Commands();
  virtual ~NodeData_Commands();

  NodeData_Commands(const NodeData_Commands& from);

  inline NodeData_Commands& operator=(const NodeData_Commands& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeData_Commands& default_instance();

  static const NodeData_Commands* internal_default_instance();

  void Swap(NodeData_Commands* other);

  // implements Message ----------------------------------------------

  inline NodeData_Commands* New() const { return New(NULL); }

  NodeData_Commands* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeData_Commands& from);
  void MergeFrom(const NodeData_Commands& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeData_Commands* other);
  void UnsafeMergeFrom(const NodeData_Commands& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.NodeData.Commands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeData_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeData_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeData_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeData_Commands> NodeData_Commands_default_instance_;

// -------------------------------------------------------------------

class NodeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.graphtier.NodeData) */ {
 public:
  NodeData();
  virtual ~NodeData();

  NodeData(const NodeData& from);

  inline NodeData& operator=(const NodeData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeData& default_instance();

  static const NodeData* internal_default_instance();

  void Swap(NodeData* other);

  // implements Message ----------------------------------------------

  inline NodeData* New() const { return New(NULL); }

  NodeData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeData& from);
  void MergeFrom(const NodeData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeData* other);
  void UnsafeMergeFrom(const NodeData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef NodeData_Events Events;
  typedef NodeData_Commands Commands;

  // accessors -------------------------------------------------------

  static const int kComponentExtensionFieldNumber = 8006;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::graphtier::NodeDataData >, 11, false >
    component_extension;
  static const int kEventExtensionFieldNumber = 8006;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::graphtier::NodeData_Events >, 11, false >
    event_extension;
  static const int kCommandExtensionFieldNumber = 8006;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::graphtier::NodeData_Commands >, 11, false >
    command_extension;
  // @@protoc_insertion_point(class_scope:schema.improbable.graphtier.NodeData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fgraphtier_2fNodeData_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fgraphtier_2fNodeData_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fgraphtier_2fNodeData_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fgraphtier_2fNodeData_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeData> NodeData_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NetworkAttachment

// optional int64 field1_network = 1;
inline bool NetworkAttachment::has_field1_network() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetworkAttachment::set_has_field1_network() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetworkAttachment::clear_has_field1_network() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetworkAttachment::clear_field1_network() {
  field1_network_ = GOOGLE_LONGLONG(0);
  clear_has_field1_network();
}
inline ::google::protobuf::int64 NetworkAttachment::field1_network() const {
  // @@protoc_insertion_point(field_get:schema.improbable.graphtier.NetworkAttachment.field1_network)
  return field1_network_;
}
inline void NetworkAttachment::set_field1_network(::google::protobuf::int64 value) {
  set_has_field1_network();
  field1_network_ = value;
  // @@protoc_insertion_point(field_set:schema.improbable.graphtier.NetworkAttachment.field1_network)
}

inline const NetworkAttachment* NetworkAttachment::internal_default_instance() {
  return &NetworkAttachment_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeDataData

// repeated .schema.improbable.graphtier.NetworkAttachment field1_networks = 1;
inline int NodeDataData::field1_networks_size() const {
  return field1_networks_.size();
}
inline void NodeDataData::clear_field1_networks() {
  field1_networks_.Clear();
}
inline const ::schema::improbable::graphtier::NetworkAttachment& NodeDataData::field1_networks(int index) const {
  // @@protoc_insertion_point(field_get:schema.improbable.graphtier.NodeDataData.field1_networks)
  return field1_networks_.Get(index);
}
inline ::schema::improbable::graphtier::NetworkAttachment* NodeDataData::mutable_field1_networks(int index) {
  // @@protoc_insertion_point(field_mutable:schema.improbable.graphtier.NodeDataData.field1_networks)
  return field1_networks_.Mutable(index);
}
inline ::schema::improbable::graphtier::NetworkAttachment* NodeDataData::add_field1_networks() {
  // @@protoc_insertion_point(field_add:schema.improbable.graphtier.NodeDataData.field1_networks)
  return field1_networks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::schema::improbable::graphtier::NetworkAttachment >*
NodeDataData::mutable_field1_networks() {
  // @@protoc_insertion_point(field_mutable_list:schema.improbable.graphtier.NodeDataData.field1_networks)
  return &field1_networks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::schema::improbable::graphtier::NetworkAttachment >&
NodeDataData::field1_networks() const {
  // @@protoc_insertion_point(field_list:schema.improbable.graphtier.NodeDataData.field1_networks)
  return field1_networks_;
}

inline const NodeDataData* NodeDataData::internal_default_instance() {
  return &NodeDataData_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeData_Events

inline const NodeData_Events* NodeData_Events::internal_default_instance() {
  return &NodeData_Events_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeData_Commands

inline const NodeData_Commands* NodeData_Commands::internal_default_instance() {
  return &NodeData_Commands_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeData

inline const NodeData* NodeData::internal_default_instance() {
  return &NodeData_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace graphtier
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_improbable_2fgraphtier_2fNodeData_2eproto__INCLUDED
