// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/standard_library.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "improbable/standard_library.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {

namespace {

const ::google::protobuf::Descriptor* WorkerAttribute_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorkerAttribute_reflection_ = NULL;
const ::google::protobuf::Descriptor* WorkerAttributeSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorkerAttributeSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* WorkerRequirementSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorkerRequirementSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentAcl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ComponentAcl_reflection_ = NULL;
const ::google::protobuf::Descriptor* ComponentAcl_Field1WriteEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* EntityAclData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityAclData_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityAcl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityAcl_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityAcl_Events_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityAcl_Events_reflection_ = NULL;
const ::google::protobuf::Descriptor* EntityAcl_Commands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EntityAcl_Commands_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_improbable_2fstandard_5flibrary_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_improbable_2fstandard_5flibrary_2eproto() {
  protobuf_AddDesc_improbable_2fstandard_5flibrary_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "improbable/standard_library.proto");
  GOOGLE_CHECK(file != NULL);
  WorkerAttribute_descriptor_ = file->message_type(0);
  static const int WorkerAttribute_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAttribute, field1_name_),
  };
  WorkerAttribute_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WorkerAttribute_descriptor_,
      WorkerAttribute::internal_default_instance(),
      WorkerAttribute_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAttribute, _has_bits_),
      -1,
      -1,
      sizeof(WorkerAttribute),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAttribute, _internal_metadata_));
  WorkerAttributeSet_descriptor_ = file->message_type(1);
  static const int WorkerAttributeSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAttributeSet, field1_attribute_),
  };
  WorkerAttributeSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WorkerAttributeSet_descriptor_,
      WorkerAttributeSet::internal_default_instance(),
      WorkerAttributeSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAttributeSet, _has_bits_),
      -1,
      -1,
      sizeof(WorkerAttributeSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerAttributeSet, _internal_metadata_));
  WorkerRequirementSet_descriptor_ = file->message_type(2);
  static const int WorkerRequirementSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequirementSet, field1_attribute_set_),
  };
  WorkerRequirementSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WorkerRequirementSet_descriptor_,
      WorkerRequirementSet::internal_default_instance(),
      WorkerRequirementSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequirementSet, _has_bits_),
      -1,
      -1,
      sizeof(WorkerRequirementSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorkerRequirementSet, _internal_metadata_));
  ComponentAcl_descriptor_ = file->message_type(3);
  static const int ComponentAcl_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentAcl, field1_write_),
  };
  ComponentAcl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ComponentAcl_descriptor_,
      ComponentAcl::internal_default_instance(),
      ComponentAcl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentAcl, _has_bits_),
      -1,
      -1,
      sizeof(ComponentAcl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ComponentAcl, _internal_metadata_));
  ComponentAcl_Field1WriteEntry_descriptor_ = ComponentAcl_descriptor_->nested_type(0);
  EntityAclData_descriptor_ = file->message_type(4);
  static const int EntityAclData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAclData, field1_read_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAclData, field2_component_acl_),
  };
  EntityAclData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EntityAclData_descriptor_,
      EntityAclData::internal_default_instance(),
      EntityAclData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAclData, _has_bits_),
      -1,
      -1,
      sizeof(EntityAclData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAclData, _internal_metadata_));
  EntityAcl_descriptor_ = file->message_type(5);
  static const int EntityAcl_offsets_[1] = {
  };
  EntityAcl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EntityAcl_descriptor_,
      EntityAcl::internal_default_instance(),
      EntityAcl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAcl, _has_bits_),
      -1,
      -1,
      sizeof(EntityAcl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAcl, _internal_metadata_));
  EntityAcl_Events_descriptor_ = EntityAcl_descriptor_->nested_type(0);
  static const int EntityAcl_Events_offsets_[1] = {
  };
  EntityAcl_Events_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EntityAcl_Events_descriptor_,
      EntityAcl_Events::internal_default_instance(),
      EntityAcl_Events_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAcl_Events, _has_bits_),
      -1,
      -1,
      sizeof(EntityAcl_Events),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAcl_Events, _internal_metadata_));
  EntityAcl_Commands_descriptor_ = EntityAcl_descriptor_->nested_type(1);
  static const int EntityAcl_Commands_offsets_[1] = {
  };
  EntityAcl_Commands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EntityAcl_Commands_descriptor_,
      EntityAcl_Commands::internal_default_instance(),
      EntityAcl_Commands_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAcl_Commands, _has_bits_),
      -1,
      -1,
      sizeof(EntityAcl_Commands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EntityAcl_Commands, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_improbable_2fstandard_5flibrary_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WorkerAttribute_descriptor_, WorkerAttribute::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WorkerAttributeSet_descriptor_, WorkerAttributeSet::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WorkerRequirementSet_descriptor_, WorkerRequirementSet::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ComponentAcl_descriptor_, ComponentAcl::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        ComponentAcl_Field1WriteEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::google::protobuf::uint32,
            ::schema::improbable::WorkerRequirementSet,
            ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
            0>::CreateDefaultInstance(
                ComponentAcl_Field1WriteEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EntityAclData_descriptor_, EntityAclData::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EntityAcl_descriptor_, EntityAcl::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EntityAcl_Events_descriptor_, EntityAcl_Events::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EntityAcl_Commands_descriptor_, EntityAcl_Commands::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_improbable_2fstandard_5flibrary_2eproto() {
  WorkerAttribute_default_instance_.Shutdown();
  delete WorkerAttribute_reflection_;
  WorkerAttributeSet_default_instance_.Shutdown();
  delete WorkerAttributeSet_reflection_;
  WorkerRequirementSet_default_instance_.Shutdown();
  delete WorkerRequirementSet_reflection_;
  ComponentAcl_default_instance_.Shutdown();
  delete ComponentAcl_reflection_;
  EntityAclData_default_instance_.Shutdown();
  delete EntityAclData_reflection_;
  EntityAcl_default_instance_.Shutdown();
  delete EntityAcl_reflection_;
  EntityAcl_Events_default_instance_.Shutdown();
  delete EntityAcl_Events_reflection_;
  EntityAcl_Commands_default_instance_.Shutdown();
  delete EntityAcl_Commands_reflection_;
}

void protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::schema::improbable::protobuf_InitDefaults_improbable_2fentity_5fstate_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  WorkerAttribute_default_instance_.DefaultConstruct();
  WorkerAttributeSet_default_instance_.DefaultConstruct();
  WorkerRequirementSet_default_instance_.DefaultConstruct();
  ComponentAcl_default_instance_.DefaultConstruct();
  EntityAclData_default_instance_.DefaultConstruct();
  EntityAcl_default_instance_.DefaultConstruct();
  EntityAcl_Events_default_instance_.DefaultConstruct();
  EntityAcl_Commands_default_instance_.DefaultConstruct();
  WorkerAttribute_default_instance_.get_mutable()->InitAsDefaultInstance();
  WorkerAttributeSet_default_instance_.get_mutable()->InitAsDefaultInstance();
  WorkerRequirementSet_default_instance_.get_mutable()->InitAsDefaultInstance();
  ComponentAcl_default_instance_.get_mutable()->InitAsDefaultInstance();
  EntityAclData_default_instance_.get_mutable()->InitAsDefaultInstance();
  EntityAcl_default_instance_.get_mutable()->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityState::internal_default_instance(),
    50, 11, false, false,
    ::schema::improbable::EntityAclData::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityEvent::internal_default_instance(),
    50, 11, false, false,
    ::schema::improbable::EntityAcl_Events::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityCommand::internal_default_instance(),
    50, 11, false, false,
    ::schema::improbable::EntityAcl_Commands::internal_default_instance());
  EntityAcl_Events_default_instance_.get_mutable()->InitAsDefaultInstance();
  EntityAcl_Commands_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto_once_);
void protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto_once_,
                 &protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto_impl);
}
void protobuf_AddDesc_improbable_2fstandard_5flibrary_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!improbable/standard_library.proto\022\021sch"
    "ema.improbable\032\035improbable/entity_state."
    "proto\"4\n\017WorkerAttribute\022!\n\013field1_name\030"
    "\001 \001(\tB\014\302\363\030\004name\340\363\030\001\"a\n\022WorkerAttributeSe"
    "t\022K\n\020field1_attribute\030\001 \003(\0132\".schema.imp"
    "robable.WorkerAttributeB\r\302\363\030\tattribute\"n"
    "\n\024WorkerRequirementSet\022V\n\024field1_attribu"
    "te_set\030\001 \003(\0132%.schema.improbable.WorkerA"
    "ttributeSetB\021\302\363\030\rattribute_set\"\276\001\n\014Compo"
    "nentAcl\022Q\n\014field1_write\030\001 \003(\01320.schema.i"
    "mprobable.ComponentAcl.Field1WriteEntryB"
    "\t\302\363\030\005write\032[\n\020Field1WriteEntry\022\013\n\003key\030\001 "
    "\001(\r\0226\n\005value\030\002 \001(\0132\'.schema.improbable.W"
    "orkerRequirementSet:\0028\001\"\261\001\n\rEntityAclDat"
    "a\022J\n\013field1_read\030\001 \001(\0132\'.schema.improbab"
    "le.WorkerRequirementSetB\014\302\363\030\004read\340\363\030\001\022T\n"
    "\024field2_component_acl\030\002 \001(\0132\037.schema.imp"
    "robable.ComponentAclB\025\302\363\030\rcomponent_acl\340"
    "\363\030\001\"\340\002\n\tEntityAcl\032\010\n\006Events\032\n\n\010Commands2"
    "]\n\023component_extension\022\036.schema.improbab"
    "le.EntityState\0302 \001(\0132 .schema.improbable"
    ".EntityAclData2\\\n\017event_extension\022\036.sche"
    "ma.improbable.EntityEvent\0302 \001(\0132#.schema"
    ".improbable.EntityAcl.Events2b\n\021command_"
    "extension\022 .schema.improbable.EntityComm"
    "and\0302 \001(\0132%.schema.improbable.EntityAcl."
    "Commands:\034\302\363\030\030\n\024improbable.EntityAcl\0202B\033"
    "B\031StandardLibraryOuterClass", 1107);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "improbable/standard_library.proto", &protobuf_RegisterTypes);
  ::schema::improbable::protobuf_AddDesc_improbable_2fentity_5fstate_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_improbable_2fstandard_5flibrary_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_improbable_2fstandard_5flibrary_2eproto_once_);
void protobuf_AddDesc_improbable_2fstandard_5flibrary_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_improbable_2fstandard_5flibrary_2eproto_once_,
                 &protobuf_AddDesc_improbable_2fstandard_5flibrary_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_improbable_2fstandard_5flibrary_2eproto {
  StaticDescriptorInitializer_improbable_2fstandard_5flibrary_2eproto() {
    protobuf_AddDesc_improbable_2fstandard_5flibrary_2eproto();
  }
} static_descriptor_initializer_improbable_2fstandard_5flibrary_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkerAttribute::kField1NameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkerAttribute::WorkerAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.WorkerAttribute)
}

void WorkerAttribute::InitAsDefaultInstance() {
}

WorkerAttribute::WorkerAttribute(const WorkerAttribute& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.WorkerAttribute)
}

void WorkerAttribute::SharedCtor() {
  _cached_size_ = 0;
  field1_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

WorkerAttribute::~WorkerAttribute() {
  // @@protoc_insertion_point(destructor:schema.improbable.WorkerAttribute)
  SharedDtor();
}

void WorkerAttribute::SharedDtor() {
  field1_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WorkerAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkerAttribute::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorkerAttribute_descriptor_;
}

const WorkerAttribute& WorkerAttribute::default_instance() {
  protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WorkerAttribute> WorkerAttribute_default_instance_;

WorkerAttribute* WorkerAttribute::New(::google::protobuf::Arena* arena) const {
  WorkerAttribute* n = new WorkerAttribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkerAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.WorkerAttribute)
  if (has_field1_name()) {
    field1_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool WorkerAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.WorkerAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string field1_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field1_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->field1_name().data(), this->field1_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "schema.improbable.WorkerAttribute.field1_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.WorkerAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.WorkerAttribute)
  return false;
#undef DO_
}

void WorkerAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.WorkerAttribute)
  // optional string field1_name = 1;
  if (has_field1_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field1_name().data(), this->field1_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "schema.improbable.WorkerAttribute.field1_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->field1_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.WorkerAttribute)
}

::google::protobuf::uint8* WorkerAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.WorkerAttribute)
  // optional string field1_name = 1;
  if (has_field1_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->field1_name().data(), this->field1_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "schema.improbable.WorkerAttribute.field1_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->field1_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.WorkerAttribute)
  return target;
}

size_t WorkerAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.WorkerAttribute)
  size_t total_size = 0;

  // optional string field1_name = 1;
  if (has_field1_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->field1_name());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkerAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.WorkerAttribute)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WorkerAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkerAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.WorkerAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.WorkerAttribute)
    UnsafeMergeFrom(*source);
  }
}

void WorkerAttribute::MergeFrom(const WorkerAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.WorkerAttribute)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WorkerAttribute::UnsafeMergeFrom(const WorkerAttribute& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1_name()) {
      set_has_field1_name();
      field1_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field1_name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void WorkerAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.WorkerAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerAttribute::CopyFrom(const WorkerAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.WorkerAttribute)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WorkerAttribute::IsInitialized() const {

  return true;
}

void WorkerAttribute::Swap(WorkerAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkerAttribute::InternalSwap(WorkerAttribute* other) {
  field1_name_.Swap(&other->field1_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkerAttribute::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorkerAttribute_descriptor_;
  metadata.reflection = WorkerAttribute_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorkerAttribute

// optional string field1_name = 1;
bool WorkerAttribute::has_field1_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WorkerAttribute::set_has_field1_name() {
  _has_bits_[0] |= 0x00000001u;
}
void WorkerAttribute::clear_has_field1_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void WorkerAttribute::clear_field1_name() {
  field1_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_field1_name();
}
const ::std::string& WorkerAttribute::field1_name() const {
  // @@protoc_insertion_point(field_get:schema.improbable.WorkerAttribute.field1_name)
  return field1_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WorkerAttribute::set_field1_name(const ::std::string& value) {
  set_has_field1_name();
  field1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:schema.improbable.WorkerAttribute.field1_name)
}
void WorkerAttribute::set_field1_name(const char* value) {
  set_has_field1_name();
  field1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:schema.improbable.WorkerAttribute.field1_name)
}
void WorkerAttribute::set_field1_name(const char* value, size_t size) {
  set_has_field1_name();
  field1_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:schema.improbable.WorkerAttribute.field1_name)
}
::std::string* WorkerAttribute::mutable_field1_name() {
  set_has_field1_name();
  // @@protoc_insertion_point(field_mutable:schema.improbable.WorkerAttribute.field1_name)
  return field1_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* WorkerAttribute::release_field1_name() {
  // @@protoc_insertion_point(field_release:schema.improbable.WorkerAttribute.field1_name)
  clear_has_field1_name();
  return field1_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void WorkerAttribute::set_allocated_field1_name(::std::string* field1_name) {
  if (field1_name != NULL) {
    set_has_field1_name();
  } else {
    clear_has_field1_name();
  }
  field1_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field1_name);
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.WorkerAttribute.field1_name)
}

inline const WorkerAttribute* WorkerAttribute::internal_default_instance() {
  return &WorkerAttribute_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkerAttributeSet::kField1AttributeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkerAttributeSet::WorkerAttributeSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.WorkerAttributeSet)
}

void WorkerAttributeSet::InitAsDefaultInstance() {
}

WorkerAttributeSet::WorkerAttributeSet(const WorkerAttributeSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.WorkerAttributeSet)
}

void WorkerAttributeSet::SharedCtor() {
  _cached_size_ = 0;
}

WorkerAttributeSet::~WorkerAttributeSet() {
  // @@protoc_insertion_point(destructor:schema.improbable.WorkerAttributeSet)
  SharedDtor();
}

void WorkerAttributeSet::SharedDtor() {
}

void WorkerAttributeSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkerAttributeSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorkerAttributeSet_descriptor_;
}

const WorkerAttributeSet& WorkerAttributeSet::default_instance() {
  protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WorkerAttributeSet> WorkerAttributeSet_default_instance_;

WorkerAttributeSet* WorkerAttributeSet::New(::google::protobuf::Arena* arena) const {
  WorkerAttributeSet* n = new WorkerAttributeSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkerAttributeSet::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.WorkerAttributeSet)
  field1_attribute_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool WorkerAttributeSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.WorkerAttributeSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .schema.improbable.WorkerAttribute field1_attribute = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_field1_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field1_attribute()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_field1_attribute;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.WorkerAttributeSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.WorkerAttributeSet)
  return false;
#undef DO_
}

void WorkerAttributeSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.WorkerAttributeSet)
  // repeated .schema.improbable.WorkerAttribute field1_attribute = 1;
  for (unsigned int i = 0, n = this->field1_attribute_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->field1_attribute(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.WorkerAttributeSet)
}

::google::protobuf::uint8* WorkerAttributeSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.WorkerAttributeSet)
  // repeated .schema.improbable.WorkerAttribute field1_attribute = 1;
  for (unsigned int i = 0, n = this->field1_attribute_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->field1_attribute(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.WorkerAttributeSet)
  return target;
}

size_t WorkerAttributeSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.WorkerAttributeSet)
  size_t total_size = 0;

  // repeated .schema.improbable.WorkerAttribute field1_attribute = 1;
  {
    unsigned int count = this->field1_attribute_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field1_attribute(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkerAttributeSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.WorkerAttributeSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WorkerAttributeSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkerAttributeSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.WorkerAttributeSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.WorkerAttributeSet)
    UnsafeMergeFrom(*source);
  }
}

void WorkerAttributeSet::MergeFrom(const WorkerAttributeSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.WorkerAttributeSet)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WorkerAttributeSet::UnsafeMergeFrom(const WorkerAttributeSet& from) {
  GOOGLE_DCHECK(&from != this);
  field1_attribute_.MergeFrom(from.field1_attribute_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void WorkerAttributeSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.WorkerAttributeSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerAttributeSet::CopyFrom(const WorkerAttributeSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.WorkerAttributeSet)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WorkerAttributeSet::IsInitialized() const {

  return true;
}

void WorkerAttributeSet::Swap(WorkerAttributeSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkerAttributeSet::InternalSwap(WorkerAttributeSet* other) {
  field1_attribute_.UnsafeArenaSwap(&other->field1_attribute_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkerAttributeSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorkerAttributeSet_descriptor_;
  metadata.reflection = WorkerAttributeSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorkerAttributeSet

// repeated .schema.improbable.WorkerAttribute field1_attribute = 1;
int WorkerAttributeSet::field1_attribute_size() const {
  return field1_attribute_.size();
}
void WorkerAttributeSet::clear_field1_attribute() {
  field1_attribute_.Clear();
}
const ::schema::improbable::WorkerAttribute& WorkerAttributeSet::field1_attribute(int index) const {
  // @@protoc_insertion_point(field_get:schema.improbable.WorkerAttributeSet.field1_attribute)
  return field1_attribute_.Get(index);
}
::schema::improbable::WorkerAttribute* WorkerAttributeSet::mutable_field1_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:schema.improbable.WorkerAttributeSet.field1_attribute)
  return field1_attribute_.Mutable(index);
}
::schema::improbable::WorkerAttribute* WorkerAttributeSet::add_field1_attribute() {
  // @@protoc_insertion_point(field_add:schema.improbable.WorkerAttributeSet.field1_attribute)
  return field1_attribute_.Add();
}
::google::protobuf::RepeatedPtrField< ::schema::improbable::WorkerAttribute >*
WorkerAttributeSet::mutable_field1_attribute() {
  // @@protoc_insertion_point(field_mutable_list:schema.improbable.WorkerAttributeSet.field1_attribute)
  return &field1_attribute_;
}
const ::google::protobuf::RepeatedPtrField< ::schema::improbable::WorkerAttribute >&
WorkerAttributeSet::field1_attribute() const {
  // @@protoc_insertion_point(field_list:schema.improbable.WorkerAttributeSet.field1_attribute)
  return field1_attribute_;
}

inline const WorkerAttributeSet* WorkerAttributeSet::internal_default_instance() {
  return &WorkerAttributeSet_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorkerRequirementSet::kField1AttributeSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorkerRequirementSet::WorkerRequirementSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.WorkerRequirementSet)
}

void WorkerRequirementSet::InitAsDefaultInstance() {
}

WorkerRequirementSet::WorkerRequirementSet(const WorkerRequirementSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.WorkerRequirementSet)
}

void WorkerRequirementSet::SharedCtor() {
  _cached_size_ = 0;
}

WorkerRequirementSet::~WorkerRequirementSet() {
  // @@protoc_insertion_point(destructor:schema.improbable.WorkerRequirementSet)
  SharedDtor();
}

void WorkerRequirementSet::SharedDtor() {
}

void WorkerRequirementSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorkerRequirementSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorkerRequirementSet_descriptor_;
}

const WorkerRequirementSet& WorkerRequirementSet::default_instance() {
  protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WorkerRequirementSet> WorkerRequirementSet_default_instance_;

WorkerRequirementSet* WorkerRequirementSet::New(::google::protobuf::Arena* arena) const {
  WorkerRequirementSet* n = new WorkerRequirementSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorkerRequirementSet::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.WorkerRequirementSet)
  field1_attribute_set_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool WorkerRequirementSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.WorkerRequirementSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .schema.improbable.WorkerAttributeSet field1_attribute_set = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_field1_attribute_set:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field1_attribute_set()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_field1_attribute_set;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.WorkerRequirementSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.WorkerRequirementSet)
  return false;
#undef DO_
}

void WorkerRequirementSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.WorkerRequirementSet)
  // repeated .schema.improbable.WorkerAttributeSet field1_attribute_set = 1;
  for (unsigned int i = 0, n = this->field1_attribute_set_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->field1_attribute_set(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.WorkerRequirementSet)
}

::google::protobuf::uint8* WorkerRequirementSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.WorkerRequirementSet)
  // repeated .schema.improbable.WorkerAttributeSet field1_attribute_set = 1;
  for (unsigned int i = 0, n = this->field1_attribute_set_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->field1_attribute_set(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.WorkerRequirementSet)
  return target;
}

size_t WorkerRequirementSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.WorkerRequirementSet)
  size_t total_size = 0;

  // repeated .schema.improbable.WorkerAttributeSet field1_attribute_set = 1;
  {
    unsigned int count = this->field1_attribute_set_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field1_attribute_set(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorkerRequirementSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.WorkerRequirementSet)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WorkerRequirementSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorkerRequirementSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.WorkerRequirementSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.WorkerRequirementSet)
    UnsafeMergeFrom(*source);
  }
}

void WorkerRequirementSet::MergeFrom(const WorkerRequirementSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.WorkerRequirementSet)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WorkerRequirementSet::UnsafeMergeFrom(const WorkerRequirementSet& from) {
  GOOGLE_DCHECK(&from != this);
  field1_attribute_set_.MergeFrom(from.field1_attribute_set_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void WorkerRequirementSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.WorkerRequirementSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorkerRequirementSet::CopyFrom(const WorkerRequirementSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.WorkerRequirementSet)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WorkerRequirementSet::IsInitialized() const {

  return true;
}

void WorkerRequirementSet::Swap(WorkerRequirementSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorkerRequirementSet::InternalSwap(WorkerRequirementSet* other) {
  field1_attribute_set_.UnsafeArenaSwap(&other->field1_attribute_set_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorkerRequirementSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorkerRequirementSet_descriptor_;
  metadata.reflection = WorkerRequirementSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorkerRequirementSet

// repeated .schema.improbable.WorkerAttributeSet field1_attribute_set = 1;
int WorkerRequirementSet::field1_attribute_set_size() const {
  return field1_attribute_set_.size();
}
void WorkerRequirementSet::clear_field1_attribute_set() {
  field1_attribute_set_.Clear();
}
const ::schema::improbable::WorkerAttributeSet& WorkerRequirementSet::field1_attribute_set(int index) const {
  // @@protoc_insertion_point(field_get:schema.improbable.WorkerRequirementSet.field1_attribute_set)
  return field1_attribute_set_.Get(index);
}
::schema::improbable::WorkerAttributeSet* WorkerRequirementSet::mutable_field1_attribute_set(int index) {
  // @@protoc_insertion_point(field_mutable:schema.improbable.WorkerRequirementSet.field1_attribute_set)
  return field1_attribute_set_.Mutable(index);
}
::schema::improbable::WorkerAttributeSet* WorkerRequirementSet::add_field1_attribute_set() {
  // @@protoc_insertion_point(field_add:schema.improbable.WorkerRequirementSet.field1_attribute_set)
  return field1_attribute_set_.Add();
}
::google::protobuf::RepeatedPtrField< ::schema::improbable::WorkerAttributeSet >*
WorkerRequirementSet::mutable_field1_attribute_set() {
  // @@protoc_insertion_point(field_mutable_list:schema.improbable.WorkerRequirementSet.field1_attribute_set)
  return &field1_attribute_set_;
}
const ::google::protobuf::RepeatedPtrField< ::schema::improbable::WorkerAttributeSet >&
WorkerRequirementSet::field1_attribute_set() const {
  // @@protoc_insertion_point(field_list:schema.improbable.WorkerRequirementSet.field1_attribute_set)
  return field1_attribute_set_;
}

inline const WorkerRequirementSet* WorkerRequirementSet::internal_default_instance() {
  return &WorkerRequirementSet_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ComponentAcl::kField1WriteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ComponentAcl::ComponentAcl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.ComponentAcl)
}

void ComponentAcl::InitAsDefaultInstance() {
}

ComponentAcl::ComponentAcl(const ComponentAcl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.ComponentAcl)
}

void ComponentAcl::SharedCtor() {
  _cached_size_ = 0;
  field1_write_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  field1_write_.SetEntryDescriptor(
      &::schema::improbable::ComponentAcl_Field1WriteEntry_descriptor_);
}

ComponentAcl::~ComponentAcl() {
  // @@protoc_insertion_point(destructor:schema.improbable.ComponentAcl)
  SharedDtor();
}

void ComponentAcl::SharedDtor() {
}

void ComponentAcl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ComponentAcl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ComponentAcl_descriptor_;
}

const ComponentAcl& ComponentAcl::default_instance() {
  protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ComponentAcl> ComponentAcl_default_instance_;

ComponentAcl* ComponentAcl::New(::google::protobuf::Arena* arena) const {
  ComponentAcl* n = new ComponentAcl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ComponentAcl::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.ComponentAcl)
  field1_write_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ComponentAcl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.ComponentAcl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<uint32, .schema.improbable.WorkerRequirementSet> field1_write = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_field1_write:
          ComponentAcl_Field1WriteEntry::Parser< ::google::protobuf::internal::MapField<
              ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet > > parser(&field1_write_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_field1_write;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.ComponentAcl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.ComponentAcl)
  return false;
#undef DO_
}

void ComponentAcl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.ComponentAcl)
  // map<uint32, .schema.improbable.WorkerRequirementSet> field1_write = 1;
  if (!this->field1_write().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterminstic() &&
        this->field1_write().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->field1_write().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >::const_iterator
          it = this->field1_write().begin();
          it != this->field1_write().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<ComponentAcl_Field1WriteEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(field1_write_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<ComponentAcl_Field1WriteEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >::const_iterator
          it = this->field1_write().begin();
          it != this->field1_write().end(); ++it) {
        entry.reset(field1_write_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.ComponentAcl)
}

::google::protobuf::uint8* ComponentAcl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.ComponentAcl)
  // map<uint32, .schema.improbable.WorkerRequirementSet> field1_write = 1;
  if (!this->field1_write().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->field1_write().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->field1_write().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >::const_iterator
          it = this->field1_write().begin();
          it != this->field1_write().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<ComponentAcl_Field1WriteEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(field1_write_.NewEntryWrapper(
            items[i].second->first, items[i].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<ComponentAcl_Field1WriteEntry> entry;
      for (::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >::const_iterator
          it = this->field1_write().begin();
          it != this->field1_write().end(); ++it) {
        entry.reset(field1_write_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.ComponentAcl)
  return target;
}

size_t ComponentAcl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.ComponentAcl)
  size_t total_size = 0;

  // map<uint32, .schema.improbable.WorkerRequirementSet> field1_write = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->field1_write_size());
  {
    ::google::protobuf::scoped_ptr<ComponentAcl_Field1WriteEntry> entry;
    for (::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >::const_iterator
        it = this->field1_write().begin();
        it != this->field1_write().end(); ++it) {
      entry.reset(field1_write_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ComponentAcl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.ComponentAcl)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ComponentAcl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ComponentAcl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.ComponentAcl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.ComponentAcl)
    UnsafeMergeFrom(*source);
  }
}

void ComponentAcl::MergeFrom(const ComponentAcl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.ComponentAcl)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ComponentAcl::UnsafeMergeFrom(const ComponentAcl& from) {
  GOOGLE_DCHECK(&from != this);
  field1_write_.MergeFrom(from.field1_write_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ComponentAcl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.ComponentAcl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComponentAcl::CopyFrom(const ComponentAcl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.ComponentAcl)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ComponentAcl::IsInitialized() const {

  return true;
}

void ComponentAcl::Swap(ComponentAcl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ComponentAcl::InternalSwap(ComponentAcl* other) {
  field1_write_.Swap(&other->field1_write_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ComponentAcl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ComponentAcl_descriptor_;
  metadata.reflection = ComponentAcl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ComponentAcl

// map<uint32, .schema.improbable.WorkerRequirementSet> field1_write = 1;
int ComponentAcl::field1_write_size() const {
  return field1_write_.size();
}
void ComponentAcl::clear_field1_write() {
  field1_write_.Clear();
}
 const ::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >&
ComponentAcl::field1_write() const {
  // @@protoc_insertion_point(field_map:schema.improbable.ComponentAcl.field1_write)
  return field1_write_.GetMap();
}
 ::google::protobuf::Map< ::google::protobuf::uint32, ::schema::improbable::WorkerRequirementSet >*
ComponentAcl::mutable_field1_write() {
  // @@protoc_insertion_point(field_mutable_map:schema.improbable.ComponentAcl.field1_write)
  return field1_write_.MutableMap();
}

inline const ComponentAcl* ComponentAcl::internal_default_instance() {
  return &ComponentAcl_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityAclData::kField1ReadFieldNumber;
const int EntityAclData::kField2ComponentAclFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityAclData::EntityAclData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.EntityAclData)
}

void EntityAclData::InitAsDefaultInstance() {
  field1_read_ = const_cast< ::schema::improbable::WorkerRequirementSet*>(
      ::schema::improbable::WorkerRequirementSet::internal_default_instance());
  field2_component_acl_ = const_cast< ::schema::improbable::ComponentAcl*>(
      ::schema::improbable::ComponentAcl::internal_default_instance());
}

EntityAclData::EntityAclData(const EntityAclData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.EntityAclData)
}

void EntityAclData::SharedCtor() {
  _cached_size_ = 0;
  field1_read_ = NULL;
  field2_component_acl_ = NULL;
}

EntityAclData::~EntityAclData() {
  // @@protoc_insertion_point(destructor:schema.improbable.EntityAclData)
  SharedDtor();
}

void EntityAclData::SharedDtor() {
  if (this != &EntityAclData_default_instance_.get()) {
    delete field1_read_;
    delete field2_component_acl_;
  }
}

void EntityAclData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityAclData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityAclData_descriptor_;
}

const EntityAclData& EntityAclData::default_instance() {
  protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EntityAclData> EntityAclData_default_instance_;

EntityAclData* EntityAclData::New(::google::protobuf::Arena* arena) const {
  EntityAclData* n = new EntityAclData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityAclData::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.EntityAclData)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_field1_read()) {
      if (field1_read_ != NULL) field1_read_->::schema::improbable::WorkerRequirementSet::Clear();
    }
    if (has_field2_component_acl()) {
      if (field2_component_acl_ != NULL) field2_component_acl_->::schema::improbable::ComponentAcl::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EntityAclData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.EntityAclData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .schema.improbable.WorkerRequirementSet field1_read = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field1_read()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_field2_component_acl;
        break;
      }

      // optional .schema.improbable.ComponentAcl field2_component_acl = 2;
      case 2: {
        if (tag == 18) {
         parse_field2_component_acl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field2_component_acl()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.EntityAclData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.EntityAclData)
  return false;
#undef DO_
}

void EntityAclData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.EntityAclData)
  // optional .schema.improbable.WorkerRequirementSet field1_read = 1;
  if (has_field1_read()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->field1_read_, output);
  }

  // optional .schema.improbable.ComponentAcl field2_component_acl = 2;
  if (has_field2_component_acl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->field2_component_acl_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.EntityAclData)
}

::google::protobuf::uint8* EntityAclData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.EntityAclData)
  // optional .schema.improbable.WorkerRequirementSet field1_read = 1;
  if (has_field1_read()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->field1_read_, false, target);
  }

  // optional .schema.improbable.ComponentAcl field2_component_acl = 2;
  if (has_field2_component_acl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->field2_component_acl_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.EntityAclData)
  return target;
}

size_t EntityAclData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.EntityAclData)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .schema.improbable.WorkerRequirementSet field1_read = 1;
    if (has_field1_read()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->field1_read_);
    }

    // optional .schema.improbable.ComponentAcl field2_component_acl = 2;
    if (has_field2_component_acl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->field2_component_acl_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityAclData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.EntityAclData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EntityAclData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityAclData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.EntityAclData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.EntityAclData)
    UnsafeMergeFrom(*source);
  }
}

void EntityAclData::MergeFrom(const EntityAclData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.EntityAclData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EntityAclData::UnsafeMergeFrom(const EntityAclData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1_read()) {
      mutable_field1_read()->::schema::improbable::WorkerRequirementSet::MergeFrom(from.field1_read());
    }
    if (from.has_field2_component_acl()) {
      mutable_field2_component_acl()->::schema::improbable::ComponentAcl::MergeFrom(from.field2_component_acl());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void EntityAclData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.EntityAclData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityAclData::CopyFrom(const EntityAclData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.EntityAclData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EntityAclData::IsInitialized() const {

  return true;
}

void EntityAclData::Swap(EntityAclData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityAclData::InternalSwap(EntityAclData* other) {
  std::swap(field1_read_, other->field1_read_);
  std::swap(field2_component_acl_, other->field2_component_acl_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityAclData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityAclData_descriptor_;
  metadata.reflection = EntityAclData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityAclData

// optional .schema.improbable.WorkerRequirementSet field1_read = 1;
bool EntityAclData::has_field1_read() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EntityAclData::set_has_field1_read() {
  _has_bits_[0] |= 0x00000001u;
}
void EntityAclData::clear_has_field1_read() {
  _has_bits_[0] &= ~0x00000001u;
}
void EntityAclData::clear_field1_read() {
  if (field1_read_ != NULL) field1_read_->::schema::improbable::WorkerRequirementSet::Clear();
  clear_has_field1_read();
}
const ::schema::improbable::WorkerRequirementSet& EntityAclData::field1_read() const {
  // @@protoc_insertion_point(field_get:schema.improbable.EntityAclData.field1_read)
  return field1_read_ != NULL ? *field1_read_
                         : *::schema::improbable::WorkerRequirementSet::internal_default_instance();
}
::schema::improbable::WorkerRequirementSet* EntityAclData::mutable_field1_read() {
  set_has_field1_read();
  if (field1_read_ == NULL) {
    field1_read_ = new ::schema::improbable::WorkerRequirementSet;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.EntityAclData.field1_read)
  return field1_read_;
}
::schema::improbable::WorkerRequirementSet* EntityAclData::release_field1_read() {
  // @@protoc_insertion_point(field_release:schema.improbable.EntityAclData.field1_read)
  clear_has_field1_read();
  ::schema::improbable::WorkerRequirementSet* temp = field1_read_;
  field1_read_ = NULL;
  return temp;
}
void EntityAclData::set_allocated_field1_read(::schema::improbable::WorkerRequirementSet* field1_read) {
  delete field1_read_;
  field1_read_ = field1_read;
  if (field1_read) {
    set_has_field1_read();
  } else {
    clear_has_field1_read();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.EntityAclData.field1_read)
}

// optional .schema.improbable.ComponentAcl field2_component_acl = 2;
bool EntityAclData::has_field2_component_acl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EntityAclData::set_has_field2_component_acl() {
  _has_bits_[0] |= 0x00000002u;
}
void EntityAclData::clear_has_field2_component_acl() {
  _has_bits_[0] &= ~0x00000002u;
}
void EntityAclData::clear_field2_component_acl() {
  if (field2_component_acl_ != NULL) field2_component_acl_->::schema::improbable::ComponentAcl::Clear();
  clear_has_field2_component_acl();
}
const ::schema::improbable::ComponentAcl& EntityAclData::field2_component_acl() const {
  // @@protoc_insertion_point(field_get:schema.improbable.EntityAclData.field2_component_acl)
  return field2_component_acl_ != NULL ? *field2_component_acl_
                         : *::schema::improbable::ComponentAcl::internal_default_instance();
}
::schema::improbable::ComponentAcl* EntityAclData::mutable_field2_component_acl() {
  set_has_field2_component_acl();
  if (field2_component_acl_ == NULL) {
    field2_component_acl_ = new ::schema::improbable::ComponentAcl;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.EntityAclData.field2_component_acl)
  return field2_component_acl_;
}
::schema::improbable::ComponentAcl* EntityAclData::release_field2_component_acl() {
  // @@protoc_insertion_point(field_release:schema.improbable.EntityAclData.field2_component_acl)
  clear_has_field2_component_acl();
  ::schema::improbable::ComponentAcl* temp = field2_component_acl_;
  field2_component_acl_ = NULL;
  return temp;
}
void EntityAclData::set_allocated_field2_component_acl(::schema::improbable::ComponentAcl* field2_component_acl) {
  delete field2_component_acl_;
  field2_component_acl_ = field2_component_acl;
  if (field2_component_acl) {
    set_has_field2_component_acl();
  } else {
    clear_has_field2_component_acl();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.EntityAclData.field2_component_acl)
}

inline const EntityAclData* EntityAclData::internal_default_instance() {
  return &EntityAclData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityAcl_Events::EntityAcl_Events()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.EntityAcl.Events)
}

void EntityAcl_Events::InitAsDefaultInstance() {
}

EntityAcl_Events::EntityAcl_Events(const EntityAcl_Events& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.EntityAcl.Events)
}

void EntityAcl_Events::SharedCtor() {
  _cached_size_ = 0;
}

EntityAcl_Events::~EntityAcl_Events() {
  // @@protoc_insertion_point(destructor:schema.improbable.EntityAcl.Events)
  SharedDtor();
}

void EntityAcl_Events::SharedDtor() {
}

void EntityAcl_Events::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityAcl_Events::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityAcl_Events_descriptor_;
}

const EntityAcl_Events& EntityAcl_Events::default_instance() {
  protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EntityAcl_Events> EntityAcl_Events_default_instance_;

EntityAcl_Events* EntityAcl_Events::New(::google::protobuf::Arena* arena) const {
  EntityAcl_Events* n = new EntityAcl_Events;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityAcl_Events::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.EntityAcl.Events)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EntityAcl_Events::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.EntityAcl.Events)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.EntityAcl.Events)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.EntityAcl.Events)
  return false;
#undef DO_
}

void EntityAcl_Events::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.EntityAcl.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.EntityAcl.Events)
}

::google::protobuf::uint8* EntityAcl_Events::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.EntityAcl.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.EntityAcl.Events)
  return target;
}

size_t EntityAcl_Events::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.EntityAcl.Events)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityAcl_Events::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.EntityAcl.Events)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EntityAcl_Events* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityAcl_Events>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.EntityAcl.Events)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.EntityAcl.Events)
    UnsafeMergeFrom(*source);
  }
}

void EntityAcl_Events::MergeFrom(const EntityAcl_Events& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.EntityAcl.Events)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EntityAcl_Events::UnsafeMergeFrom(const EntityAcl_Events& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void EntityAcl_Events::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.EntityAcl.Events)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityAcl_Events::CopyFrom(const EntityAcl_Events& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.EntityAcl.Events)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EntityAcl_Events::IsInitialized() const {

  return true;
}

void EntityAcl_Events::Swap(EntityAcl_Events* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityAcl_Events::InternalSwap(EntityAcl_Events* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityAcl_Events::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityAcl_Events_descriptor_;
  metadata.reflection = EntityAcl_Events_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityAcl_Commands::EntityAcl_Commands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.EntityAcl.Commands)
}

void EntityAcl_Commands::InitAsDefaultInstance() {
}

EntityAcl_Commands::EntityAcl_Commands(const EntityAcl_Commands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.EntityAcl.Commands)
}

void EntityAcl_Commands::SharedCtor() {
  _cached_size_ = 0;
}

EntityAcl_Commands::~EntityAcl_Commands() {
  // @@protoc_insertion_point(destructor:schema.improbable.EntityAcl.Commands)
  SharedDtor();
}

void EntityAcl_Commands::SharedDtor() {
}

void EntityAcl_Commands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityAcl_Commands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityAcl_Commands_descriptor_;
}

const EntityAcl_Commands& EntityAcl_Commands::default_instance() {
  protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EntityAcl_Commands> EntityAcl_Commands_default_instance_;

EntityAcl_Commands* EntityAcl_Commands::New(::google::protobuf::Arena* arena) const {
  EntityAcl_Commands* n = new EntityAcl_Commands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityAcl_Commands::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.EntityAcl.Commands)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EntityAcl_Commands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.EntityAcl.Commands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.EntityAcl.Commands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.EntityAcl.Commands)
  return false;
#undef DO_
}

void EntityAcl_Commands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.EntityAcl.Commands)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.EntityAcl.Commands)
}

::google::protobuf::uint8* EntityAcl_Commands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.EntityAcl.Commands)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.EntityAcl.Commands)
  return target;
}

size_t EntityAcl_Commands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.EntityAcl.Commands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityAcl_Commands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.EntityAcl.Commands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EntityAcl_Commands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityAcl_Commands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.EntityAcl.Commands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.EntityAcl.Commands)
    UnsafeMergeFrom(*source);
  }
}

void EntityAcl_Commands::MergeFrom(const EntityAcl_Commands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.EntityAcl.Commands)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EntityAcl_Commands::UnsafeMergeFrom(const EntityAcl_Commands& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void EntityAcl_Commands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.EntityAcl.Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityAcl_Commands::CopyFrom(const EntityAcl_Commands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.EntityAcl.Commands)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EntityAcl_Commands::IsInitialized() const {

  return true;
}

void EntityAcl_Commands::Swap(EntityAcl_Commands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityAcl_Commands::InternalSwap(EntityAcl_Commands* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityAcl_Commands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityAcl_Commands_descriptor_;
  metadata.reflection = EntityAcl_Commands_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityAcl::kComponentExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::EntityAclData >, 11, false >
  EntityAcl::component_extension(kComponentExtensionFieldNumber, *::schema::improbable::EntityAclData::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityAcl::kEventExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::EntityAcl_Events >, 11, false >
  EntityAcl::event_extension(kEventExtensionFieldNumber, *::schema::improbable::EntityAcl_Events::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityAcl::kCommandExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::EntityAcl_Commands >, 11, false >
  EntityAcl::command_extension(kCommandExtensionFieldNumber, *::schema::improbable::EntityAcl_Commands::internal_default_instance());
EntityAcl::EntityAcl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.EntityAcl)
}

void EntityAcl::InitAsDefaultInstance() {
}

EntityAcl::EntityAcl(const EntityAcl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.EntityAcl)
}

void EntityAcl::SharedCtor() {
  _cached_size_ = 0;
}

EntityAcl::~EntityAcl() {
  // @@protoc_insertion_point(destructor:schema.improbable.EntityAcl)
  SharedDtor();
}

void EntityAcl::SharedDtor() {
}

void EntityAcl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityAcl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EntityAcl_descriptor_;
}

const EntityAcl& EntityAcl::default_instance() {
  protobuf_InitDefaults_improbable_2fstandard_5flibrary_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EntityAcl> EntityAcl_default_instance_;

EntityAcl* EntityAcl::New(::google::protobuf::Arena* arena) const {
  EntityAcl* n = new EntityAcl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityAcl::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.EntityAcl)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool EntityAcl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.EntityAcl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.EntityAcl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.EntityAcl)
  return false;
#undef DO_
}

void EntityAcl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.EntityAcl)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.EntityAcl)
}

::google::protobuf::uint8* EntityAcl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.EntityAcl)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.EntityAcl)
  return target;
}

size_t EntityAcl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.EntityAcl)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityAcl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.EntityAcl)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EntityAcl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityAcl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.EntityAcl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.EntityAcl)
    UnsafeMergeFrom(*source);
  }
}

void EntityAcl::MergeFrom(const EntityAcl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.EntityAcl)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EntityAcl::UnsafeMergeFrom(const EntityAcl& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void EntityAcl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.EntityAcl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityAcl::CopyFrom(const EntityAcl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.EntityAcl)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EntityAcl::IsInitialized() const {

  return true;
}

void EntityAcl::Swap(EntityAcl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityAcl::InternalSwap(EntityAcl* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityAcl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EntityAcl_descriptor_;
  metadata.reflection = EntityAcl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EntityAcl_Events

inline const EntityAcl_Events* EntityAcl_Events::internal_default_instance() {
  return &EntityAcl_Events_default_instance_.get();
}
// -------------------------------------------------------------------

// EntityAcl_Commands

inline const EntityAcl_Commands* EntityAcl_Commands::internal_default_instance() {
  return &EntityAcl_Commands_default_instance_.get();
}
// -------------------------------------------------------------------

// EntityAcl

inline const EntityAcl* EntityAcl::internal_default_instance() {
  return &EntityAcl_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)
