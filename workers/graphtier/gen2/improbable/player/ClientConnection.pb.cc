// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/player/ClientConnection.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "improbable/player/ClientConnection.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace player {

namespace {

const ::google::protobuf::Descriptor* ClientDisconnectRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientDisconnectRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientDisconnectResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientDisconnectResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartbeatRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartbeatRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartbeatResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartbeatResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientConnectionData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientConnectionData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientConnection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientConnection_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientConnection_Events_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientConnection_Events_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientConnection_Commands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientConnection_Commands_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto() {
  protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "improbable/player/ClientConnection.proto");
  GOOGLE_CHECK(file != NULL);
  ClientDisconnectRequest_descriptor_ = file->message_type(0);
  static const int ClientDisconnectRequest_offsets_[1] = {
  };
  ClientDisconnectRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientDisconnectRequest_descriptor_,
      ClientDisconnectRequest::internal_default_instance(),
      ClientDisconnectRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientDisconnectRequest, _has_bits_),
      -1,
      -1,
      sizeof(ClientDisconnectRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientDisconnectRequest, _internal_metadata_));
  ClientDisconnectResponse_descriptor_ = file->message_type(1);
  static const int ClientDisconnectResponse_offsets_[1] = {
  };
  ClientDisconnectResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientDisconnectResponse_descriptor_,
      ClientDisconnectResponse::internal_default_instance(),
      ClientDisconnectResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientDisconnectResponse, _has_bits_),
      -1,
      -1,
      sizeof(ClientDisconnectResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientDisconnectResponse, _internal_metadata_));
  HeartbeatRequest_descriptor_ = file->message_type(2);
  static const int HeartbeatRequest_offsets_[1] = {
  };
  HeartbeatRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartbeatRequest_descriptor_,
      HeartbeatRequest::internal_default_instance(),
      HeartbeatRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRequest, _has_bits_),
      -1,
      -1,
      sizeof(HeartbeatRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatRequest, _internal_metadata_));
  HeartbeatResponse_descriptor_ = file->message_type(3);
  static const int HeartbeatResponse_offsets_[1] = {
  };
  HeartbeatResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeartbeatResponse_descriptor_,
      HeartbeatResponse::internal_default_instance(),
      HeartbeatResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatResponse, _has_bits_),
      -1,
      -1,
      sizeof(HeartbeatResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartbeatResponse, _internal_metadata_));
  ClientConnectionData_descriptor_ = file->message_type(4);
  static const int ClientConnectionData_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnectionData, field1_timeout_beats_remaining_),
  };
  ClientConnectionData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientConnectionData_descriptor_,
      ClientConnectionData::internal_default_instance(),
      ClientConnectionData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnectionData, _has_bits_),
      -1,
      -1,
      sizeof(ClientConnectionData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnectionData, _internal_metadata_));
  ClientConnection_descriptor_ = file->message_type(5);
  static const int ClientConnection_offsets_[1] = {
  };
  ClientConnection_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientConnection_descriptor_,
      ClientConnection::internal_default_instance(),
      ClientConnection_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnection, _has_bits_),
      -1,
      -1,
      sizeof(ClientConnection),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnection, _internal_metadata_));
  ClientConnection_Events_descriptor_ = ClientConnection_descriptor_->nested_type(0);
  static const int ClientConnection_Events_offsets_[1] = {
  };
  ClientConnection_Events_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientConnection_Events_descriptor_,
      ClientConnection_Events::internal_default_instance(),
      ClientConnection_Events_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnection_Events, _has_bits_),
      -1,
      -1,
      sizeof(ClientConnection_Events),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnection_Events, _internal_metadata_));
  ClientConnection_Commands_descriptor_ = ClientConnection_descriptor_->nested_type(1);
  static const int ClientConnection_Commands_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnection_Commands, command_heartbeat_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnection_Commands, command_heartbeat_response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnection_Commands, command_disconnect_client_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnection_Commands, command_disconnect_client_response_),
  };
  ClientConnection_Commands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientConnection_Commands_descriptor_,
      ClientConnection_Commands::internal_default_instance(),
      ClientConnection_Commands_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnection_Commands, _has_bits_),
      -1,
      -1,
      sizeof(ClientConnection_Commands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConnection_Commands, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientDisconnectRequest_descriptor_, ClientDisconnectRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientDisconnectResponse_descriptor_, ClientDisconnectResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartbeatRequest_descriptor_, HeartbeatRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeartbeatResponse_descriptor_, HeartbeatResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientConnectionData_descriptor_, ClientConnectionData::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientConnection_descriptor_, ClientConnection::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientConnection_Events_descriptor_, ClientConnection_Events::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientConnection_Commands_descriptor_, ClientConnection_Commands::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto() {
  ClientDisconnectRequest_default_instance_.Shutdown();
  delete ClientDisconnectRequest_reflection_;
  ClientDisconnectResponse_default_instance_.Shutdown();
  delete ClientDisconnectResponse_reflection_;
  HeartbeatRequest_default_instance_.Shutdown();
  delete HeartbeatRequest_reflection_;
  HeartbeatResponse_default_instance_.Shutdown();
  delete HeartbeatResponse_reflection_;
  ClientConnectionData_default_instance_.Shutdown();
  delete ClientConnectionData_reflection_;
  ClientConnection_default_instance_.Shutdown();
  delete ClientConnection_reflection_;
  ClientConnection_Events_default_instance_.Shutdown();
  delete ClientConnection_Events_reflection_;
  ClientConnection_Commands_default_instance_.Shutdown();
  delete ClientConnection_Commands_reflection_;
}

void protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::schema::improbable::protobuf_InitDefaults_improbable_2fentity_5fstate_2eproto();
  ClientDisconnectRequest_default_instance_.DefaultConstruct();
  ClientDisconnectResponse_default_instance_.DefaultConstruct();
  HeartbeatRequest_default_instance_.DefaultConstruct();
  HeartbeatResponse_default_instance_.DefaultConstruct();
  ClientConnectionData_default_instance_.DefaultConstruct();
  ClientConnection_default_instance_.DefaultConstruct();
  ClientConnection_Events_default_instance_.DefaultConstruct();
  ClientConnection_Commands_default_instance_.DefaultConstruct();
  ClientDisconnectRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientDisconnectResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  HeartbeatRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  HeartbeatResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientConnectionData_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientConnection_default_instance_.get_mutable()->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityState::internal_default_instance(),
    1003, 11, false, false,
    ::schema::improbable::player::ClientConnectionData::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityEvent::internal_default_instance(),
    1003, 11, false, false,
    ::schema::improbable::player::ClientConnection_Events::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityCommand::internal_default_instance(),
    1003, 11, false, false,
    ::schema::improbable::player::ClientConnection_Commands::internal_default_instance());
  ClientConnection_Events_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientConnection_Commands_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_once_);
void protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_once_,
                 &protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_impl);
}
void protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n(improbable/player/ClientConnection.pro"
    "to\022\030schema.improbable.player\032\035improbable"
    "/entity_state.proto\"\031\n\027ClientDisconnectR"
    "equest\"\032\n\030ClientDisconnectResponse\"\022\n\020He"
    "artbeatRequest\"\023\n\021HeartbeatResponse\"[\n\024C"
    "lientConnectionData\022C\n\036field1_timeout_be"
    "ats_remaining\030\001 \001(\rB\033\302\363\030\027timeout_beats_r"
    "emaining\"\202\006\n\020ClientConnection\032\010\n\006Events\032"
    "\350\002\n\010Commands\022M\n\031command_heartbeat_reques"
    "t\030\001 \001(\0132*.schema.improbable.player.Heart"
    "beatRequest\022O\n\032command_heartbeat_respons"
    "e\030\002 \001(\0132+.schema.improbable.player.Heart"
    "beatResponse\022\\\n!command_disconnect_clien"
    "t_request\030\003 \001(\01321.schema.improbable.play"
    "er.ClientDisconnectRequest\022^\n\"command_di"
    "sconnect_client_response\030\004 \001(\01322.schema."
    "improbable.player.ClientDisconnectRespon"
    "se2l\n\023component_extension\022\036.schema.impro"
    "bable.EntityState\030\353\007 \001(\0132..schema.improb"
    "able.player.ClientConnectionData2k\n\017even"
    "t_extension\022\036.schema.improbable.EntityEv"
    "ent\030\353\007 \001(\01321.schema.improbable.player.Cl"
    "ientConnection.Events2q\n\021command_extensi"
    "on\022 .schema.improbable.EntityCommand\030\353\007 "
    "\001(\01323.schema.improbable.player.ClientCon"
    "nection.Commands:+\302\363\030\'\n\"improbable.playe"
    "r.ClientConnection\020\353\007B\034B\032ClientConnectio"
    "nOuterClass", 1091);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "improbable/player/ClientConnection.proto", &protobuf_RegisterTypes);
  ::schema::improbable::protobuf_AddDesc_improbable_2fentity_5fstate_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_once_);
void protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_once_,
                 &protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_improbable_2fplayer_2fClientConnection_2eproto {
  StaticDescriptorInitializer_improbable_2fplayer_2fClientConnection_2eproto() {
    protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto();
  }
} static_descriptor_initializer_improbable_2fplayer_2fClientConnection_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientDisconnectRequest::ClientDisconnectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.player.ClientDisconnectRequest)
}

void ClientDisconnectRequest::InitAsDefaultInstance() {
}

ClientDisconnectRequest::ClientDisconnectRequest(const ClientDisconnectRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.player.ClientDisconnectRequest)
}

void ClientDisconnectRequest::SharedCtor() {
  _cached_size_ = 0;
}

ClientDisconnectRequest::~ClientDisconnectRequest() {
  // @@protoc_insertion_point(destructor:schema.improbable.player.ClientDisconnectRequest)
  SharedDtor();
}

void ClientDisconnectRequest::SharedDtor() {
}

void ClientDisconnectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientDisconnectRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientDisconnectRequest_descriptor_;
}

const ClientDisconnectRequest& ClientDisconnectRequest::default_instance() {
  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientDisconnectRequest> ClientDisconnectRequest_default_instance_;

ClientDisconnectRequest* ClientDisconnectRequest::New(::google::protobuf::Arena* arena) const {
  ClientDisconnectRequest* n = new ClientDisconnectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientDisconnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.player.ClientDisconnectRequest)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientDisconnectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.player.ClientDisconnectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.player.ClientDisconnectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.player.ClientDisconnectRequest)
  return false;
#undef DO_
}

void ClientDisconnectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.player.ClientDisconnectRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.player.ClientDisconnectRequest)
}

::google::protobuf::uint8* ClientDisconnectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.player.ClientDisconnectRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.player.ClientDisconnectRequest)
  return target;
}

size_t ClientDisconnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.player.ClientDisconnectRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientDisconnectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.player.ClientDisconnectRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientDisconnectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientDisconnectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.player.ClientDisconnectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.player.ClientDisconnectRequest)
    UnsafeMergeFrom(*source);
  }
}

void ClientDisconnectRequest::MergeFrom(const ClientDisconnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.player.ClientDisconnectRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientDisconnectRequest::UnsafeMergeFrom(const ClientDisconnectRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ClientDisconnectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.player.ClientDisconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientDisconnectRequest::CopyFrom(const ClientDisconnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.player.ClientDisconnectRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientDisconnectRequest::IsInitialized() const {

  return true;
}

void ClientDisconnectRequest::Swap(ClientDisconnectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientDisconnectRequest::InternalSwap(ClientDisconnectRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientDisconnectRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientDisconnectRequest_descriptor_;
  metadata.reflection = ClientDisconnectRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientDisconnectRequest

inline const ClientDisconnectRequest* ClientDisconnectRequest::internal_default_instance() {
  return &ClientDisconnectRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientDisconnectResponse::ClientDisconnectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.player.ClientDisconnectResponse)
}

void ClientDisconnectResponse::InitAsDefaultInstance() {
}

ClientDisconnectResponse::ClientDisconnectResponse(const ClientDisconnectResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.player.ClientDisconnectResponse)
}

void ClientDisconnectResponse::SharedCtor() {
  _cached_size_ = 0;
}

ClientDisconnectResponse::~ClientDisconnectResponse() {
  // @@protoc_insertion_point(destructor:schema.improbable.player.ClientDisconnectResponse)
  SharedDtor();
}

void ClientDisconnectResponse::SharedDtor() {
}

void ClientDisconnectResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientDisconnectResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientDisconnectResponse_descriptor_;
}

const ClientDisconnectResponse& ClientDisconnectResponse::default_instance() {
  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientDisconnectResponse> ClientDisconnectResponse_default_instance_;

ClientDisconnectResponse* ClientDisconnectResponse::New(::google::protobuf::Arena* arena) const {
  ClientDisconnectResponse* n = new ClientDisconnectResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientDisconnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.player.ClientDisconnectResponse)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientDisconnectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.player.ClientDisconnectResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.player.ClientDisconnectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.player.ClientDisconnectResponse)
  return false;
#undef DO_
}

void ClientDisconnectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.player.ClientDisconnectResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.player.ClientDisconnectResponse)
}

::google::protobuf::uint8* ClientDisconnectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.player.ClientDisconnectResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.player.ClientDisconnectResponse)
  return target;
}

size_t ClientDisconnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.player.ClientDisconnectResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientDisconnectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.player.ClientDisconnectResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientDisconnectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientDisconnectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.player.ClientDisconnectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.player.ClientDisconnectResponse)
    UnsafeMergeFrom(*source);
  }
}

void ClientDisconnectResponse::MergeFrom(const ClientDisconnectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.player.ClientDisconnectResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientDisconnectResponse::UnsafeMergeFrom(const ClientDisconnectResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ClientDisconnectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.player.ClientDisconnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientDisconnectResponse::CopyFrom(const ClientDisconnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.player.ClientDisconnectResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientDisconnectResponse::IsInitialized() const {

  return true;
}

void ClientDisconnectResponse::Swap(ClientDisconnectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientDisconnectResponse::InternalSwap(ClientDisconnectResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientDisconnectResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientDisconnectResponse_descriptor_;
  metadata.reflection = ClientDisconnectResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientDisconnectResponse

inline const ClientDisconnectResponse* ClientDisconnectResponse::internal_default_instance() {
  return &ClientDisconnectResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatRequest::HeartbeatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.player.HeartbeatRequest)
}

void HeartbeatRequest::InitAsDefaultInstance() {
}

HeartbeatRequest::HeartbeatRequest(const HeartbeatRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.player.HeartbeatRequest)
}

void HeartbeatRequest::SharedCtor() {
  _cached_size_ = 0;
}

HeartbeatRequest::~HeartbeatRequest() {
  // @@protoc_insertion_point(destructor:schema.improbable.player.HeartbeatRequest)
  SharedDtor();
}

void HeartbeatRequest::SharedDtor() {
}

void HeartbeatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartbeatRequest_descriptor_;
}

const HeartbeatRequest& HeartbeatRequest::default_instance() {
  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HeartbeatRequest> HeartbeatRequest_default_instance_;

HeartbeatRequest* HeartbeatRequest::New(::google::protobuf::Arena* arena) const {
  HeartbeatRequest* n = new HeartbeatRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.player.HeartbeatRequest)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HeartbeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.player.HeartbeatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.player.HeartbeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.player.HeartbeatRequest)
  return false;
#undef DO_
}

void HeartbeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.player.HeartbeatRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.player.HeartbeatRequest)
}

::google::protobuf::uint8* HeartbeatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.player.HeartbeatRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.player.HeartbeatRequest)
  return target;
}

size_t HeartbeatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.player.HeartbeatRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.player.HeartbeatRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeartbeatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.player.HeartbeatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.player.HeartbeatRequest)
    UnsafeMergeFrom(*source);
  }
}

void HeartbeatRequest::MergeFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.player.HeartbeatRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HeartbeatRequest::UnsafeMergeFrom(const HeartbeatRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void HeartbeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.player.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatRequest::CopyFrom(const HeartbeatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.player.HeartbeatRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HeartbeatRequest::IsInitialized() const {

  return true;
}

void HeartbeatRequest::Swap(HeartbeatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatRequest::InternalSwap(HeartbeatRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartbeatRequest_descriptor_;
  metadata.reflection = HeartbeatRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatRequest

inline const HeartbeatRequest* HeartbeatRequest::internal_default_instance() {
  return &HeartbeatRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatResponse::HeartbeatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.player.HeartbeatResponse)
}

void HeartbeatResponse::InitAsDefaultInstance() {
}

HeartbeatResponse::HeartbeatResponse(const HeartbeatResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.player.HeartbeatResponse)
}

void HeartbeatResponse::SharedCtor() {
  _cached_size_ = 0;
}

HeartbeatResponse::~HeartbeatResponse() {
  // @@protoc_insertion_point(destructor:schema.improbable.player.HeartbeatResponse)
  SharedDtor();
}

void HeartbeatResponse::SharedDtor() {
}

void HeartbeatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartbeatResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartbeatResponse_descriptor_;
}

const HeartbeatResponse& HeartbeatResponse::default_instance() {
  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HeartbeatResponse> HeartbeatResponse_default_instance_;

HeartbeatResponse* HeartbeatResponse::New(::google::protobuf::Arena* arena) const {
  HeartbeatResponse* n = new HeartbeatResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartbeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.player.HeartbeatResponse)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HeartbeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.player.HeartbeatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.player.HeartbeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.player.HeartbeatResponse)
  return false;
#undef DO_
}

void HeartbeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.player.HeartbeatResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.player.HeartbeatResponse)
}

::google::protobuf::uint8* HeartbeatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.player.HeartbeatResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.player.HeartbeatResponse)
  return target;
}

size_t HeartbeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.player.HeartbeatResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartbeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.player.HeartbeatResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeartbeatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.player.HeartbeatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.player.HeartbeatResponse)
    UnsafeMergeFrom(*source);
  }
}

void HeartbeatResponse::MergeFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.player.HeartbeatResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HeartbeatResponse::UnsafeMergeFrom(const HeartbeatResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void HeartbeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.player.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatResponse::CopyFrom(const HeartbeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.player.HeartbeatResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HeartbeatResponse::IsInitialized() const {

  return true;
}

void HeartbeatResponse::Swap(HeartbeatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatResponse::InternalSwap(HeartbeatResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartbeatResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartbeatResponse_descriptor_;
  metadata.reflection = HeartbeatResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartbeatResponse

inline const HeartbeatResponse* HeartbeatResponse::internal_default_instance() {
  return &HeartbeatResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConnectionData::kField1TimeoutBeatsRemainingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConnectionData::ClientConnectionData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.player.ClientConnectionData)
}

void ClientConnectionData::InitAsDefaultInstance() {
}

ClientConnectionData::ClientConnectionData(const ClientConnectionData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.player.ClientConnectionData)
}

void ClientConnectionData::SharedCtor() {
  _cached_size_ = 0;
  field1_timeout_beats_remaining_ = 0u;
}

ClientConnectionData::~ClientConnectionData() {
  // @@protoc_insertion_point(destructor:schema.improbable.player.ClientConnectionData)
  SharedDtor();
}

void ClientConnectionData::SharedDtor() {
}

void ClientConnectionData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientConnectionData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientConnectionData_descriptor_;
}

const ClientConnectionData& ClientConnectionData::default_instance() {
  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientConnectionData> ClientConnectionData_default_instance_;

ClientConnectionData* ClientConnectionData::New(::google::protobuf::Arena* arena) const {
  ClientConnectionData* n = new ClientConnectionData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientConnectionData::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.player.ClientConnectionData)
  field1_timeout_beats_remaining_ = 0u;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientConnectionData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.player.ClientConnectionData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 field1_timeout_beats_remaining = 1;
      case 1: {
        if (tag == 8) {
          set_has_field1_timeout_beats_remaining();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field1_timeout_beats_remaining_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.player.ClientConnectionData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.player.ClientConnectionData)
  return false;
#undef DO_
}

void ClientConnectionData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.player.ClientConnectionData)
  // optional uint32 field1_timeout_beats_remaining = 1;
  if (has_field1_timeout_beats_remaining()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->field1_timeout_beats_remaining(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.player.ClientConnectionData)
}

::google::protobuf::uint8* ClientConnectionData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.player.ClientConnectionData)
  // optional uint32 field1_timeout_beats_remaining = 1;
  if (has_field1_timeout_beats_remaining()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->field1_timeout_beats_remaining(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.player.ClientConnectionData)
  return target;
}

size_t ClientConnectionData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.player.ClientConnectionData)
  size_t total_size = 0;

  // optional uint32 field1_timeout_beats_remaining = 1;
  if (has_field1_timeout_beats_remaining()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field1_timeout_beats_remaining());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientConnectionData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.player.ClientConnectionData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientConnectionData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientConnectionData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.player.ClientConnectionData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.player.ClientConnectionData)
    UnsafeMergeFrom(*source);
  }
}

void ClientConnectionData::MergeFrom(const ClientConnectionData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.player.ClientConnectionData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientConnectionData::UnsafeMergeFrom(const ClientConnectionData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1_timeout_beats_remaining()) {
      set_field1_timeout_beats_remaining(from.field1_timeout_beats_remaining());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ClientConnectionData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.player.ClientConnectionData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientConnectionData::CopyFrom(const ClientConnectionData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.player.ClientConnectionData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientConnectionData::IsInitialized() const {

  return true;
}

void ClientConnectionData::Swap(ClientConnectionData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConnectionData::InternalSwap(ClientConnectionData* other) {
  std::swap(field1_timeout_beats_remaining_, other->field1_timeout_beats_remaining_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientConnectionData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientConnectionData_descriptor_;
  metadata.reflection = ClientConnectionData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientConnectionData

// optional uint32 field1_timeout_beats_remaining = 1;
bool ClientConnectionData::has_field1_timeout_beats_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ClientConnectionData::set_has_field1_timeout_beats_remaining() {
  _has_bits_[0] |= 0x00000001u;
}
void ClientConnectionData::clear_has_field1_timeout_beats_remaining() {
  _has_bits_[0] &= ~0x00000001u;
}
void ClientConnectionData::clear_field1_timeout_beats_remaining() {
  field1_timeout_beats_remaining_ = 0u;
  clear_has_field1_timeout_beats_remaining();
}
::google::protobuf::uint32 ClientConnectionData::field1_timeout_beats_remaining() const {
  // @@protoc_insertion_point(field_get:schema.improbable.player.ClientConnectionData.field1_timeout_beats_remaining)
  return field1_timeout_beats_remaining_;
}
void ClientConnectionData::set_field1_timeout_beats_remaining(::google::protobuf::uint32 value) {
  set_has_field1_timeout_beats_remaining();
  field1_timeout_beats_remaining_ = value;
  // @@protoc_insertion_point(field_set:schema.improbable.player.ClientConnectionData.field1_timeout_beats_remaining)
}

inline const ClientConnectionData* ClientConnectionData::internal_default_instance() {
  return &ClientConnectionData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConnection_Events::ClientConnection_Events()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.player.ClientConnection.Events)
}

void ClientConnection_Events::InitAsDefaultInstance() {
}

ClientConnection_Events::ClientConnection_Events(const ClientConnection_Events& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.player.ClientConnection.Events)
}

void ClientConnection_Events::SharedCtor() {
  _cached_size_ = 0;
}

ClientConnection_Events::~ClientConnection_Events() {
  // @@protoc_insertion_point(destructor:schema.improbable.player.ClientConnection.Events)
  SharedDtor();
}

void ClientConnection_Events::SharedDtor() {
}

void ClientConnection_Events::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientConnection_Events::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientConnection_Events_descriptor_;
}

const ClientConnection_Events& ClientConnection_Events::default_instance() {
  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientConnection_Events> ClientConnection_Events_default_instance_;

ClientConnection_Events* ClientConnection_Events::New(::google::protobuf::Arena* arena) const {
  ClientConnection_Events* n = new ClientConnection_Events;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientConnection_Events::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.player.ClientConnection.Events)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientConnection_Events::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.player.ClientConnection.Events)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.player.ClientConnection.Events)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.player.ClientConnection.Events)
  return false;
#undef DO_
}

void ClientConnection_Events::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.player.ClientConnection.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.player.ClientConnection.Events)
}

::google::protobuf::uint8* ClientConnection_Events::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.player.ClientConnection.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.player.ClientConnection.Events)
  return target;
}

size_t ClientConnection_Events::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.player.ClientConnection.Events)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientConnection_Events::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.player.ClientConnection.Events)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientConnection_Events* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientConnection_Events>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.player.ClientConnection.Events)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.player.ClientConnection.Events)
    UnsafeMergeFrom(*source);
  }
}

void ClientConnection_Events::MergeFrom(const ClientConnection_Events& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.player.ClientConnection.Events)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientConnection_Events::UnsafeMergeFrom(const ClientConnection_Events& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ClientConnection_Events::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.player.ClientConnection.Events)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientConnection_Events::CopyFrom(const ClientConnection_Events& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.player.ClientConnection.Events)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientConnection_Events::IsInitialized() const {

  return true;
}

void ClientConnection_Events::Swap(ClientConnection_Events* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConnection_Events::InternalSwap(ClientConnection_Events* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientConnection_Events::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientConnection_Events_descriptor_;
  metadata.reflection = ClientConnection_Events_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConnection_Commands::kCommandHeartbeatRequestFieldNumber;
const int ClientConnection_Commands::kCommandHeartbeatResponseFieldNumber;
const int ClientConnection_Commands::kCommandDisconnectClientRequestFieldNumber;
const int ClientConnection_Commands::kCommandDisconnectClientResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConnection_Commands::ClientConnection_Commands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.player.ClientConnection.Commands)
}

void ClientConnection_Commands::InitAsDefaultInstance() {
  command_heartbeat_request_ = const_cast< ::schema::improbable::player::HeartbeatRequest*>(
      ::schema::improbable::player::HeartbeatRequest::internal_default_instance());
  command_heartbeat_response_ = const_cast< ::schema::improbable::player::HeartbeatResponse*>(
      ::schema::improbable::player::HeartbeatResponse::internal_default_instance());
  command_disconnect_client_request_ = const_cast< ::schema::improbable::player::ClientDisconnectRequest*>(
      ::schema::improbable::player::ClientDisconnectRequest::internal_default_instance());
  command_disconnect_client_response_ = const_cast< ::schema::improbable::player::ClientDisconnectResponse*>(
      ::schema::improbable::player::ClientDisconnectResponse::internal_default_instance());
}

ClientConnection_Commands::ClientConnection_Commands(const ClientConnection_Commands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.player.ClientConnection.Commands)
}

void ClientConnection_Commands::SharedCtor() {
  _cached_size_ = 0;
  command_heartbeat_request_ = NULL;
  command_heartbeat_response_ = NULL;
  command_disconnect_client_request_ = NULL;
  command_disconnect_client_response_ = NULL;
}

ClientConnection_Commands::~ClientConnection_Commands() {
  // @@protoc_insertion_point(destructor:schema.improbable.player.ClientConnection.Commands)
  SharedDtor();
}

void ClientConnection_Commands::SharedDtor() {
  if (this != &ClientConnection_Commands_default_instance_.get()) {
    delete command_heartbeat_request_;
    delete command_heartbeat_response_;
    delete command_disconnect_client_request_;
    delete command_disconnect_client_response_;
  }
}

void ClientConnection_Commands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientConnection_Commands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientConnection_Commands_descriptor_;
}

const ClientConnection_Commands& ClientConnection_Commands::default_instance() {
  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientConnection_Commands> ClientConnection_Commands_default_instance_;

ClientConnection_Commands* ClientConnection_Commands::New(::google::protobuf::Arena* arena) const {
  ClientConnection_Commands* n = new ClientConnection_Commands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientConnection_Commands::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.player.ClientConnection.Commands)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_command_heartbeat_request()) {
      if (command_heartbeat_request_ != NULL) command_heartbeat_request_->::schema::improbable::player::HeartbeatRequest::Clear();
    }
    if (has_command_heartbeat_response()) {
      if (command_heartbeat_response_ != NULL) command_heartbeat_response_->::schema::improbable::player::HeartbeatResponse::Clear();
    }
    if (has_command_disconnect_client_request()) {
      if (command_disconnect_client_request_ != NULL) command_disconnect_client_request_->::schema::improbable::player::ClientDisconnectRequest::Clear();
    }
    if (has_command_disconnect_client_response()) {
      if (command_disconnect_client_response_ != NULL) command_disconnect_client_response_->::schema::improbable::player::ClientDisconnectResponse::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientConnection_Commands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.player.ClientConnection.Commands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .schema.improbable.player.HeartbeatRequest command_heartbeat_request = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command_heartbeat_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_command_heartbeat_response;
        break;
      }

      // optional .schema.improbable.player.HeartbeatResponse command_heartbeat_response = 2;
      case 2: {
        if (tag == 18) {
         parse_command_heartbeat_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command_heartbeat_response()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_command_disconnect_client_request;
        break;
      }

      // optional .schema.improbable.player.ClientDisconnectRequest command_disconnect_client_request = 3;
      case 3: {
        if (tag == 26) {
         parse_command_disconnect_client_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command_disconnect_client_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_command_disconnect_client_response;
        break;
      }

      // optional .schema.improbable.player.ClientDisconnectResponse command_disconnect_client_response = 4;
      case 4: {
        if (tag == 34) {
         parse_command_disconnect_client_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command_disconnect_client_response()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.player.ClientConnection.Commands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.player.ClientConnection.Commands)
  return false;
#undef DO_
}

void ClientConnection_Commands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.player.ClientConnection.Commands)
  // optional .schema.improbable.player.HeartbeatRequest command_heartbeat_request = 1;
  if (has_command_heartbeat_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->command_heartbeat_request_, output);
  }

  // optional .schema.improbable.player.HeartbeatResponse command_heartbeat_response = 2;
  if (has_command_heartbeat_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->command_heartbeat_response_, output);
  }

  // optional .schema.improbable.player.ClientDisconnectRequest command_disconnect_client_request = 3;
  if (has_command_disconnect_client_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->command_disconnect_client_request_, output);
  }

  // optional .schema.improbable.player.ClientDisconnectResponse command_disconnect_client_response = 4;
  if (has_command_disconnect_client_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->command_disconnect_client_response_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.player.ClientConnection.Commands)
}

::google::protobuf::uint8* ClientConnection_Commands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.player.ClientConnection.Commands)
  // optional .schema.improbable.player.HeartbeatRequest command_heartbeat_request = 1;
  if (has_command_heartbeat_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->command_heartbeat_request_, false, target);
  }

  // optional .schema.improbable.player.HeartbeatResponse command_heartbeat_response = 2;
  if (has_command_heartbeat_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->command_heartbeat_response_, false, target);
  }

  // optional .schema.improbable.player.ClientDisconnectRequest command_disconnect_client_request = 3;
  if (has_command_disconnect_client_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->command_disconnect_client_request_, false, target);
  }

  // optional .schema.improbable.player.ClientDisconnectResponse command_disconnect_client_response = 4;
  if (has_command_disconnect_client_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->command_disconnect_client_response_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.player.ClientConnection.Commands)
  return target;
}

size_t ClientConnection_Commands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.player.ClientConnection.Commands)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional .schema.improbable.player.HeartbeatRequest command_heartbeat_request = 1;
    if (has_command_heartbeat_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->command_heartbeat_request_);
    }

    // optional .schema.improbable.player.HeartbeatResponse command_heartbeat_response = 2;
    if (has_command_heartbeat_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->command_heartbeat_response_);
    }

    // optional .schema.improbable.player.ClientDisconnectRequest command_disconnect_client_request = 3;
    if (has_command_disconnect_client_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->command_disconnect_client_request_);
    }

    // optional .schema.improbable.player.ClientDisconnectResponse command_disconnect_client_response = 4;
    if (has_command_disconnect_client_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->command_disconnect_client_response_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientConnection_Commands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.player.ClientConnection.Commands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientConnection_Commands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientConnection_Commands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.player.ClientConnection.Commands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.player.ClientConnection.Commands)
    UnsafeMergeFrom(*source);
  }
}

void ClientConnection_Commands::MergeFrom(const ClientConnection_Commands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.player.ClientConnection.Commands)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientConnection_Commands::UnsafeMergeFrom(const ClientConnection_Commands& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_command_heartbeat_request()) {
      mutable_command_heartbeat_request()->::schema::improbable::player::HeartbeatRequest::MergeFrom(from.command_heartbeat_request());
    }
    if (from.has_command_heartbeat_response()) {
      mutable_command_heartbeat_response()->::schema::improbable::player::HeartbeatResponse::MergeFrom(from.command_heartbeat_response());
    }
    if (from.has_command_disconnect_client_request()) {
      mutable_command_disconnect_client_request()->::schema::improbable::player::ClientDisconnectRequest::MergeFrom(from.command_disconnect_client_request());
    }
    if (from.has_command_disconnect_client_response()) {
      mutable_command_disconnect_client_response()->::schema::improbable::player::ClientDisconnectResponse::MergeFrom(from.command_disconnect_client_response());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ClientConnection_Commands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.player.ClientConnection.Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientConnection_Commands::CopyFrom(const ClientConnection_Commands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.player.ClientConnection.Commands)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientConnection_Commands::IsInitialized() const {

  return true;
}

void ClientConnection_Commands::Swap(ClientConnection_Commands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConnection_Commands::InternalSwap(ClientConnection_Commands* other) {
  std::swap(command_heartbeat_request_, other->command_heartbeat_request_);
  std::swap(command_heartbeat_response_, other->command_heartbeat_response_);
  std::swap(command_disconnect_client_request_, other->command_disconnect_client_request_);
  std::swap(command_disconnect_client_response_, other->command_disconnect_client_response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientConnection_Commands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientConnection_Commands_descriptor_;
  metadata.reflection = ClientConnection_Commands_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConnection::kComponentExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::player::ClientConnectionData >, 11, false >
  ClientConnection::component_extension(kComponentExtensionFieldNumber, *::schema::improbable::player::ClientConnectionData::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConnection::kEventExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::player::ClientConnection_Events >, 11, false >
  ClientConnection::event_extension(kEventExtensionFieldNumber, *::schema::improbable::player::ClientConnection_Events::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConnection::kCommandExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::player::ClientConnection_Commands >, 11, false >
  ClientConnection::command_extension(kCommandExtensionFieldNumber, *::schema::improbable::player::ClientConnection_Commands::internal_default_instance());
ClientConnection::ClientConnection()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.player.ClientConnection)
}

void ClientConnection::InitAsDefaultInstance() {
}

ClientConnection::ClientConnection(const ClientConnection& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.player.ClientConnection)
}

void ClientConnection::SharedCtor() {
  _cached_size_ = 0;
}

ClientConnection::~ClientConnection() {
  // @@protoc_insertion_point(destructor:schema.improbable.player.ClientConnection)
  SharedDtor();
}

void ClientConnection::SharedDtor() {
}

void ClientConnection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientConnection::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientConnection_descriptor_;
}

const ClientConnection& ClientConnection::default_instance() {
  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientConnection> ClientConnection_default_instance_;

ClientConnection* ClientConnection::New(::google::protobuf::Arena* arena) const {
  ClientConnection* n = new ClientConnection;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientConnection::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.player.ClientConnection)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientConnection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.player.ClientConnection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.player.ClientConnection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.player.ClientConnection)
  return false;
#undef DO_
}

void ClientConnection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.player.ClientConnection)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.player.ClientConnection)
}

::google::protobuf::uint8* ClientConnection::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.player.ClientConnection)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.player.ClientConnection)
  return target;
}

size_t ClientConnection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.player.ClientConnection)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientConnection::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.player.ClientConnection)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientConnection* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientConnection>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.player.ClientConnection)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.player.ClientConnection)
    UnsafeMergeFrom(*source);
  }
}

void ClientConnection::MergeFrom(const ClientConnection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.player.ClientConnection)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientConnection::UnsafeMergeFrom(const ClientConnection& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ClientConnection::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.player.ClientConnection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientConnection::CopyFrom(const ClientConnection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.player.ClientConnection)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientConnection::IsInitialized() const {

  return true;
}

void ClientConnection::Swap(ClientConnection* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConnection::InternalSwap(ClientConnection* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientConnection::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientConnection_descriptor_;
  metadata.reflection = ClientConnection_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientConnection_Events

inline const ClientConnection_Events* ClientConnection_Events::internal_default_instance() {
  return &ClientConnection_Events_default_instance_.get();
}
// -------------------------------------------------------------------

// ClientConnection_Commands

// optional .schema.improbable.player.HeartbeatRequest command_heartbeat_request = 1;
bool ClientConnection_Commands::has_command_heartbeat_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ClientConnection_Commands::set_has_command_heartbeat_request() {
  _has_bits_[0] |= 0x00000001u;
}
void ClientConnection_Commands::clear_has_command_heartbeat_request() {
  _has_bits_[0] &= ~0x00000001u;
}
void ClientConnection_Commands::clear_command_heartbeat_request() {
  if (command_heartbeat_request_ != NULL) command_heartbeat_request_->::schema::improbable::player::HeartbeatRequest::Clear();
  clear_has_command_heartbeat_request();
}
const ::schema::improbable::player::HeartbeatRequest& ClientConnection_Commands::command_heartbeat_request() const {
  // @@protoc_insertion_point(field_get:schema.improbable.player.ClientConnection.Commands.command_heartbeat_request)
  return command_heartbeat_request_ != NULL ? *command_heartbeat_request_
                         : *::schema::improbable::player::HeartbeatRequest::internal_default_instance();
}
::schema::improbable::player::HeartbeatRequest* ClientConnection_Commands::mutable_command_heartbeat_request() {
  set_has_command_heartbeat_request();
  if (command_heartbeat_request_ == NULL) {
    command_heartbeat_request_ = new ::schema::improbable::player::HeartbeatRequest;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.player.ClientConnection.Commands.command_heartbeat_request)
  return command_heartbeat_request_;
}
::schema::improbable::player::HeartbeatRequest* ClientConnection_Commands::release_command_heartbeat_request() {
  // @@protoc_insertion_point(field_release:schema.improbable.player.ClientConnection.Commands.command_heartbeat_request)
  clear_has_command_heartbeat_request();
  ::schema::improbable::player::HeartbeatRequest* temp = command_heartbeat_request_;
  command_heartbeat_request_ = NULL;
  return temp;
}
void ClientConnection_Commands::set_allocated_command_heartbeat_request(::schema::improbable::player::HeartbeatRequest* command_heartbeat_request) {
  delete command_heartbeat_request_;
  command_heartbeat_request_ = command_heartbeat_request;
  if (command_heartbeat_request) {
    set_has_command_heartbeat_request();
  } else {
    clear_has_command_heartbeat_request();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.player.ClientConnection.Commands.command_heartbeat_request)
}

// optional .schema.improbable.player.HeartbeatResponse command_heartbeat_response = 2;
bool ClientConnection_Commands::has_command_heartbeat_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ClientConnection_Commands::set_has_command_heartbeat_response() {
  _has_bits_[0] |= 0x00000002u;
}
void ClientConnection_Commands::clear_has_command_heartbeat_response() {
  _has_bits_[0] &= ~0x00000002u;
}
void ClientConnection_Commands::clear_command_heartbeat_response() {
  if (command_heartbeat_response_ != NULL) command_heartbeat_response_->::schema::improbable::player::HeartbeatResponse::Clear();
  clear_has_command_heartbeat_response();
}
const ::schema::improbable::player::HeartbeatResponse& ClientConnection_Commands::command_heartbeat_response() const {
  // @@protoc_insertion_point(field_get:schema.improbable.player.ClientConnection.Commands.command_heartbeat_response)
  return command_heartbeat_response_ != NULL ? *command_heartbeat_response_
                         : *::schema::improbable::player::HeartbeatResponse::internal_default_instance();
}
::schema::improbable::player::HeartbeatResponse* ClientConnection_Commands::mutable_command_heartbeat_response() {
  set_has_command_heartbeat_response();
  if (command_heartbeat_response_ == NULL) {
    command_heartbeat_response_ = new ::schema::improbable::player::HeartbeatResponse;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.player.ClientConnection.Commands.command_heartbeat_response)
  return command_heartbeat_response_;
}
::schema::improbable::player::HeartbeatResponse* ClientConnection_Commands::release_command_heartbeat_response() {
  // @@protoc_insertion_point(field_release:schema.improbable.player.ClientConnection.Commands.command_heartbeat_response)
  clear_has_command_heartbeat_response();
  ::schema::improbable::player::HeartbeatResponse* temp = command_heartbeat_response_;
  command_heartbeat_response_ = NULL;
  return temp;
}
void ClientConnection_Commands::set_allocated_command_heartbeat_response(::schema::improbable::player::HeartbeatResponse* command_heartbeat_response) {
  delete command_heartbeat_response_;
  command_heartbeat_response_ = command_heartbeat_response;
  if (command_heartbeat_response) {
    set_has_command_heartbeat_response();
  } else {
    clear_has_command_heartbeat_response();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.player.ClientConnection.Commands.command_heartbeat_response)
}

// optional .schema.improbable.player.ClientDisconnectRequest command_disconnect_client_request = 3;
bool ClientConnection_Commands::has_command_disconnect_client_request() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ClientConnection_Commands::set_has_command_disconnect_client_request() {
  _has_bits_[0] |= 0x00000004u;
}
void ClientConnection_Commands::clear_has_command_disconnect_client_request() {
  _has_bits_[0] &= ~0x00000004u;
}
void ClientConnection_Commands::clear_command_disconnect_client_request() {
  if (command_disconnect_client_request_ != NULL) command_disconnect_client_request_->::schema::improbable::player::ClientDisconnectRequest::Clear();
  clear_has_command_disconnect_client_request();
}
const ::schema::improbable::player::ClientDisconnectRequest& ClientConnection_Commands::command_disconnect_client_request() const {
  // @@protoc_insertion_point(field_get:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_request)
  return command_disconnect_client_request_ != NULL ? *command_disconnect_client_request_
                         : *::schema::improbable::player::ClientDisconnectRequest::internal_default_instance();
}
::schema::improbable::player::ClientDisconnectRequest* ClientConnection_Commands::mutable_command_disconnect_client_request() {
  set_has_command_disconnect_client_request();
  if (command_disconnect_client_request_ == NULL) {
    command_disconnect_client_request_ = new ::schema::improbable::player::ClientDisconnectRequest;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_request)
  return command_disconnect_client_request_;
}
::schema::improbable::player::ClientDisconnectRequest* ClientConnection_Commands::release_command_disconnect_client_request() {
  // @@protoc_insertion_point(field_release:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_request)
  clear_has_command_disconnect_client_request();
  ::schema::improbable::player::ClientDisconnectRequest* temp = command_disconnect_client_request_;
  command_disconnect_client_request_ = NULL;
  return temp;
}
void ClientConnection_Commands::set_allocated_command_disconnect_client_request(::schema::improbable::player::ClientDisconnectRequest* command_disconnect_client_request) {
  delete command_disconnect_client_request_;
  command_disconnect_client_request_ = command_disconnect_client_request;
  if (command_disconnect_client_request) {
    set_has_command_disconnect_client_request();
  } else {
    clear_has_command_disconnect_client_request();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_request)
}

// optional .schema.improbable.player.ClientDisconnectResponse command_disconnect_client_response = 4;
bool ClientConnection_Commands::has_command_disconnect_client_response() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ClientConnection_Commands::set_has_command_disconnect_client_response() {
  _has_bits_[0] |= 0x00000008u;
}
void ClientConnection_Commands::clear_has_command_disconnect_client_response() {
  _has_bits_[0] &= ~0x00000008u;
}
void ClientConnection_Commands::clear_command_disconnect_client_response() {
  if (command_disconnect_client_response_ != NULL) command_disconnect_client_response_->::schema::improbable::player::ClientDisconnectResponse::Clear();
  clear_has_command_disconnect_client_response();
}
const ::schema::improbable::player::ClientDisconnectResponse& ClientConnection_Commands::command_disconnect_client_response() const {
  // @@protoc_insertion_point(field_get:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_response)
  return command_disconnect_client_response_ != NULL ? *command_disconnect_client_response_
                         : *::schema::improbable::player::ClientDisconnectResponse::internal_default_instance();
}
::schema::improbable::player::ClientDisconnectResponse* ClientConnection_Commands::mutable_command_disconnect_client_response() {
  set_has_command_disconnect_client_response();
  if (command_disconnect_client_response_ == NULL) {
    command_disconnect_client_response_ = new ::schema::improbable::player::ClientDisconnectResponse;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_response)
  return command_disconnect_client_response_;
}
::schema::improbable::player::ClientDisconnectResponse* ClientConnection_Commands::release_command_disconnect_client_response() {
  // @@protoc_insertion_point(field_release:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_response)
  clear_has_command_disconnect_client_response();
  ::schema::improbable::player::ClientDisconnectResponse* temp = command_disconnect_client_response_;
  command_disconnect_client_response_ = NULL;
  return temp;
}
void ClientConnection_Commands::set_allocated_command_disconnect_client_response(::schema::improbable::player::ClientDisconnectResponse* command_disconnect_client_response) {
  delete command_disconnect_client_response_;
  command_disconnect_client_response_ = command_disconnect_client_response;
  if (command_disconnect_client_response) {
    set_has_command_disconnect_client_response();
  } else {
    clear_has_command_disconnect_client_response();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_response)
}

inline const ClientConnection_Commands* ClientConnection_Commands::internal_default_instance() {
  return &ClientConnection_Commands_default_instance_.get();
}
// -------------------------------------------------------------------

// ClientConnection

inline const ClientConnection* ClientConnection::internal_default_instance() {
  return &ClientConnection_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace player
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)
