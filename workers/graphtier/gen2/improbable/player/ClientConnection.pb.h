// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/player/ClientConnection.proto

#ifndef PROTOBUF_improbable_2fplayer_2fClientConnection_2eproto__INCLUDED
#define PROTOBUF_improbable_2fplayer_2fClientConnection_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "improbable/entity_state.pb.h"
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace player {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto();
void protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto();
void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto();
void protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto();

class ClientConnection;
class ClientConnectionData;
class ClientConnection_Commands;
class ClientConnection_Events;
class ClientDisconnectRequest;
class ClientDisconnectResponse;
class HeartbeatRequest;
class HeartbeatResponse;

// ===================================================================

class ClientDisconnectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.player.ClientDisconnectRequest) */ {
 public:
  ClientDisconnectRequest();
  virtual ~ClientDisconnectRequest();

  ClientDisconnectRequest(const ClientDisconnectRequest& from);

  inline ClientDisconnectRequest& operator=(const ClientDisconnectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientDisconnectRequest& default_instance();

  static const ClientDisconnectRequest* internal_default_instance();

  void Swap(ClientDisconnectRequest* other);

  // implements Message ----------------------------------------------

  inline ClientDisconnectRequest* New() const { return New(NULL); }

  ClientDisconnectRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientDisconnectRequest& from);
  void MergeFrom(const ClientDisconnectRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDisconnectRequest* other);
  void UnsafeMergeFrom(const ClientDisconnectRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.player.ClientDisconnectRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClientDisconnectRequest> ClientDisconnectRequest_default_instance_;

// -------------------------------------------------------------------

class ClientDisconnectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.player.ClientDisconnectResponse) */ {
 public:
  ClientDisconnectResponse();
  virtual ~ClientDisconnectResponse();

  ClientDisconnectResponse(const ClientDisconnectResponse& from);

  inline ClientDisconnectResponse& operator=(const ClientDisconnectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientDisconnectResponse& default_instance();

  static const ClientDisconnectResponse* internal_default_instance();

  void Swap(ClientDisconnectResponse* other);

  // implements Message ----------------------------------------------

  inline ClientDisconnectResponse* New() const { return New(NULL); }

  ClientDisconnectResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientDisconnectResponse& from);
  void MergeFrom(const ClientDisconnectResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientDisconnectResponse* other);
  void UnsafeMergeFrom(const ClientDisconnectResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.player.ClientDisconnectResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClientDisconnectResponse> ClientDisconnectResponse_default_instance_;

// -------------------------------------------------------------------

class HeartbeatRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.player.HeartbeatRequest) */ {
 public:
  HeartbeatRequest();
  virtual ~HeartbeatRequest();

  HeartbeatRequest(const HeartbeatRequest& from);

  inline HeartbeatRequest& operator=(const HeartbeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatRequest& default_instance();

  static const HeartbeatRequest* internal_default_instance();

  void Swap(HeartbeatRequest* other);

  // implements Message ----------------------------------------------

  inline HeartbeatRequest* New() const { return New(NULL); }

  HeartbeatRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatRequest& from);
  void MergeFrom(const HeartbeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatRequest* other);
  void UnsafeMergeFrom(const HeartbeatRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.player.HeartbeatRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatRequest> HeartbeatRequest_default_instance_;

// -------------------------------------------------------------------

class HeartbeatResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.player.HeartbeatResponse) */ {
 public:
  HeartbeatResponse();
  virtual ~HeartbeatResponse();

  HeartbeatResponse(const HeartbeatResponse& from);

  inline HeartbeatResponse& operator=(const HeartbeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatResponse& default_instance();

  static const HeartbeatResponse* internal_default_instance();

  void Swap(HeartbeatResponse* other);

  // implements Message ----------------------------------------------

  inline HeartbeatResponse* New() const { return New(NULL); }

  HeartbeatResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartbeatResponse& from);
  void MergeFrom(const HeartbeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HeartbeatResponse* other);
  void UnsafeMergeFrom(const HeartbeatResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.player.HeartbeatResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatResponse> HeartbeatResponse_default_instance_;

// -------------------------------------------------------------------

class ClientConnectionData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.player.ClientConnectionData) */ {
 public:
  ClientConnectionData();
  virtual ~ClientConnectionData();

  ClientConnectionData(const ClientConnectionData& from);

  inline ClientConnectionData& operator=(const ClientConnectionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientConnectionData& default_instance();

  static const ClientConnectionData* internal_default_instance();

  void Swap(ClientConnectionData* other);

  // implements Message ----------------------------------------------

  inline ClientConnectionData* New() const { return New(NULL); }

  ClientConnectionData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientConnectionData& from);
  void MergeFrom(const ClientConnectionData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientConnectionData* other);
  void UnsafeMergeFrom(const ClientConnectionData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 field1_timeout_beats_remaining = 1;
  bool has_field1_timeout_beats_remaining() const;
  void clear_field1_timeout_beats_remaining();
  static const int kField1TimeoutBeatsRemainingFieldNumber = 1;
  ::google::protobuf::uint32 field1_timeout_beats_remaining() const;
  void set_field1_timeout_beats_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:schema.improbable.player.ClientConnectionData)
 private:
  inline void set_has_field1_timeout_beats_remaining();
  inline void clear_has_field1_timeout_beats_remaining();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 field1_timeout_beats_remaining_;
  friend void  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClientConnectionData> ClientConnectionData_default_instance_;

// -------------------------------------------------------------------

class ClientConnection_Events : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.player.ClientConnection.Events) */ {
 public:
  ClientConnection_Events();
  virtual ~ClientConnection_Events();

  ClientConnection_Events(const ClientConnection_Events& from);

  inline ClientConnection_Events& operator=(const ClientConnection_Events& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientConnection_Events& default_instance();

  static const ClientConnection_Events* internal_default_instance();

  void Swap(ClientConnection_Events* other);

  // implements Message ----------------------------------------------

  inline ClientConnection_Events* New() const { return New(NULL); }

  ClientConnection_Events* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientConnection_Events& from);
  void MergeFrom(const ClientConnection_Events& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientConnection_Events* other);
  void UnsafeMergeFrom(const ClientConnection_Events& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.player.ClientConnection.Events)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClientConnection_Events> ClientConnection_Events_default_instance_;

// -------------------------------------------------------------------

class ClientConnection_Commands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.player.ClientConnection.Commands) */ {
 public:
  ClientConnection_Commands();
  virtual ~ClientConnection_Commands();

  ClientConnection_Commands(const ClientConnection_Commands& from);

  inline ClientConnection_Commands& operator=(const ClientConnection_Commands& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientConnection_Commands& default_instance();

  static const ClientConnection_Commands* internal_default_instance();

  void Swap(ClientConnection_Commands* other);

  // implements Message ----------------------------------------------

  inline ClientConnection_Commands* New() const { return New(NULL); }

  ClientConnection_Commands* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientConnection_Commands& from);
  void MergeFrom(const ClientConnection_Commands& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientConnection_Commands* other);
  void UnsafeMergeFrom(const ClientConnection_Commands& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .schema.improbable.player.HeartbeatRequest command_heartbeat_request = 1;
  bool has_command_heartbeat_request() const;
  void clear_command_heartbeat_request();
  static const int kCommandHeartbeatRequestFieldNumber = 1;
  const ::schema::improbable::player::HeartbeatRequest& command_heartbeat_request() const;
  ::schema::improbable::player::HeartbeatRequest* mutable_command_heartbeat_request();
  ::schema::improbable::player::HeartbeatRequest* release_command_heartbeat_request();
  void set_allocated_command_heartbeat_request(::schema::improbable::player::HeartbeatRequest* command_heartbeat_request);

  // optional .schema.improbable.player.HeartbeatResponse command_heartbeat_response = 2;
  bool has_command_heartbeat_response() const;
  void clear_command_heartbeat_response();
  static const int kCommandHeartbeatResponseFieldNumber = 2;
  const ::schema::improbable::player::HeartbeatResponse& command_heartbeat_response() const;
  ::schema::improbable::player::HeartbeatResponse* mutable_command_heartbeat_response();
  ::schema::improbable::player::HeartbeatResponse* release_command_heartbeat_response();
  void set_allocated_command_heartbeat_response(::schema::improbable::player::HeartbeatResponse* command_heartbeat_response);

  // optional .schema.improbable.player.ClientDisconnectRequest command_disconnect_client_request = 3;
  bool has_command_disconnect_client_request() const;
  void clear_command_disconnect_client_request();
  static const int kCommandDisconnectClientRequestFieldNumber = 3;
  const ::schema::improbable::player::ClientDisconnectRequest& command_disconnect_client_request() const;
  ::schema::improbable::player::ClientDisconnectRequest* mutable_command_disconnect_client_request();
  ::schema::improbable::player::ClientDisconnectRequest* release_command_disconnect_client_request();
  void set_allocated_command_disconnect_client_request(::schema::improbable::player::ClientDisconnectRequest* command_disconnect_client_request);

  // optional .schema.improbable.player.ClientDisconnectResponse command_disconnect_client_response = 4;
  bool has_command_disconnect_client_response() const;
  void clear_command_disconnect_client_response();
  static const int kCommandDisconnectClientResponseFieldNumber = 4;
  const ::schema::improbable::player::ClientDisconnectResponse& command_disconnect_client_response() const;
  ::schema::improbable::player::ClientDisconnectResponse* mutable_command_disconnect_client_response();
  ::schema::improbable::player::ClientDisconnectResponse* release_command_disconnect_client_response();
  void set_allocated_command_disconnect_client_response(::schema::improbable::player::ClientDisconnectResponse* command_disconnect_client_response);

  // @@protoc_insertion_point(class_scope:schema.improbable.player.ClientConnection.Commands)
 private:
  inline void set_has_command_heartbeat_request();
  inline void clear_has_command_heartbeat_request();
  inline void set_has_command_heartbeat_response();
  inline void clear_has_command_heartbeat_response();
  inline void set_has_command_disconnect_client_request();
  inline void clear_has_command_disconnect_client_request();
  inline void set_has_command_disconnect_client_response();
  inline void clear_has_command_disconnect_client_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::schema::improbable::player::HeartbeatRequest* command_heartbeat_request_;
  ::schema::improbable::player::HeartbeatResponse* command_heartbeat_response_;
  ::schema::improbable::player::ClientDisconnectRequest* command_disconnect_client_request_;
  ::schema::improbable::player::ClientDisconnectResponse* command_disconnect_client_response_;
  friend void  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClientConnection_Commands> ClientConnection_Commands_default_instance_;

// -------------------------------------------------------------------

class ClientConnection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.player.ClientConnection) */ {
 public:
  ClientConnection();
  virtual ~ClientConnection();

  ClientConnection(const ClientConnection& from);

  inline ClientConnection& operator=(const ClientConnection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientConnection& default_instance();

  static const ClientConnection* internal_default_instance();

  void Swap(ClientConnection* other);

  // implements Message ----------------------------------------------

  inline ClientConnection* New() const { return New(NULL); }

  ClientConnection* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientConnection& from);
  void MergeFrom(const ClientConnection& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ClientConnection* other);
  void UnsafeMergeFrom(const ClientConnection& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ClientConnection_Events Events;
  typedef ClientConnection_Commands Commands;

  // accessors -------------------------------------------------------

  static const int kComponentExtensionFieldNumber = 1003;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::player::ClientConnectionData >, 11, false >
    component_extension;
  static const int kEventExtensionFieldNumber = 1003;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::player::ClientConnection_Events >, 11, false >
    event_extension;
  static const int kCommandExtensionFieldNumber = 1003;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::player::ClientConnection_Commands >, 11, false >
    command_extension;
  // @@protoc_insertion_point(class_scope:schema.improbable.player.ClientConnection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fplayer_2fClientConnection_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fplayer_2fClientConnection_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fplayer_2fClientConnection_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ClientConnection> ClientConnection_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientDisconnectRequest

inline const ClientDisconnectRequest* ClientDisconnectRequest::internal_default_instance() {
  return &ClientDisconnectRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ClientDisconnectResponse

inline const ClientDisconnectResponse* ClientDisconnectResponse::internal_default_instance() {
  return &ClientDisconnectResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// HeartbeatRequest

inline const HeartbeatRequest* HeartbeatRequest::internal_default_instance() {
  return &HeartbeatRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// HeartbeatResponse

inline const HeartbeatResponse* HeartbeatResponse::internal_default_instance() {
  return &HeartbeatResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// ClientConnectionData

// optional uint32 field1_timeout_beats_remaining = 1;
inline bool ClientConnectionData::has_field1_timeout_beats_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientConnectionData::set_has_field1_timeout_beats_remaining() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientConnectionData::clear_has_field1_timeout_beats_remaining() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientConnectionData::clear_field1_timeout_beats_remaining() {
  field1_timeout_beats_remaining_ = 0u;
  clear_has_field1_timeout_beats_remaining();
}
inline ::google::protobuf::uint32 ClientConnectionData::field1_timeout_beats_remaining() const {
  // @@protoc_insertion_point(field_get:schema.improbable.player.ClientConnectionData.field1_timeout_beats_remaining)
  return field1_timeout_beats_remaining_;
}
inline void ClientConnectionData::set_field1_timeout_beats_remaining(::google::protobuf::uint32 value) {
  set_has_field1_timeout_beats_remaining();
  field1_timeout_beats_remaining_ = value;
  // @@protoc_insertion_point(field_set:schema.improbable.player.ClientConnectionData.field1_timeout_beats_remaining)
}

inline const ClientConnectionData* ClientConnectionData::internal_default_instance() {
  return &ClientConnectionData_default_instance_.get();
}
// -------------------------------------------------------------------

// ClientConnection_Events

inline const ClientConnection_Events* ClientConnection_Events::internal_default_instance() {
  return &ClientConnection_Events_default_instance_.get();
}
// -------------------------------------------------------------------

// ClientConnection_Commands

// optional .schema.improbable.player.HeartbeatRequest command_heartbeat_request = 1;
inline bool ClientConnection_Commands::has_command_heartbeat_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientConnection_Commands::set_has_command_heartbeat_request() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientConnection_Commands::clear_has_command_heartbeat_request() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientConnection_Commands::clear_command_heartbeat_request() {
  if (command_heartbeat_request_ != NULL) command_heartbeat_request_->::schema::improbable::player::HeartbeatRequest::Clear();
  clear_has_command_heartbeat_request();
}
inline const ::schema::improbable::player::HeartbeatRequest& ClientConnection_Commands::command_heartbeat_request() const {
  // @@protoc_insertion_point(field_get:schema.improbable.player.ClientConnection.Commands.command_heartbeat_request)
  return command_heartbeat_request_ != NULL ? *command_heartbeat_request_
                         : *::schema::improbable::player::HeartbeatRequest::internal_default_instance();
}
inline ::schema::improbable::player::HeartbeatRequest* ClientConnection_Commands::mutable_command_heartbeat_request() {
  set_has_command_heartbeat_request();
  if (command_heartbeat_request_ == NULL) {
    command_heartbeat_request_ = new ::schema::improbable::player::HeartbeatRequest;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.player.ClientConnection.Commands.command_heartbeat_request)
  return command_heartbeat_request_;
}
inline ::schema::improbable::player::HeartbeatRequest* ClientConnection_Commands::release_command_heartbeat_request() {
  // @@protoc_insertion_point(field_release:schema.improbable.player.ClientConnection.Commands.command_heartbeat_request)
  clear_has_command_heartbeat_request();
  ::schema::improbable::player::HeartbeatRequest* temp = command_heartbeat_request_;
  command_heartbeat_request_ = NULL;
  return temp;
}
inline void ClientConnection_Commands::set_allocated_command_heartbeat_request(::schema::improbable::player::HeartbeatRequest* command_heartbeat_request) {
  delete command_heartbeat_request_;
  command_heartbeat_request_ = command_heartbeat_request;
  if (command_heartbeat_request) {
    set_has_command_heartbeat_request();
  } else {
    clear_has_command_heartbeat_request();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.player.ClientConnection.Commands.command_heartbeat_request)
}

// optional .schema.improbable.player.HeartbeatResponse command_heartbeat_response = 2;
inline bool ClientConnection_Commands::has_command_heartbeat_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ClientConnection_Commands::set_has_command_heartbeat_response() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ClientConnection_Commands::clear_has_command_heartbeat_response() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ClientConnection_Commands::clear_command_heartbeat_response() {
  if (command_heartbeat_response_ != NULL) command_heartbeat_response_->::schema::improbable::player::HeartbeatResponse::Clear();
  clear_has_command_heartbeat_response();
}
inline const ::schema::improbable::player::HeartbeatResponse& ClientConnection_Commands::command_heartbeat_response() const {
  // @@protoc_insertion_point(field_get:schema.improbable.player.ClientConnection.Commands.command_heartbeat_response)
  return command_heartbeat_response_ != NULL ? *command_heartbeat_response_
                         : *::schema::improbable::player::HeartbeatResponse::internal_default_instance();
}
inline ::schema::improbable::player::HeartbeatResponse* ClientConnection_Commands::mutable_command_heartbeat_response() {
  set_has_command_heartbeat_response();
  if (command_heartbeat_response_ == NULL) {
    command_heartbeat_response_ = new ::schema::improbable::player::HeartbeatResponse;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.player.ClientConnection.Commands.command_heartbeat_response)
  return command_heartbeat_response_;
}
inline ::schema::improbable::player::HeartbeatResponse* ClientConnection_Commands::release_command_heartbeat_response() {
  // @@protoc_insertion_point(field_release:schema.improbable.player.ClientConnection.Commands.command_heartbeat_response)
  clear_has_command_heartbeat_response();
  ::schema::improbable::player::HeartbeatResponse* temp = command_heartbeat_response_;
  command_heartbeat_response_ = NULL;
  return temp;
}
inline void ClientConnection_Commands::set_allocated_command_heartbeat_response(::schema::improbable::player::HeartbeatResponse* command_heartbeat_response) {
  delete command_heartbeat_response_;
  command_heartbeat_response_ = command_heartbeat_response;
  if (command_heartbeat_response) {
    set_has_command_heartbeat_response();
  } else {
    clear_has_command_heartbeat_response();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.player.ClientConnection.Commands.command_heartbeat_response)
}

// optional .schema.improbable.player.ClientDisconnectRequest command_disconnect_client_request = 3;
inline bool ClientConnection_Commands::has_command_disconnect_client_request() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ClientConnection_Commands::set_has_command_disconnect_client_request() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ClientConnection_Commands::clear_has_command_disconnect_client_request() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ClientConnection_Commands::clear_command_disconnect_client_request() {
  if (command_disconnect_client_request_ != NULL) command_disconnect_client_request_->::schema::improbable::player::ClientDisconnectRequest::Clear();
  clear_has_command_disconnect_client_request();
}
inline const ::schema::improbable::player::ClientDisconnectRequest& ClientConnection_Commands::command_disconnect_client_request() const {
  // @@protoc_insertion_point(field_get:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_request)
  return command_disconnect_client_request_ != NULL ? *command_disconnect_client_request_
                         : *::schema::improbable::player::ClientDisconnectRequest::internal_default_instance();
}
inline ::schema::improbable::player::ClientDisconnectRequest* ClientConnection_Commands::mutable_command_disconnect_client_request() {
  set_has_command_disconnect_client_request();
  if (command_disconnect_client_request_ == NULL) {
    command_disconnect_client_request_ = new ::schema::improbable::player::ClientDisconnectRequest;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_request)
  return command_disconnect_client_request_;
}
inline ::schema::improbable::player::ClientDisconnectRequest* ClientConnection_Commands::release_command_disconnect_client_request() {
  // @@protoc_insertion_point(field_release:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_request)
  clear_has_command_disconnect_client_request();
  ::schema::improbable::player::ClientDisconnectRequest* temp = command_disconnect_client_request_;
  command_disconnect_client_request_ = NULL;
  return temp;
}
inline void ClientConnection_Commands::set_allocated_command_disconnect_client_request(::schema::improbable::player::ClientDisconnectRequest* command_disconnect_client_request) {
  delete command_disconnect_client_request_;
  command_disconnect_client_request_ = command_disconnect_client_request;
  if (command_disconnect_client_request) {
    set_has_command_disconnect_client_request();
  } else {
    clear_has_command_disconnect_client_request();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_request)
}

// optional .schema.improbable.player.ClientDisconnectResponse command_disconnect_client_response = 4;
inline bool ClientConnection_Commands::has_command_disconnect_client_response() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ClientConnection_Commands::set_has_command_disconnect_client_response() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ClientConnection_Commands::clear_has_command_disconnect_client_response() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ClientConnection_Commands::clear_command_disconnect_client_response() {
  if (command_disconnect_client_response_ != NULL) command_disconnect_client_response_->::schema::improbable::player::ClientDisconnectResponse::Clear();
  clear_has_command_disconnect_client_response();
}
inline const ::schema::improbable::player::ClientDisconnectResponse& ClientConnection_Commands::command_disconnect_client_response() const {
  // @@protoc_insertion_point(field_get:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_response)
  return command_disconnect_client_response_ != NULL ? *command_disconnect_client_response_
                         : *::schema::improbable::player::ClientDisconnectResponse::internal_default_instance();
}
inline ::schema::improbable::player::ClientDisconnectResponse* ClientConnection_Commands::mutable_command_disconnect_client_response() {
  set_has_command_disconnect_client_response();
  if (command_disconnect_client_response_ == NULL) {
    command_disconnect_client_response_ = new ::schema::improbable::player::ClientDisconnectResponse;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_response)
  return command_disconnect_client_response_;
}
inline ::schema::improbable::player::ClientDisconnectResponse* ClientConnection_Commands::release_command_disconnect_client_response() {
  // @@protoc_insertion_point(field_release:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_response)
  clear_has_command_disconnect_client_response();
  ::schema::improbable::player::ClientDisconnectResponse* temp = command_disconnect_client_response_;
  command_disconnect_client_response_ = NULL;
  return temp;
}
inline void ClientConnection_Commands::set_allocated_command_disconnect_client_response(::schema::improbable::player::ClientDisconnectResponse* command_disconnect_client_response) {
  delete command_disconnect_client_response_;
  command_disconnect_client_response_ = command_disconnect_client_response;
  if (command_disconnect_client_response) {
    set_has_command_disconnect_client_response();
  } else {
    clear_has_command_disconnect_client_response();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.player.ClientConnection.Commands.command_disconnect_client_response)
}

inline const ClientConnection_Commands* ClientConnection_Commands::internal_default_instance() {
  return &ClientConnection_Commands_default_instance_.get();
}
// -------------------------------------------------------------------

// ClientConnection

inline const ClientConnection* ClientConnection::internal_default_instance() {
  return &ClientConnection_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace player
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_improbable_2fplayer_2fClientConnection_2eproto__INCLUDED
