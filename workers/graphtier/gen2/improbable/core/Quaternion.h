// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable/core/Quaternion.schema
#ifndef SPATIALOS_SCHEMA_improbable_core_Quaternion_schema_2185936954157602216_INCLUDED
#define SPATIALOS_SCHEMA_improbable_core_Quaternion_schema_2185936954157602216_INCLUDED
#include <improbable/collections.h>
#include <improbable/math/coordinates.h>
#include <improbable/math/vector3d.h>
#include <improbable/math/vector3f.h>
#include <improbable/worker.h>
#include <cstddef>
#include <cstdint>
#include <set>
#include <string>

// Schema forward declarations.
//----------------------------------------------------------------

namespace schema {
namespace improbable {
namespace core {

class Quaternion;

}  // ::improbable
}  // ::core
}  // ::schema

namespace improbable {
namespace core {

// Forward declarations.
//----------------------------------------------------------------

class Quaternion;

namespace detail {
}  // ::detail

// Enumerations.
//----------------------------------------------------------------

// Data classes.
//----------------------------------------------------------------

class Quaternion {
public:
  // Main constructor.
  Quaternion(
      float x,
      float y,
      float z,
      float w);

  // Copyable and moveable.
  Quaternion(Quaternion&&) = default;
  Quaternion(const Quaternion&) = default;
  Quaternion& operator=(Quaternion&&) = default;
  Quaternion& operator=(const Quaternion&) = default;
  ~Quaternion() = default;

  bool operator==(const Quaternion&) const;
  bool operator!=(const Quaternion&) const;

  // Field x = 1.
  float x() const;
  float& x();
  Quaternion& set_x(float);

  // Field y = 2.
  float y() const;
  float& y();
  Quaternion& set_y(float);

  // Field z = 3.
  float z() const;
  float& z();
  Quaternion& set_z(float);

  // Field w = 4.
  float w() const;
  float& w();
  Quaternion& set_w(float);

private:
  float _x;
  float _y;
  float _z;
  float _w;
};

// Component metaclasses and update classes.
//----------------------------------------------------------------

// Implementation details.
//----------------------------------------------------------------

namespace detail {

void Serialize_Quaternion(
    const ::improbable::core::Quaternion&,
    ::schema::improbable::core::Quaternion&);

::improbable::core::Quaternion Deserialize_Quaternion(
    const ::schema::improbable::core::Quaternion&);

}  // ::detail
}  // ::core
}  // ::improbable

#endif  // SPATIALOS_SCHEMA_improbable_core_Quaternion_schema_2185936954157602216_INCLUDED
