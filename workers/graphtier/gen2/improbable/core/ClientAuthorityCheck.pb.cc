// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/core/ClientAuthorityCheck.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "improbable/core/ClientAuthorityCheck.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace core {

namespace {

const ::google::protobuf::Descriptor* ClientAuthorityCheckData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientAuthorityCheckData_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientAuthorityCheck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientAuthorityCheck_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientAuthorityCheck_Events_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientAuthorityCheck_Events_reflection_ = NULL;
const ::google::protobuf::Descriptor* ClientAuthorityCheck_Commands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ClientAuthorityCheck_Commands_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_improbable_2fcore_2fClientAuthorityCheck_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_improbable_2fcore_2fClientAuthorityCheck_2eproto() {
  protobuf_AddDesc_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "improbable/core/ClientAuthorityCheck.proto");
  GOOGLE_CHECK(file != NULL);
  ClientAuthorityCheckData_descriptor_ = file->message_type(0);
  static const int ClientAuthorityCheckData_offsets_[1] = {
  };
  ClientAuthorityCheckData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientAuthorityCheckData_descriptor_,
      ClientAuthorityCheckData::internal_default_instance(),
      ClientAuthorityCheckData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientAuthorityCheckData, _has_bits_),
      -1,
      -1,
      sizeof(ClientAuthorityCheckData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientAuthorityCheckData, _internal_metadata_));
  ClientAuthorityCheck_descriptor_ = file->message_type(1);
  static const int ClientAuthorityCheck_offsets_[1] = {
  };
  ClientAuthorityCheck_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientAuthorityCheck_descriptor_,
      ClientAuthorityCheck::internal_default_instance(),
      ClientAuthorityCheck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientAuthorityCheck, _has_bits_),
      -1,
      -1,
      sizeof(ClientAuthorityCheck),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientAuthorityCheck, _internal_metadata_));
  ClientAuthorityCheck_Events_descriptor_ = ClientAuthorityCheck_descriptor_->nested_type(0);
  static const int ClientAuthorityCheck_Events_offsets_[1] = {
  };
  ClientAuthorityCheck_Events_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientAuthorityCheck_Events_descriptor_,
      ClientAuthorityCheck_Events::internal_default_instance(),
      ClientAuthorityCheck_Events_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientAuthorityCheck_Events, _has_bits_),
      -1,
      -1,
      sizeof(ClientAuthorityCheck_Events),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientAuthorityCheck_Events, _internal_metadata_));
  ClientAuthorityCheck_Commands_descriptor_ = ClientAuthorityCheck_descriptor_->nested_type(1);
  static const int ClientAuthorityCheck_Commands_offsets_[1] = {
  };
  ClientAuthorityCheck_Commands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ClientAuthorityCheck_Commands_descriptor_,
      ClientAuthorityCheck_Commands::internal_default_instance(),
      ClientAuthorityCheck_Commands_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientAuthorityCheck_Commands, _has_bits_),
      -1,
      -1,
      sizeof(ClientAuthorityCheck_Commands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientAuthorityCheck_Commands, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_improbable_2fcore_2fClientAuthorityCheck_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientAuthorityCheckData_descriptor_, ClientAuthorityCheckData::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientAuthorityCheck_descriptor_, ClientAuthorityCheck::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientAuthorityCheck_Events_descriptor_, ClientAuthorityCheck_Events::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ClientAuthorityCheck_Commands_descriptor_, ClientAuthorityCheck_Commands::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_improbable_2fcore_2fClientAuthorityCheck_2eproto() {
  ClientAuthorityCheckData_default_instance_.Shutdown();
  delete ClientAuthorityCheckData_reflection_;
  ClientAuthorityCheck_default_instance_.Shutdown();
  delete ClientAuthorityCheck_reflection_;
  ClientAuthorityCheck_Events_default_instance_.Shutdown();
  delete ClientAuthorityCheck_Events_reflection_;
  ClientAuthorityCheck_Commands_default_instance_.Shutdown();
  delete ClientAuthorityCheck_Commands_reflection_;
}

void protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::schema::improbable::protobuf_InitDefaults_improbable_2fentity_5fstate_2eproto();
  ClientAuthorityCheckData_default_instance_.DefaultConstruct();
  ClientAuthorityCheck_default_instance_.DefaultConstruct();
  ClientAuthorityCheck_Events_default_instance_.DefaultConstruct();
  ClientAuthorityCheck_Commands_default_instance_.DefaultConstruct();
  ClientAuthorityCheckData_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientAuthorityCheck_default_instance_.get_mutable()->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityState::internal_default_instance(),
    1002, 11, false, false,
    ::schema::improbable::core::ClientAuthorityCheckData::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityEvent::internal_default_instance(),
    1002, 11, false, false,
    ::schema::improbable::core::ClientAuthorityCheck_Events::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityCommand::internal_default_instance(),
    1002, 11, false, false,
    ::schema::improbable::core::ClientAuthorityCheck_Commands::internal_default_instance());
  ClientAuthorityCheck_Events_default_instance_.get_mutable()->InitAsDefaultInstance();
  ClientAuthorityCheck_Commands_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto_once_);
void protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto_once_,
                 &protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto_impl);
}
void protobuf_AddDesc_improbable_2fcore_2fClientAuthorityCheck_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n*improbable/core/ClientAuthorityCheck.p"
    "roto\022\026schema.improbable.core\032\035improbable"
    "/entity_state.proto\"\032\n\030ClientAuthorityCh"
    "eckData\"\257\003\n\024ClientAuthorityCheck\032\010\n\006Even"
    "ts\032\n\n\010Commands2n\n\023component_extension\022\036."
    "schema.improbable.EntityState\030\352\007 \001(\01320.s"
    "chema.improbable.core.ClientAuthorityChe"
    "ckData2m\n\017event_extension\022\036.schema.impro"
    "bable.EntityEvent\030\352\007 \001(\01323.schema.improb"
    "able.core.ClientAuthorityCheck.Events2s\n"
    "\021command_extension\022 .schema.improbable.E"
    "ntityCommand\030\352\007 \001(\01325.schema.improbable."
    "core.ClientAuthorityCheck.Commands:-\302\363\030)"
    "\n$improbable.core.ClientAuthorityCheck\020\352"
    "\007B B\036ClientAuthorityCheckOuterClass", 595);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "improbable/core/ClientAuthorityCheck.proto", &protobuf_RegisterTypes);
  ::schema::improbable::protobuf_AddDesc_improbable_2fentity_5fstate_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_improbable_2fcore_2fClientAuthorityCheck_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_improbable_2fcore_2fClientAuthorityCheck_2eproto_once_);
void protobuf_AddDesc_improbable_2fcore_2fClientAuthorityCheck_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_improbable_2fcore_2fClientAuthorityCheck_2eproto_once_,
                 &protobuf_AddDesc_improbable_2fcore_2fClientAuthorityCheck_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_improbable_2fcore_2fClientAuthorityCheck_2eproto {
  StaticDescriptorInitializer_improbable_2fcore_2fClientAuthorityCheck_2eproto() {
    protobuf_AddDesc_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  }
} static_descriptor_initializer_improbable_2fcore_2fClientAuthorityCheck_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientAuthorityCheckData::ClientAuthorityCheckData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.ClientAuthorityCheckData)
}

void ClientAuthorityCheckData::InitAsDefaultInstance() {
}

ClientAuthorityCheckData::ClientAuthorityCheckData(const ClientAuthorityCheckData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.ClientAuthorityCheckData)
}

void ClientAuthorityCheckData::SharedCtor() {
  _cached_size_ = 0;
}

ClientAuthorityCheckData::~ClientAuthorityCheckData() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.ClientAuthorityCheckData)
  SharedDtor();
}

void ClientAuthorityCheckData::SharedDtor() {
}

void ClientAuthorityCheckData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientAuthorityCheckData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientAuthorityCheckData_descriptor_;
}

const ClientAuthorityCheckData& ClientAuthorityCheckData::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientAuthorityCheckData> ClientAuthorityCheckData_default_instance_;

ClientAuthorityCheckData* ClientAuthorityCheckData::New(::google::protobuf::Arena* arena) const {
  ClientAuthorityCheckData* n = new ClientAuthorityCheckData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientAuthorityCheckData::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.ClientAuthorityCheckData)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientAuthorityCheckData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.ClientAuthorityCheckData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.ClientAuthorityCheckData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.ClientAuthorityCheckData)
  return false;
#undef DO_
}

void ClientAuthorityCheckData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.ClientAuthorityCheckData)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.ClientAuthorityCheckData)
}

::google::protobuf::uint8* ClientAuthorityCheckData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.ClientAuthorityCheckData)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.ClientAuthorityCheckData)
  return target;
}

size_t ClientAuthorityCheckData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.ClientAuthorityCheckData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientAuthorityCheckData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.ClientAuthorityCheckData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientAuthorityCheckData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientAuthorityCheckData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.ClientAuthorityCheckData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.ClientAuthorityCheckData)
    UnsafeMergeFrom(*source);
  }
}

void ClientAuthorityCheckData::MergeFrom(const ClientAuthorityCheckData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.ClientAuthorityCheckData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientAuthorityCheckData::UnsafeMergeFrom(const ClientAuthorityCheckData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ClientAuthorityCheckData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.ClientAuthorityCheckData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientAuthorityCheckData::CopyFrom(const ClientAuthorityCheckData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.ClientAuthorityCheckData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientAuthorityCheckData::IsInitialized() const {

  return true;
}

void ClientAuthorityCheckData::Swap(ClientAuthorityCheckData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientAuthorityCheckData::InternalSwap(ClientAuthorityCheckData* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientAuthorityCheckData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientAuthorityCheckData_descriptor_;
  metadata.reflection = ClientAuthorityCheckData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientAuthorityCheckData

inline const ClientAuthorityCheckData* ClientAuthorityCheckData::internal_default_instance() {
  return &ClientAuthorityCheckData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientAuthorityCheck_Events::ClientAuthorityCheck_Events()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.ClientAuthorityCheck.Events)
}

void ClientAuthorityCheck_Events::InitAsDefaultInstance() {
}

ClientAuthorityCheck_Events::ClientAuthorityCheck_Events(const ClientAuthorityCheck_Events& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.ClientAuthorityCheck.Events)
}

void ClientAuthorityCheck_Events::SharedCtor() {
  _cached_size_ = 0;
}

ClientAuthorityCheck_Events::~ClientAuthorityCheck_Events() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.ClientAuthorityCheck.Events)
  SharedDtor();
}

void ClientAuthorityCheck_Events::SharedDtor() {
}

void ClientAuthorityCheck_Events::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientAuthorityCheck_Events::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientAuthorityCheck_Events_descriptor_;
}

const ClientAuthorityCheck_Events& ClientAuthorityCheck_Events::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientAuthorityCheck_Events> ClientAuthorityCheck_Events_default_instance_;

ClientAuthorityCheck_Events* ClientAuthorityCheck_Events::New(::google::protobuf::Arena* arena) const {
  ClientAuthorityCheck_Events* n = new ClientAuthorityCheck_Events;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientAuthorityCheck_Events::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.ClientAuthorityCheck.Events)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientAuthorityCheck_Events::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.ClientAuthorityCheck.Events)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.ClientAuthorityCheck.Events)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.ClientAuthorityCheck.Events)
  return false;
#undef DO_
}

void ClientAuthorityCheck_Events::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.ClientAuthorityCheck.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.ClientAuthorityCheck.Events)
}

::google::protobuf::uint8* ClientAuthorityCheck_Events::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.ClientAuthorityCheck.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.ClientAuthorityCheck.Events)
  return target;
}

size_t ClientAuthorityCheck_Events::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.ClientAuthorityCheck.Events)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientAuthorityCheck_Events::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.ClientAuthorityCheck.Events)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientAuthorityCheck_Events* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientAuthorityCheck_Events>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.ClientAuthorityCheck.Events)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.ClientAuthorityCheck.Events)
    UnsafeMergeFrom(*source);
  }
}

void ClientAuthorityCheck_Events::MergeFrom(const ClientAuthorityCheck_Events& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.ClientAuthorityCheck.Events)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientAuthorityCheck_Events::UnsafeMergeFrom(const ClientAuthorityCheck_Events& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ClientAuthorityCheck_Events::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.ClientAuthorityCheck.Events)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientAuthorityCheck_Events::CopyFrom(const ClientAuthorityCheck_Events& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.ClientAuthorityCheck.Events)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientAuthorityCheck_Events::IsInitialized() const {

  return true;
}

void ClientAuthorityCheck_Events::Swap(ClientAuthorityCheck_Events* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientAuthorityCheck_Events::InternalSwap(ClientAuthorityCheck_Events* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientAuthorityCheck_Events::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientAuthorityCheck_Events_descriptor_;
  metadata.reflection = ClientAuthorityCheck_Events_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientAuthorityCheck_Commands::ClientAuthorityCheck_Commands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.ClientAuthorityCheck.Commands)
}

void ClientAuthorityCheck_Commands::InitAsDefaultInstance() {
}

ClientAuthorityCheck_Commands::ClientAuthorityCheck_Commands(const ClientAuthorityCheck_Commands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.ClientAuthorityCheck.Commands)
}

void ClientAuthorityCheck_Commands::SharedCtor() {
  _cached_size_ = 0;
}

ClientAuthorityCheck_Commands::~ClientAuthorityCheck_Commands() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.ClientAuthorityCheck.Commands)
  SharedDtor();
}

void ClientAuthorityCheck_Commands::SharedDtor() {
}

void ClientAuthorityCheck_Commands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientAuthorityCheck_Commands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientAuthorityCheck_Commands_descriptor_;
}

const ClientAuthorityCheck_Commands& ClientAuthorityCheck_Commands::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientAuthorityCheck_Commands> ClientAuthorityCheck_Commands_default_instance_;

ClientAuthorityCheck_Commands* ClientAuthorityCheck_Commands::New(::google::protobuf::Arena* arena) const {
  ClientAuthorityCheck_Commands* n = new ClientAuthorityCheck_Commands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientAuthorityCheck_Commands::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.ClientAuthorityCheck.Commands)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientAuthorityCheck_Commands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.ClientAuthorityCheck.Commands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.ClientAuthorityCheck.Commands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.ClientAuthorityCheck.Commands)
  return false;
#undef DO_
}

void ClientAuthorityCheck_Commands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.ClientAuthorityCheck.Commands)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.ClientAuthorityCheck.Commands)
}

::google::protobuf::uint8* ClientAuthorityCheck_Commands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.ClientAuthorityCheck.Commands)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.ClientAuthorityCheck.Commands)
  return target;
}

size_t ClientAuthorityCheck_Commands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.ClientAuthorityCheck.Commands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientAuthorityCheck_Commands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.ClientAuthorityCheck.Commands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientAuthorityCheck_Commands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientAuthorityCheck_Commands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.ClientAuthorityCheck.Commands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.ClientAuthorityCheck.Commands)
    UnsafeMergeFrom(*source);
  }
}

void ClientAuthorityCheck_Commands::MergeFrom(const ClientAuthorityCheck_Commands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.ClientAuthorityCheck.Commands)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientAuthorityCheck_Commands::UnsafeMergeFrom(const ClientAuthorityCheck_Commands& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ClientAuthorityCheck_Commands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.ClientAuthorityCheck.Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientAuthorityCheck_Commands::CopyFrom(const ClientAuthorityCheck_Commands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.ClientAuthorityCheck.Commands)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientAuthorityCheck_Commands::IsInitialized() const {

  return true;
}

void ClientAuthorityCheck_Commands::Swap(ClientAuthorityCheck_Commands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientAuthorityCheck_Commands::InternalSwap(ClientAuthorityCheck_Commands* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientAuthorityCheck_Commands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientAuthorityCheck_Commands_descriptor_;
  metadata.reflection = ClientAuthorityCheck_Commands_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientAuthorityCheck::kComponentExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::ClientAuthorityCheckData >, 11, false >
  ClientAuthorityCheck::component_extension(kComponentExtensionFieldNumber, *::schema::improbable::core::ClientAuthorityCheckData::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientAuthorityCheck::kEventExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::ClientAuthorityCheck_Events >, 11, false >
  ClientAuthorityCheck::event_extension(kEventExtensionFieldNumber, *::schema::improbable::core::ClientAuthorityCheck_Events::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientAuthorityCheck::kCommandExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::ClientAuthorityCheck_Commands >, 11, false >
  ClientAuthorityCheck::command_extension(kCommandExtensionFieldNumber, *::schema::improbable::core::ClientAuthorityCheck_Commands::internal_default_instance());
ClientAuthorityCheck::ClientAuthorityCheck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.ClientAuthorityCheck)
}

void ClientAuthorityCheck::InitAsDefaultInstance() {
}

ClientAuthorityCheck::ClientAuthorityCheck(const ClientAuthorityCheck& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.ClientAuthorityCheck)
}

void ClientAuthorityCheck::SharedCtor() {
  _cached_size_ = 0;
}

ClientAuthorityCheck::~ClientAuthorityCheck() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.ClientAuthorityCheck)
  SharedDtor();
}

void ClientAuthorityCheck::SharedDtor() {
}

void ClientAuthorityCheck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientAuthorityCheck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ClientAuthorityCheck_descriptor_;
}

const ClientAuthorityCheck& ClientAuthorityCheck::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fClientAuthorityCheck_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ClientAuthorityCheck> ClientAuthorityCheck_default_instance_;

ClientAuthorityCheck* ClientAuthorityCheck::New(::google::protobuf::Arena* arena) const {
  ClientAuthorityCheck* n = new ClientAuthorityCheck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientAuthorityCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.ClientAuthorityCheck)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ClientAuthorityCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.ClientAuthorityCheck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.ClientAuthorityCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.ClientAuthorityCheck)
  return false;
#undef DO_
}

void ClientAuthorityCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.ClientAuthorityCheck)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.ClientAuthorityCheck)
}

::google::protobuf::uint8* ClientAuthorityCheck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.ClientAuthorityCheck)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.ClientAuthorityCheck)
  return target;
}

size_t ClientAuthorityCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.ClientAuthorityCheck)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientAuthorityCheck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.ClientAuthorityCheck)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ClientAuthorityCheck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientAuthorityCheck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.ClientAuthorityCheck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.ClientAuthorityCheck)
    UnsafeMergeFrom(*source);
  }
}

void ClientAuthorityCheck::MergeFrom(const ClientAuthorityCheck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.ClientAuthorityCheck)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ClientAuthorityCheck::UnsafeMergeFrom(const ClientAuthorityCheck& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ClientAuthorityCheck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.ClientAuthorityCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientAuthorityCheck::CopyFrom(const ClientAuthorityCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.ClientAuthorityCheck)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ClientAuthorityCheck::IsInitialized() const {

  return true;
}

void ClientAuthorityCheck::Swap(ClientAuthorityCheck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientAuthorityCheck::InternalSwap(ClientAuthorityCheck* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientAuthorityCheck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ClientAuthorityCheck_descriptor_;
  metadata.reflection = ClientAuthorityCheck_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientAuthorityCheck_Events

inline const ClientAuthorityCheck_Events* ClientAuthorityCheck_Events::internal_default_instance() {
  return &ClientAuthorityCheck_Events_default_instance_.get();
}
// -------------------------------------------------------------------

// ClientAuthorityCheck_Commands

inline const ClientAuthorityCheck_Commands* ClientAuthorityCheck_Commands::internal_default_instance() {
  return &ClientAuthorityCheck_Commands_default_instance_.get();
}
// -------------------------------------------------------------------

// ClientAuthorityCheck

inline const ClientAuthorityCheck* ClientAuthorityCheck::internal_default_instance() {
  return &ClientAuthorityCheck_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace core
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)
