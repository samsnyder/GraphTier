// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/core/WorldTransform.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "improbable/core/WorldTransform.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace core {

namespace {

const ::google::protobuf::Descriptor* WorldTransformData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorldTransformData_reflection_ = NULL;
const ::google::protobuf::Descriptor* WorldTransform_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorldTransform_reflection_ = NULL;
const ::google::protobuf::Descriptor* WorldTransform_Events_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorldTransform_Events_reflection_ = NULL;
const ::google::protobuf::Descriptor* WorldTransform_Commands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  WorldTransform_Commands_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_improbable_2fcore_2fWorldTransform_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_improbable_2fcore_2fWorldTransform_2eproto() {
  protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "improbable/core/WorldTransform.proto");
  GOOGLE_CHECK(file != NULL);
  WorldTransformData_descriptor_ = file->message_type(0);
  static const int WorldTransformData_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldTransformData, field1_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldTransformData, field2_rotation_),
  };
  WorldTransformData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WorldTransformData_descriptor_,
      WorldTransformData::internal_default_instance(),
      WorldTransformData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldTransformData, _has_bits_),
      -1,
      -1,
      sizeof(WorldTransformData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldTransformData, _internal_metadata_));
  WorldTransform_descriptor_ = file->message_type(1);
  static const int WorldTransform_offsets_[1] = {
  };
  WorldTransform_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WorldTransform_descriptor_,
      WorldTransform::internal_default_instance(),
      WorldTransform_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldTransform, _has_bits_),
      -1,
      -1,
      sizeof(WorldTransform),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldTransform, _internal_metadata_));
  WorldTransform_Events_descriptor_ = WorldTransform_descriptor_->nested_type(0);
  static const int WorldTransform_Events_offsets_[1] = {
  };
  WorldTransform_Events_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WorldTransform_Events_descriptor_,
      WorldTransform_Events::internal_default_instance(),
      WorldTransform_Events_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldTransform_Events, _has_bits_),
      -1,
      -1,
      sizeof(WorldTransform_Events),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldTransform_Events, _internal_metadata_));
  WorldTransform_Commands_descriptor_ = WorldTransform_descriptor_->nested_type(1);
  static const int WorldTransform_Commands_offsets_[1] = {
  };
  WorldTransform_Commands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      WorldTransform_Commands_descriptor_,
      WorldTransform_Commands::internal_default_instance(),
      WorldTransform_Commands_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldTransform_Commands, _has_bits_),
      -1,
      -1,
      sizeof(WorldTransform_Commands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(WorldTransform_Commands, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_improbable_2fcore_2fWorldTransform_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WorldTransformData_descriptor_, WorldTransformData::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WorldTransform_descriptor_, WorldTransform::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WorldTransform_Events_descriptor_, WorldTransform_Events::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      WorldTransform_Commands_descriptor_, WorldTransform_Commands::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_improbable_2fcore_2fWorldTransform_2eproto() {
  WorldTransformData_default_instance_.Shutdown();
  delete WorldTransformData_reflection_;
  WorldTransform_default_instance_.Shutdown();
  delete WorldTransform_reflection_;
  WorldTransform_Events_default_instance_.Shutdown();
  delete WorldTransform_Events_reflection_;
  WorldTransform_Commands_default_instance_.Shutdown();
  delete WorldTransform_Commands_reflection_;
}

void protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::schema::improbable::protobuf_InitDefaults_improbable_2fentity_5fstate_2eproto();
  ::schema::improbable::math::protobuf_InitDefaults_improbable_2fmath_2fcoordinates_2eproto();
  ::schema::improbable::core::protobuf_InitDefaults_improbable_2fcore_2fQuaternion_2eproto();
  WorldTransformData_default_instance_.DefaultConstruct();
  WorldTransform_default_instance_.DefaultConstruct();
  WorldTransform_Events_default_instance_.DefaultConstruct();
  WorldTransform_Commands_default_instance_.DefaultConstruct();
  WorldTransformData_default_instance_.get_mutable()->InitAsDefaultInstance();
  WorldTransform_default_instance_.get_mutable()->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityState::internal_default_instance(),
    1000, 11, false, false,
    ::schema::improbable::core::WorldTransformData::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityEvent::internal_default_instance(),
    1000, 11, false, false,
    ::schema::improbable::core::WorldTransform_Events::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityCommand::internal_default_instance(),
    1000, 11, false, false,
    ::schema::improbable::core::WorldTransform_Commands::internal_default_instance());
  WorldTransform_Events_default_instance_.get_mutable()->InitAsDefaultInstance();
  WorldTransform_Commands_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto_once_);
void protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto_once_,
                 &protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto_impl);
}
void protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n$improbable/core/WorldTransform.proto\022\026"
    "schema.improbable.core\032\035improbable/entit"
    "y_state.proto\032!improbable/math/coordinat"
    "es.proto\032 improbable/core/Quaternion.pro"
    "to\"\257\001\n\022WorldTransformData\022N\n\017field1_posi"
    "tion\030\001 \001(\0132#.schema.improbable.math.Coor"
    "dinatesB\020\302\363\030\010position\320\363\030\001\022I\n\017field2_rota"
    "tion\030\002 \001(\0132\".schema.improbable.core.Quat"
    "ernionB\014\302\363\030\010rotation\"\221\003\n\016WorldTransform\032"
    "\010\n\006Events\032\n\n\010Commands2h\n\023component_exten"
    "sion\022\036.schema.improbable.EntityState\030\350\007 "
    "\001(\0132*.schema.improbable.core.WorldTransf"
    "ormData2g\n\017event_extension\022\036.schema.impr"
    "obable.EntityEvent\030\350\007 \001(\0132-.schema.impro"
    "bable.core.WorldTransform.Events2m\n\021comm"
    "and_extension\022 .schema.improbable.Entity"
    "Command\030\350\007 \001(\0132/.schema.improbable.core."
    "WorldTransform.Commands:\'\302\363\030#\n\036improbabl"
    "e.core.WorldTransform\020\350\007B\032B\030WorldTransfo"
    "rmOuterClass", 772);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "improbable/core/WorldTransform.proto", &protobuf_RegisterTypes);
  ::schema::improbable::protobuf_AddDesc_improbable_2fentity_5fstate_2eproto();
  ::schema::improbable::math::protobuf_AddDesc_improbable_2fmath_2fcoordinates_2eproto();
  ::schema::improbable::core::protobuf_AddDesc_improbable_2fcore_2fQuaternion_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_improbable_2fcore_2fWorldTransform_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto_once_);
void protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto_once_,
                 &protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_improbable_2fcore_2fWorldTransform_2eproto {
  StaticDescriptorInitializer_improbable_2fcore_2fWorldTransform_2eproto() {
    protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto();
  }
} static_descriptor_initializer_improbable_2fcore_2fWorldTransform_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldTransformData::kField1PositionFieldNumber;
const int WorldTransformData::kField2RotationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldTransformData::WorldTransformData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.WorldTransformData)
}

void WorldTransformData::InitAsDefaultInstance() {
  field1_position_ = const_cast< ::schema::improbable::math::Coordinates*>(
      ::schema::improbable::math::Coordinates::internal_default_instance());
  field2_rotation_ = const_cast< ::schema::improbable::core::Quaternion*>(
      ::schema::improbable::core::Quaternion::internal_default_instance());
}

WorldTransformData::WorldTransformData(const WorldTransformData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.WorldTransformData)
}

void WorldTransformData::SharedCtor() {
  _cached_size_ = 0;
  field1_position_ = NULL;
  field2_rotation_ = NULL;
}

WorldTransformData::~WorldTransformData() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.WorldTransformData)
  SharedDtor();
}

void WorldTransformData::SharedDtor() {
  if (this != &WorldTransformData_default_instance_.get()) {
    delete field1_position_;
    delete field2_rotation_;
  }
}

void WorldTransformData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldTransformData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorldTransformData_descriptor_;
}

const WorldTransformData& WorldTransformData::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WorldTransformData> WorldTransformData_default_instance_;

WorldTransformData* WorldTransformData::New(::google::protobuf::Arena* arena) const {
  WorldTransformData* n = new WorldTransformData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldTransformData::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.WorldTransformData)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_field1_position()) {
      if (field1_position_ != NULL) field1_position_->::schema::improbable::math::Coordinates::Clear();
    }
    if (has_field2_rotation()) {
      if (field2_rotation_ != NULL) field2_rotation_->::schema::improbable::core::Quaternion::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool WorldTransformData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.WorldTransformData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .schema.improbable.math.Coordinates field1_position = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field1_position()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_field2_rotation;
        break;
      }

      // optional .schema.improbable.core.Quaternion field2_rotation = 2;
      case 2: {
        if (tag == 18) {
         parse_field2_rotation:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_field2_rotation()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.WorldTransformData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.WorldTransformData)
  return false;
#undef DO_
}

void WorldTransformData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.WorldTransformData)
  // optional .schema.improbable.math.Coordinates field1_position = 1;
  if (has_field1_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->field1_position_, output);
  }

  // optional .schema.improbable.core.Quaternion field2_rotation = 2;
  if (has_field2_rotation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->field2_rotation_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.WorldTransformData)
}

::google::protobuf::uint8* WorldTransformData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.WorldTransformData)
  // optional .schema.improbable.math.Coordinates field1_position = 1;
  if (has_field1_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->field1_position_, false, target);
  }

  // optional .schema.improbable.core.Quaternion field2_rotation = 2;
  if (has_field2_rotation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->field2_rotation_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.WorldTransformData)
  return target;
}

size_t WorldTransformData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.WorldTransformData)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .schema.improbable.math.Coordinates field1_position = 1;
    if (has_field1_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->field1_position_);
    }

    // optional .schema.improbable.core.Quaternion field2_rotation = 2;
    if (has_field2_rotation()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->field2_rotation_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldTransformData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.WorldTransformData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WorldTransformData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldTransformData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.WorldTransformData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.WorldTransformData)
    UnsafeMergeFrom(*source);
  }
}

void WorldTransformData::MergeFrom(const WorldTransformData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.WorldTransformData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WorldTransformData::UnsafeMergeFrom(const WorldTransformData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_field1_position()) {
      mutable_field1_position()->::schema::improbable::math::Coordinates::MergeFrom(from.field1_position());
    }
    if (from.has_field2_rotation()) {
      mutable_field2_rotation()->::schema::improbable::core::Quaternion::MergeFrom(from.field2_rotation());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void WorldTransformData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.WorldTransformData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldTransformData::CopyFrom(const WorldTransformData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.WorldTransformData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WorldTransformData::IsInitialized() const {

  return true;
}

void WorldTransformData::Swap(WorldTransformData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldTransformData::InternalSwap(WorldTransformData* other) {
  std::swap(field1_position_, other->field1_position_);
  std::swap(field2_rotation_, other->field2_rotation_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldTransformData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorldTransformData_descriptor_;
  metadata.reflection = WorldTransformData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldTransformData

// optional .schema.improbable.math.Coordinates field1_position = 1;
bool WorldTransformData::has_field1_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void WorldTransformData::set_has_field1_position() {
  _has_bits_[0] |= 0x00000001u;
}
void WorldTransformData::clear_has_field1_position() {
  _has_bits_[0] &= ~0x00000001u;
}
void WorldTransformData::clear_field1_position() {
  if (field1_position_ != NULL) field1_position_->::schema::improbable::math::Coordinates::Clear();
  clear_has_field1_position();
}
const ::schema::improbable::math::Coordinates& WorldTransformData::field1_position() const {
  // @@protoc_insertion_point(field_get:schema.improbable.core.WorldTransformData.field1_position)
  return field1_position_ != NULL ? *field1_position_
                         : *::schema::improbable::math::Coordinates::internal_default_instance();
}
::schema::improbable::math::Coordinates* WorldTransformData::mutable_field1_position() {
  set_has_field1_position();
  if (field1_position_ == NULL) {
    field1_position_ = new ::schema::improbable::math::Coordinates;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.core.WorldTransformData.field1_position)
  return field1_position_;
}
::schema::improbable::math::Coordinates* WorldTransformData::release_field1_position() {
  // @@protoc_insertion_point(field_release:schema.improbable.core.WorldTransformData.field1_position)
  clear_has_field1_position();
  ::schema::improbable::math::Coordinates* temp = field1_position_;
  field1_position_ = NULL;
  return temp;
}
void WorldTransformData::set_allocated_field1_position(::schema::improbable::math::Coordinates* field1_position) {
  delete field1_position_;
  field1_position_ = field1_position;
  if (field1_position) {
    set_has_field1_position();
  } else {
    clear_has_field1_position();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.core.WorldTransformData.field1_position)
}

// optional .schema.improbable.core.Quaternion field2_rotation = 2;
bool WorldTransformData::has_field2_rotation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void WorldTransformData::set_has_field2_rotation() {
  _has_bits_[0] |= 0x00000002u;
}
void WorldTransformData::clear_has_field2_rotation() {
  _has_bits_[0] &= ~0x00000002u;
}
void WorldTransformData::clear_field2_rotation() {
  if (field2_rotation_ != NULL) field2_rotation_->::schema::improbable::core::Quaternion::Clear();
  clear_has_field2_rotation();
}
const ::schema::improbable::core::Quaternion& WorldTransformData::field2_rotation() const {
  // @@protoc_insertion_point(field_get:schema.improbable.core.WorldTransformData.field2_rotation)
  return field2_rotation_ != NULL ? *field2_rotation_
                         : *::schema::improbable::core::Quaternion::internal_default_instance();
}
::schema::improbable::core::Quaternion* WorldTransformData::mutable_field2_rotation() {
  set_has_field2_rotation();
  if (field2_rotation_ == NULL) {
    field2_rotation_ = new ::schema::improbable::core::Quaternion;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.core.WorldTransformData.field2_rotation)
  return field2_rotation_;
}
::schema::improbable::core::Quaternion* WorldTransformData::release_field2_rotation() {
  // @@protoc_insertion_point(field_release:schema.improbable.core.WorldTransformData.field2_rotation)
  clear_has_field2_rotation();
  ::schema::improbable::core::Quaternion* temp = field2_rotation_;
  field2_rotation_ = NULL;
  return temp;
}
void WorldTransformData::set_allocated_field2_rotation(::schema::improbable::core::Quaternion* field2_rotation) {
  delete field2_rotation_;
  field2_rotation_ = field2_rotation;
  if (field2_rotation) {
    set_has_field2_rotation();
  } else {
    clear_has_field2_rotation();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.core.WorldTransformData.field2_rotation)
}

inline const WorldTransformData* WorldTransformData::internal_default_instance() {
  return &WorldTransformData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldTransform_Events::WorldTransform_Events()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.WorldTransform.Events)
}

void WorldTransform_Events::InitAsDefaultInstance() {
}

WorldTransform_Events::WorldTransform_Events(const WorldTransform_Events& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.WorldTransform.Events)
}

void WorldTransform_Events::SharedCtor() {
  _cached_size_ = 0;
}

WorldTransform_Events::~WorldTransform_Events() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.WorldTransform.Events)
  SharedDtor();
}

void WorldTransform_Events::SharedDtor() {
}

void WorldTransform_Events::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldTransform_Events::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorldTransform_Events_descriptor_;
}

const WorldTransform_Events& WorldTransform_Events::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WorldTransform_Events> WorldTransform_Events_default_instance_;

WorldTransform_Events* WorldTransform_Events::New(::google::protobuf::Arena* arena) const {
  WorldTransform_Events* n = new WorldTransform_Events;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldTransform_Events::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.WorldTransform.Events)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool WorldTransform_Events::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.WorldTransform.Events)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.WorldTransform.Events)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.WorldTransform.Events)
  return false;
#undef DO_
}

void WorldTransform_Events::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.WorldTransform.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.WorldTransform.Events)
}

::google::protobuf::uint8* WorldTransform_Events::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.WorldTransform.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.WorldTransform.Events)
  return target;
}

size_t WorldTransform_Events::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.WorldTransform.Events)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldTransform_Events::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.WorldTransform.Events)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WorldTransform_Events* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldTransform_Events>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.WorldTransform.Events)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.WorldTransform.Events)
    UnsafeMergeFrom(*source);
  }
}

void WorldTransform_Events::MergeFrom(const WorldTransform_Events& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.WorldTransform.Events)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WorldTransform_Events::UnsafeMergeFrom(const WorldTransform_Events& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void WorldTransform_Events::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.WorldTransform.Events)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldTransform_Events::CopyFrom(const WorldTransform_Events& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.WorldTransform.Events)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WorldTransform_Events::IsInitialized() const {

  return true;
}

void WorldTransform_Events::Swap(WorldTransform_Events* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldTransform_Events::InternalSwap(WorldTransform_Events* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldTransform_Events::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorldTransform_Events_descriptor_;
  metadata.reflection = WorldTransform_Events_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldTransform_Commands::WorldTransform_Commands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.WorldTransform.Commands)
}

void WorldTransform_Commands::InitAsDefaultInstance() {
}

WorldTransform_Commands::WorldTransform_Commands(const WorldTransform_Commands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.WorldTransform.Commands)
}

void WorldTransform_Commands::SharedCtor() {
  _cached_size_ = 0;
}

WorldTransform_Commands::~WorldTransform_Commands() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.WorldTransform.Commands)
  SharedDtor();
}

void WorldTransform_Commands::SharedDtor() {
}

void WorldTransform_Commands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldTransform_Commands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorldTransform_Commands_descriptor_;
}

const WorldTransform_Commands& WorldTransform_Commands::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WorldTransform_Commands> WorldTransform_Commands_default_instance_;

WorldTransform_Commands* WorldTransform_Commands::New(::google::protobuf::Arena* arena) const {
  WorldTransform_Commands* n = new WorldTransform_Commands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldTransform_Commands::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.WorldTransform.Commands)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool WorldTransform_Commands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.WorldTransform.Commands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.WorldTransform.Commands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.WorldTransform.Commands)
  return false;
#undef DO_
}

void WorldTransform_Commands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.WorldTransform.Commands)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.WorldTransform.Commands)
}

::google::protobuf::uint8* WorldTransform_Commands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.WorldTransform.Commands)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.WorldTransform.Commands)
  return target;
}

size_t WorldTransform_Commands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.WorldTransform.Commands)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldTransform_Commands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.WorldTransform.Commands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WorldTransform_Commands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldTransform_Commands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.WorldTransform.Commands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.WorldTransform.Commands)
    UnsafeMergeFrom(*source);
  }
}

void WorldTransform_Commands::MergeFrom(const WorldTransform_Commands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.WorldTransform.Commands)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WorldTransform_Commands::UnsafeMergeFrom(const WorldTransform_Commands& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void WorldTransform_Commands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.WorldTransform.Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldTransform_Commands::CopyFrom(const WorldTransform_Commands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.WorldTransform.Commands)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WorldTransform_Commands::IsInitialized() const {

  return true;
}

void WorldTransform_Commands::Swap(WorldTransform_Commands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldTransform_Commands::InternalSwap(WorldTransform_Commands* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldTransform_Commands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorldTransform_Commands_descriptor_;
  metadata.reflection = WorldTransform_Commands_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldTransform::kComponentExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::WorldTransformData >, 11, false >
  WorldTransform::component_extension(kComponentExtensionFieldNumber, *::schema::improbable::core::WorldTransformData::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldTransform::kEventExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::WorldTransform_Events >, 11, false >
  WorldTransform::event_extension(kEventExtensionFieldNumber, *::schema::improbable::core::WorldTransform_Events::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldTransform::kCommandExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::WorldTransform_Commands >, 11, false >
  WorldTransform::command_extension(kCommandExtensionFieldNumber, *::schema::improbable::core::WorldTransform_Commands::internal_default_instance());
WorldTransform::WorldTransform()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.WorldTransform)
}

void WorldTransform::InitAsDefaultInstance() {
}

WorldTransform::WorldTransform(const WorldTransform& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.WorldTransform)
}

void WorldTransform::SharedCtor() {
  _cached_size_ = 0;
}

WorldTransform::~WorldTransform() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.WorldTransform)
  SharedDtor();
}

void WorldTransform::SharedDtor() {
}

void WorldTransform::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WorldTransform::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return WorldTransform_descriptor_;
}

const WorldTransform& WorldTransform::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<WorldTransform> WorldTransform_default_instance_;

WorldTransform* WorldTransform::New(::google::protobuf::Arena* arena) const {
  WorldTransform* n = new WorldTransform;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WorldTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.WorldTransform)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool WorldTransform::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.WorldTransform)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.WorldTransform)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.WorldTransform)
  return false;
#undef DO_
}

void WorldTransform::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.WorldTransform)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.WorldTransform)
}

::google::protobuf::uint8* WorldTransform::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.WorldTransform)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.WorldTransform)
  return target;
}

size_t WorldTransform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.WorldTransform)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WorldTransform::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.WorldTransform)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const WorldTransform* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldTransform>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.WorldTransform)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.WorldTransform)
    UnsafeMergeFrom(*source);
  }
}

void WorldTransform::MergeFrom(const WorldTransform& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.WorldTransform)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void WorldTransform::UnsafeMergeFrom(const WorldTransform& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void WorldTransform::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.WorldTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldTransform::CopyFrom(const WorldTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.WorldTransform)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool WorldTransform::IsInitialized() const {

  return true;
}

void WorldTransform::Swap(WorldTransform* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldTransform::InternalSwap(WorldTransform* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WorldTransform::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = WorldTransform_descriptor_;
  metadata.reflection = WorldTransform_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldTransform_Events

inline const WorldTransform_Events* WorldTransform_Events::internal_default_instance() {
  return &WorldTransform_Events_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldTransform_Commands

inline const WorldTransform_Commands* WorldTransform_Commands::internal_default_instance() {
  return &WorldTransform_Commands_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldTransform

inline const WorldTransform* WorldTransform::internal_default_instance() {
  return &WorldTransform_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace core
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)
