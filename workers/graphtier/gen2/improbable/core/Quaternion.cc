// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable/core/Quaternion.schema
#include <improbable/core/Quaternion.h>
#include <improbable/entity_state.pb.h>
#include <improbable/core/Quaternion.pb.h>

namespace improbable {
namespace core {

// Implementation of Quaternion.
//----------------------------------------------------------------

Quaternion::Quaternion(
    float x,
    float y,
    float z,
    float w)
: _x{x}
, _y{y}
, _z{z}
, _w{w} {}

bool Quaternion::operator==(const Quaternion& value) const {
  return
      _x == value._x &&
      _y == value._y &&
      _z == value._z &&
      _w == value._w;
}

bool Quaternion::operator!=(const Quaternion& value) const {
  return !operator==(value);
}

float Quaternion::x() const {
  return _x;
}

float& Quaternion::x() {
  return _x;
}

Quaternion& Quaternion::set_x(float value) {
  _x = value;
  return *this;
}

float Quaternion::y() const {
  return _y;
}

float& Quaternion::y() {
  return _y;
}

Quaternion& Quaternion::set_y(float value) {
  _y = value;
  return *this;
}

float Quaternion::z() const {
  return _z;
}

float& Quaternion::z() {
  return _z;
}

Quaternion& Quaternion::set_z(float value) {
  _z = value;
  return *this;
}

float Quaternion::w() const {
  return _w;
}

float& Quaternion::w() {
  return _w;
}

Quaternion& Quaternion::set_w(float value) {
  _w = value;
  return *this;
}

// Serialization helpers.
//----------------------------------------------------------------

namespace detail {

void Serialize_Quaternion(
    const ::improbable::core::Quaternion& data,
    ::schema::improbable::core::Quaternion& proto) {
  proto.set_field1_x(data.x());
  proto.set_field2_y(data.y());
  proto.set_field3_z(data.z());
  proto.set_field4_w(data.w());
}

::improbable::core::Quaternion Deserialize_Quaternion(
    const ::schema::improbable::core::Quaternion& proto) {
  ::improbable::core::Quaternion result{
      proto.field1_x(),
      proto.field2_y(),
      proto.field3_z(),
      proto.field4_w()};
  return result;
}

}  // ::detail

}  // ::core
}  // ::improbable
