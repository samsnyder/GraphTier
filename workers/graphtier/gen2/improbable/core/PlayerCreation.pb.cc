// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/core/PlayerCreation.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "improbable/core/PlayerCreation.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace core {

namespace {

const ::google::protobuf::Descriptor* CreatePlayerRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreatePlayerRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CreatePlayerResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CreatePlayerResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerCreationData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerCreationData_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerCreation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerCreation_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerCreation_Events_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerCreation_Events_reflection_ = NULL;
const ::google::protobuf::Descriptor* PlayerCreation_Commands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PlayerCreation_Commands_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_improbable_2fcore_2fPlayerCreation_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_improbable_2fcore_2fPlayerCreation_2eproto() {
  protobuf_AddDesc_improbable_2fcore_2fPlayerCreation_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "improbable/core/PlayerCreation.proto");
  GOOGLE_CHECK(file != NULL);
  CreatePlayerRequest_descriptor_ = file->message_type(0);
  static const int CreatePlayerRequest_offsets_[1] = {
  };
  CreatePlayerRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreatePlayerRequest_descriptor_,
      CreatePlayerRequest::internal_default_instance(),
      CreatePlayerRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlayerRequest, _has_bits_),
      -1,
      -1,
      sizeof(CreatePlayerRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlayerRequest, _internal_metadata_));
  CreatePlayerResponse_descriptor_ = file->message_type(1);
  static const int CreatePlayerResponse_offsets_[1] = {
  };
  CreatePlayerResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CreatePlayerResponse_descriptor_,
      CreatePlayerResponse::internal_default_instance(),
      CreatePlayerResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlayerResponse, _has_bits_),
      -1,
      -1,
      sizeof(CreatePlayerResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreatePlayerResponse, _internal_metadata_));
  PlayerCreationData_descriptor_ = file->message_type(2);
  static const int PlayerCreationData_offsets_[1] = {
  };
  PlayerCreationData_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerCreationData_descriptor_,
      PlayerCreationData::internal_default_instance(),
      PlayerCreationData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCreationData, _has_bits_),
      -1,
      -1,
      sizeof(PlayerCreationData),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCreationData, _internal_metadata_));
  PlayerCreation_descriptor_ = file->message_type(3);
  static const int PlayerCreation_offsets_[1] = {
  };
  PlayerCreation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerCreation_descriptor_,
      PlayerCreation::internal_default_instance(),
      PlayerCreation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCreation, _has_bits_),
      -1,
      -1,
      sizeof(PlayerCreation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCreation, _internal_metadata_));
  PlayerCreation_Events_descriptor_ = PlayerCreation_descriptor_->nested_type(0);
  static const int PlayerCreation_Events_offsets_[1] = {
  };
  PlayerCreation_Events_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerCreation_Events_descriptor_,
      PlayerCreation_Events::internal_default_instance(),
      PlayerCreation_Events_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCreation_Events, _has_bits_),
      -1,
      -1,
      sizeof(PlayerCreation_Events),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCreation_Events, _internal_metadata_));
  PlayerCreation_Commands_descriptor_ = PlayerCreation_descriptor_->nested_type(1);
  static const int PlayerCreation_Commands_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCreation_Commands, command_create_player_request_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCreation_Commands, command_create_player_response_),
  };
  PlayerCreation_Commands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PlayerCreation_Commands_descriptor_,
      PlayerCreation_Commands::internal_default_instance(),
      PlayerCreation_Commands_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCreation_Commands, _has_bits_),
      -1,
      -1,
      sizeof(PlayerCreation_Commands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerCreation_Commands, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_improbable_2fcore_2fPlayerCreation_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreatePlayerRequest_descriptor_, CreatePlayerRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CreatePlayerResponse_descriptor_, CreatePlayerResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerCreationData_descriptor_, PlayerCreationData::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerCreation_descriptor_, PlayerCreation::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerCreation_Events_descriptor_, PlayerCreation_Events::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PlayerCreation_Commands_descriptor_, PlayerCreation_Commands::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_improbable_2fcore_2fPlayerCreation_2eproto() {
  CreatePlayerRequest_default_instance_.Shutdown();
  delete CreatePlayerRequest_reflection_;
  CreatePlayerResponse_default_instance_.Shutdown();
  delete CreatePlayerResponse_reflection_;
  PlayerCreationData_default_instance_.Shutdown();
  delete PlayerCreationData_reflection_;
  PlayerCreation_default_instance_.Shutdown();
  delete PlayerCreation_reflection_;
  PlayerCreation_Events_default_instance_.Shutdown();
  delete PlayerCreation_Events_reflection_;
  PlayerCreation_Commands_default_instance_.Shutdown();
  delete PlayerCreation_Commands_reflection_;
}

void protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::schema::improbable::protobuf_InitDefaults_improbable_2fentity_5fstate_2eproto();
  CreatePlayerRequest_default_instance_.DefaultConstruct();
  CreatePlayerResponse_default_instance_.DefaultConstruct();
  PlayerCreationData_default_instance_.DefaultConstruct();
  PlayerCreation_default_instance_.DefaultConstruct();
  PlayerCreation_Events_default_instance_.DefaultConstruct();
  PlayerCreation_Commands_default_instance_.DefaultConstruct();
  CreatePlayerRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CreatePlayerResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  PlayerCreationData_default_instance_.get_mutable()->InitAsDefaultInstance();
  PlayerCreation_default_instance_.get_mutable()->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityState::internal_default_instance(),
    1001, 11, false, false,
    ::schema::improbable::core::PlayerCreationData::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityEvent::internal_default_instance(),
    1001, 11, false, false,
    ::schema::improbable::core::PlayerCreation_Events::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::schema::improbable::EntityCommand::internal_default_instance(),
    1001, 11, false, false,
    ::schema::improbable::core::PlayerCreation_Commands::internal_default_instance());
  PlayerCreation_Events_default_instance_.get_mutable()->InitAsDefaultInstance();
  PlayerCreation_Commands_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto_once_);
void protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto_once_,
                 &protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto_impl);
}
void protobuf_AddDesc_improbable_2fcore_2fPlayerCreation_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n$improbable/core/PlayerCreation.proto\022\026"
    "schema.improbable.core\032\035improbable/entit"
    "y_state.proto\"\025\n\023CreatePlayerRequest\"\026\n\024"
    "CreatePlayerResponse\"\024\n\022PlayerCreationDa"
    "ta\"\274\004\n\016PlayerCreation\032\010\n\006Events\032\264\001\n\010Comm"
    "ands\022R\n\035command_create_player_request\030\001 "
    "\001(\0132+.schema.improbable.core.CreatePlaye"
    "rRequest\022T\n\036command_create_player_respon"
    "se\030\002 \001(\0132,.schema.improbable.core.Create"
    "PlayerResponse2h\n\023component_extension\022\036."
    "schema.improbable.EntityState\030\351\007 \001(\0132*.s"
    "chema.improbable.core.PlayerCreationData"
    "2g\n\017event_extension\022\036.schema.improbable."
    "EntityEvent\030\351\007 \001(\0132-.schema.improbable.c"
    "ore.PlayerCreation.Events2m\n\021command_ext"
    "ension\022 .schema.improbable.EntityCommand"
    "\030\351\007 \001(\0132/.schema.improbable.core.PlayerC"
    "reation.Commands:\'\302\363\030#\n\036improbable.core."
    "PlayerCreation\020\351\007B\032B\030PlayerCreationOuter"
    "Class", 765);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "improbable/core/PlayerCreation.proto", &protobuf_RegisterTypes);
  ::schema::improbable::protobuf_AddDesc_improbable_2fentity_5fstate_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_improbable_2fcore_2fPlayerCreation_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_improbable_2fcore_2fPlayerCreation_2eproto_once_);
void protobuf_AddDesc_improbable_2fcore_2fPlayerCreation_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_improbable_2fcore_2fPlayerCreation_2eproto_once_,
                 &protobuf_AddDesc_improbable_2fcore_2fPlayerCreation_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_improbable_2fcore_2fPlayerCreation_2eproto {
  StaticDescriptorInitializer_improbable_2fcore_2fPlayerCreation_2eproto() {
    protobuf_AddDesc_improbable_2fcore_2fPlayerCreation_2eproto();
  }
} static_descriptor_initializer_improbable_2fcore_2fPlayerCreation_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatePlayerRequest::CreatePlayerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.CreatePlayerRequest)
}

void CreatePlayerRequest::InitAsDefaultInstance() {
}

CreatePlayerRequest::CreatePlayerRequest(const CreatePlayerRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.CreatePlayerRequest)
}

void CreatePlayerRequest::SharedCtor() {
  _cached_size_ = 0;
}

CreatePlayerRequest::~CreatePlayerRequest() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.CreatePlayerRequest)
  SharedDtor();
}

void CreatePlayerRequest::SharedDtor() {
}

void CreatePlayerRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreatePlayerRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreatePlayerRequest_descriptor_;
}

const CreatePlayerRequest& CreatePlayerRequest::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreatePlayerRequest> CreatePlayerRequest_default_instance_;

CreatePlayerRequest* CreatePlayerRequest::New(::google::protobuf::Arena* arena) const {
  CreatePlayerRequest* n = new CreatePlayerRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreatePlayerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.CreatePlayerRequest)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreatePlayerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.CreatePlayerRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.CreatePlayerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.CreatePlayerRequest)
  return false;
#undef DO_
}

void CreatePlayerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.CreatePlayerRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.CreatePlayerRequest)
}

::google::protobuf::uint8* CreatePlayerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.CreatePlayerRequest)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.CreatePlayerRequest)
  return target;
}

size_t CreatePlayerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.CreatePlayerRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreatePlayerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.CreatePlayerRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreatePlayerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatePlayerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.CreatePlayerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.CreatePlayerRequest)
    UnsafeMergeFrom(*source);
  }
}

void CreatePlayerRequest::MergeFrom(const CreatePlayerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.CreatePlayerRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreatePlayerRequest::UnsafeMergeFrom(const CreatePlayerRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreatePlayerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.CreatePlayerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePlayerRequest::CopyFrom(const CreatePlayerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.CreatePlayerRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreatePlayerRequest::IsInitialized() const {

  return true;
}

void CreatePlayerRequest::Swap(CreatePlayerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatePlayerRequest::InternalSwap(CreatePlayerRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreatePlayerRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreatePlayerRequest_descriptor_;
  metadata.reflection = CreatePlayerRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreatePlayerRequest

inline const CreatePlayerRequest* CreatePlayerRequest::internal_default_instance() {
  return &CreatePlayerRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatePlayerResponse::CreatePlayerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.CreatePlayerResponse)
}

void CreatePlayerResponse::InitAsDefaultInstance() {
}

CreatePlayerResponse::CreatePlayerResponse(const CreatePlayerResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.CreatePlayerResponse)
}

void CreatePlayerResponse::SharedCtor() {
  _cached_size_ = 0;
}

CreatePlayerResponse::~CreatePlayerResponse() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.CreatePlayerResponse)
  SharedDtor();
}

void CreatePlayerResponse::SharedDtor() {
}

void CreatePlayerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreatePlayerResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CreatePlayerResponse_descriptor_;
}

const CreatePlayerResponse& CreatePlayerResponse::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CreatePlayerResponse> CreatePlayerResponse_default_instance_;

CreatePlayerResponse* CreatePlayerResponse::New(::google::protobuf::Arena* arena) const {
  CreatePlayerResponse* n = new CreatePlayerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreatePlayerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.CreatePlayerResponse)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CreatePlayerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.CreatePlayerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.CreatePlayerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.CreatePlayerResponse)
  return false;
#undef DO_
}

void CreatePlayerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.CreatePlayerResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.CreatePlayerResponse)
}

::google::protobuf::uint8* CreatePlayerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.CreatePlayerResponse)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.CreatePlayerResponse)
  return target;
}

size_t CreatePlayerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.CreatePlayerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreatePlayerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.CreatePlayerResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CreatePlayerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatePlayerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.CreatePlayerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.CreatePlayerResponse)
    UnsafeMergeFrom(*source);
  }
}

void CreatePlayerResponse::MergeFrom(const CreatePlayerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.CreatePlayerResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CreatePlayerResponse::UnsafeMergeFrom(const CreatePlayerResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void CreatePlayerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.CreatePlayerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePlayerResponse::CopyFrom(const CreatePlayerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.CreatePlayerResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CreatePlayerResponse::IsInitialized() const {

  return true;
}

void CreatePlayerResponse::Swap(CreatePlayerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatePlayerResponse::InternalSwap(CreatePlayerResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreatePlayerResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CreatePlayerResponse_descriptor_;
  metadata.reflection = CreatePlayerResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreatePlayerResponse

inline const CreatePlayerResponse* CreatePlayerResponse::internal_default_instance() {
  return &CreatePlayerResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCreationData::PlayerCreationData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.PlayerCreationData)
}

void PlayerCreationData::InitAsDefaultInstance() {
}

PlayerCreationData::PlayerCreationData(const PlayerCreationData& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.PlayerCreationData)
}

void PlayerCreationData::SharedCtor() {
  _cached_size_ = 0;
}

PlayerCreationData::~PlayerCreationData() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.PlayerCreationData)
  SharedDtor();
}

void PlayerCreationData::SharedDtor() {
}

void PlayerCreationData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCreationData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerCreationData_descriptor_;
}

const PlayerCreationData& PlayerCreationData::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PlayerCreationData> PlayerCreationData_default_instance_;

PlayerCreationData* PlayerCreationData::New(::google::protobuf::Arena* arena) const {
  PlayerCreationData* n = new PlayerCreationData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCreationData::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.PlayerCreationData)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayerCreationData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.PlayerCreationData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.PlayerCreationData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.PlayerCreationData)
  return false;
#undef DO_
}

void PlayerCreationData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.PlayerCreationData)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.PlayerCreationData)
}

::google::protobuf::uint8* PlayerCreationData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.PlayerCreationData)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.PlayerCreationData)
  return target;
}

size_t PlayerCreationData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.PlayerCreationData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCreationData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.PlayerCreationData)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PlayerCreationData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCreationData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.PlayerCreationData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.PlayerCreationData)
    UnsafeMergeFrom(*source);
  }
}

void PlayerCreationData::MergeFrom(const PlayerCreationData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.PlayerCreationData)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PlayerCreationData::UnsafeMergeFrom(const PlayerCreationData& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PlayerCreationData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.PlayerCreationData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCreationData::CopyFrom(const PlayerCreationData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.PlayerCreationData)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PlayerCreationData::IsInitialized() const {

  return true;
}

void PlayerCreationData::Swap(PlayerCreationData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCreationData::InternalSwap(PlayerCreationData* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCreationData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerCreationData_descriptor_;
  metadata.reflection = PlayerCreationData_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCreationData

inline const PlayerCreationData* PlayerCreationData::internal_default_instance() {
  return &PlayerCreationData_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCreation_Events::PlayerCreation_Events()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.PlayerCreation.Events)
}

void PlayerCreation_Events::InitAsDefaultInstance() {
}

PlayerCreation_Events::PlayerCreation_Events(const PlayerCreation_Events& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.PlayerCreation.Events)
}

void PlayerCreation_Events::SharedCtor() {
  _cached_size_ = 0;
}

PlayerCreation_Events::~PlayerCreation_Events() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.PlayerCreation.Events)
  SharedDtor();
}

void PlayerCreation_Events::SharedDtor() {
}

void PlayerCreation_Events::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCreation_Events::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerCreation_Events_descriptor_;
}

const PlayerCreation_Events& PlayerCreation_Events::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PlayerCreation_Events> PlayerCreation_Events_default_instance_;

PlayerCreation_Events* PlayerCreation_Events::New(::google::protobuf::Arena* arena) const {
  PlayerCreation_Events* n = new PlayerCreation_Events;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCreation_Events::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.PlayerCreation.Events)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayerCreation_Events::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.PlayerCreation.Events)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.PlayerCreation.Events)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.PlayerCreation.Events)
  return false;
#undef DO_
}

void PlayerCreation_Events::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.PlayerCreation.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.PlayerCreation.Events)
}

::google::protobuf::uint8* PlayerCreation_Events::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.PlayerCreation.Events)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.PlayerCreation.Events)
  return target;
}

size_t PlayerCreation_Events::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.PlayerCreation.Events)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCreation_Events::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.PlayerCreation.Events)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PlayerCreation_Events* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCreation_Events>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.PlayerCreation.Events)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.PlayerCreation.Events)
    UnsafeMergeFrom(*source);
  }
}

void PlayerCreation_Events::MergeFrom(const PlayerCreation_Events& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.PlayerCreation.Events)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PlayerCreation_Events::UnsafeMergeFrom(const PlayerCreation_Events& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PlayerCreation_Events::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.PlayerCreation.Events)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCreation_Events::CopyFrom(const PlayerCreation_Events& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.PlayerCreation.Events)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PlayerCreation_Events::IsInitialized() const {

  return true;
}

void PlayerCreation_Events::Swap(PlayerCreation_Events* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCreation_Events::InternalSwap(PlayerCreation_Events* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCreation_Events::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerCreation_Events_descriptor_;
  metadata.reflection = PlayerCreation_Events_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCreation_Commands::kCommandCreatePlayerRequestFieldNumber;
const int PlayerCreation_Commands::kCommandCreatePlayerResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerCreation_Commands::PlayerCreation_Commands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.PlayerCreation.Commands)
}

void PlayerCreation_Commands::InitAsDefaultInstance() {
  command_create_player_request_ = const_cast< ::schema::improbable::core::CreatePlayerRequest*>(
      ::schema::improbable::core::CreatePlayerRequest::internal_default_instance());
  command_create_player_response_ = const_cast< ::schema::improbable::core::CreatePlayerResponse*>(
      ::schema::improbable::core::CreatePlayerResponse::internal_default_instance());
}

PlayerCreation_Commands::PlayerCreation_Commands(const PlayerCreation_Commands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.PlayerCreation.Commands)
}

void PlayerCreation_Commands::SharedCtor() {
  _cached_size_ = 0;
  command_create_player_request_ = NULL;
  command_create_player_response_ = NULL;
}

PlayerCreation_Commands::~PlayerCreation_Commands() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.PlayerCreation.Commands)
  SharedDtor();
}

void PlayerCreation_Commands::SharedDtor() {
  if (this != &PlayerCreation_Commands_default_instance_.get()) {
    delete command_create_player_request_;
    delete command_create_player_response_;
  }
}

void PlayerCreation_Commands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCreation_Commands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerCreation_Commands_descriptor_;
}

const PlayerCreation_Commands& PlayerCreation_Commands::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PlayerCreation_Commands> PlayerCreation_Commands_default_instance_;

PlayerCreation_Commands* PlayerCreation_Commands::New(::google::protobuf::Arena* arena) const {
  PlayerCreation_Commands* n = new PlayerCreation_Commands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCreation_Commands::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.PlayerCreation.Commands)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_command_create_player_request()) {
      if (command_create_player_request_ != NULL) command_create_player_request_->::schema::improbable::core::CreatePlayerRequest::Clear();
    }
    if (has_command_create_player_response()) {
      if (command_create_player_response_ != NULL) command_create_player_response_->::schema::improbable::core::CreatePlayerResponse::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayerCreation_Commands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.PlayerCreation.Commands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .schema.improbable.core.CreatePlayerRequest command_create_player_request = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command_create_player_request()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_command_create_player_response;
        break;
      }

      // optional .schema.improbable.core.CreatePlayerResponse command_create_player_response = 2;
      case 2: {
        if (tag == 18) {
         parse_command_create_player_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command_create_player_response()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.PlayerCreation.Commands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.PlayerCreation.Commands)
  return false;
#undef DO_
}

void PlayerCreation_Commands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.PlayerCreation.Commands)
  // optional .schema.improbable.core.CreatePlayerRequest command_create_player_request = 1;
  if (has_command_create_player_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->command_create_player_request_, output);
  }

  // optional .schema.improbable.core.CreatePlayerResponse command_create_player_response = 2;
  if (has_command_create_player_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->command_create_player_response_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.PlayerCreation.Commands)
}

::google::protobuf::uint8* PlayerCreation_Commands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.PlayerCreation.Commands)
  // optional .schema.improbable.core.CreatePlayerRequest command_create_player_request = 1;
  if (has_command_create_player_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->command_create_player_request_, false, target);
  }

  // optional .schema.improbable.core.CreatePlayerResponse command_create_player_response = 2;
  if (has_command_create_player_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->command_create_player_response_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.PlayerCreation.Commands)
  return target;
}

size_t PlayerCreation_Commands::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.PlayerCreation.Commands)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .schema.improbable.core.CreatePlayerRequest command_create_player_request = 1;
    if (has_command_create_player_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->command_create_player_request_);
    }

    // optional .schema.improbable.core.CreatePlayerResponse command_create_player_response = 2;
    if (has_command_create_player_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->command_create_player_response_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCreation_Commands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.PlayerCreation.Commands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PlayerCreation_Commands* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCreation_Commands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.PlayerCreation.Commands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.PlayerCreation.Commands)
    UnsafeMergeFrom(*source);
  }
}

void PlayerCreation_Commands::MergeFrom(const PlayerCreation_Commands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.PlayerCreation.Commands)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PlayerCreation_Commands::UnsafeMergeFrom(const PlayerCreation_Commands& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_command_create_player_request()) {
      mutable_command_create_player_request()->::schema::improbable::core::CreatePlayerRequest::MergeFrom(from.command_create_player_request());
    }
    if (from.has_command_create_player_response()) {
      mutable_command_create_player_response()->::schema::improbable::core::CreatePlayerResponse::MergeFrom(from.command_create_player_response());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PlayerCreation_Commands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.PlayerCreation.Commands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCreation_Commands::CopyFrom(const PlayerCreation_Commands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.PlayerCreation.Commands)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PlayerCreation_Commands::IsInitialized() const {

  return true;
}

void PlayerCreation_Commands::Swap(PlayerCreation_Commands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCreation_Commands::InternalSwap(PlayerCreation_Commands* other) {
  std::swap(command_create_player_request_, other->command_create_player_request_);
  std::swap(command_create_player_response_, other->command_create_player_response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCreation_Commands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerCreation_Commands_descriptor_;
  metadata.reflection = PlayerCreation_Commands_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCreation::kComponentExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::PlayerCreationData >, 11, false >
  PlayerCreation::component_extension(kComponentExtensionFieldNumber, *::schema::improbable::core::PlayerCreationData::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCreation::kEventExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::PlayerCreation_Events >, 11, false >
  PlayerCreation::event_extension(kEventExtensionFieldNumber, *::schema::improbable::core::PlayerCreation_Events::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerCreation::kCommandExtensionFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
    ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::PlayerCreation_Commands >, 11, false >
  PlayerCreation::command_extension(kCommandExtensionFieldNumber, *::schema::improbable::core::PlayerCreation_Commands::internal_default_instance());
PlayerCreation::PlayerCreation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:schema.improbable.core.PlayerCreation)
}

void PlayerCreation::InitAsDefaultInstance() {
}

PlayerCreation::PlayerCreation(const PlayerCreation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:schema.improbable.core.PlayerCreation)
}

void PlayerCreation::SharedCtor() {
  _cached_size_ = 0;
}

PlayerCreation::~PlayerCreation() {
  // @@protoc_insertion_point(destructor:schema.improbable.core.PlayerCreation)
  SharedDtor();
}

void PlayerCreation::SharedDtor() {
}

void PlayerCreation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerCreation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerCreation_descriptor_;
}

const PlayerCreation& PlayerCreation::default_instance() {
  protobuf_InitDefaults_improbable_2fcore_2fPlayerCreation_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PlayerCreation> PlayerCreation_default_instance_;

PlayerCreation* PlayerCreation::New(::google::protobuf::Arena* arena) const {
  PlayerCreation* n = new PlayerCreation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerCreation::Clear() {
// @@protoc_insertion_point(message_clear_start:schema.improbable.core.PlayerCreation)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PlayerCreation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:schema.improbable.core.PlayerCreation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:schema.improbable.core.PlayerCreation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:schema.improbable.core.PlayerCreation)
  return false;
#undef DO_
}

void PlayerCreation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:schema.improbable.core.PlayerCreation)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:schema.improbable.core.PlayerCreation)
}

::google::protobuf::uint8* PlayerCreation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:schema.improbable.core.PlayerCreation)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:schema.improbable.core.PlayerCreation)
  return target;
}

size_t PlayerCreation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:schema.improbable.core.PlayerCreation)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerCreation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:schema.improbable.core.PlayerCreation)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PlayerCreation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerCreation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:schema.improbable.core.PlayerCreation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:schema.improbable.core.PlayerCreation)
    UnsafeMergeFrom(*source);
  }
}

void PlayerCreation::MergeFrom(const PlayerCreation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:schema.improbable.core.PlayerCreation)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PlayerCreation::UnsafeMergeFrom(const PlayerCreation& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void PlayerCreation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:schema.improbable.core.PlayerCreation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerCreation::CopyFrom(const PlayerCreation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:schema.improbable.core.PlayerCreation)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PlayerCreation::IsInitialized() const {

  return true;
}

void PlayerCreation::Swap(PlayerCreation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerCreation::InternalSwap(PlayerCreation* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerCreation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PlayerCreation_descriptor_;
  metadata.reflection = PlayerCreation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerCreation_Events

inline const PlayerCreation_Events* PlayerCreation_Events::internal_default_instance() {
  return &PlayerCreation_Events_default_instance_.get();
}
// -------------------------------------------------------------------

// PlayerCreation_Commands

// optional .schema.improbable.core.CreatePlayerRequest command_create_player_request = 1;
bool PlayerCreation_Commands::has_command_create_player_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlayerCreation_Commands::set_has_command_create_player_request() {
  _has_bits_[0] |= 0x00000001u;
}
void PlayerCreation_Commands::clear_has_command_create_player_request() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlayerCreation_Commands::clear_command_create_player_request() {
  if (command_create_player_request_ != NULL) command_create_player_request_->::schema::improbable::core::CreatePlayerRequest::Clear();
  clear_has_command_create_player_request();
}
const ::schema::improbable::core::CreatePlayerRequest& PlayerCreation_Commands::command_create_player_request() const {
  // @@protoc_insertion_point(field_get:schema.improbable.core.PlayerCreation.Commands.command_create_player_request)
  return command_create_player_request_ != NULL ? *command_create_player_request_
                         : *::schema::improbable::core::CreatePlayerRequest::internal_default_instance();
}
::schema::improbable::core::CreatePlayerRequest* PlayerCreation_Commands::mutable_command_create_player_request() {
  set_has_command_create_player_request();
  if (command_create_player_request_ == NULL) {
    command_create_player_request_ = new ::schema::improbable::core::CreatePlayerRequest;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.core.PlayerCreation.Commands.command_create_player_request)
  return command_create_player_request_;
}
::schema::improbable::core::CreatePlayerRequest* PlayerCreation_Commands::release_command_create_player_request() {
  // @@protoc_insertion_point(field_release:schema.improbable.core.PlayerCreation.Commands.command_create_player_request)
  clear_has_command_create_player_request();
  ::schema::improbable::core::CreatePlayerRequest* temp = command_create_player_request_;
  command_create_player_request_ = NULL;
  return temp;
}
void PlayerCreation_Commands::set_allocated_command_create_player_request(::schema::improbable::core::CreatePlayerRequest* command_create_player_request) {
  delete command_create_player_request_;
  command_create_player_request_ = command_create_player_request;
  if (command_create_player_request) {
    set_has_command_create_player_request();
  } else {
    clear_has_command_create_player_request();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.core.PlayerCreation.Commands.command_create_player_request)
}

// optional .schema.improbable.core.CreatePlayerResponse command_create_player_response = 2;
bool PlayerCreation_Commands::has_command_create_player_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PlayerCreation_Commands::set_has_command_create_player_response() {
  _has_bits_[0] |= 0x00000002u;
}
void PlayerCreation_Commands::clear_has_command_create_player_response() {
  _has_bits_[0] &= ~0x00000002u;
}
void PlayerCreation_Commands::clear_command_create_player_response() {
  if (command_create_player_response_ != NULL) command_create_player_response_->::schema::improbable::core::CreatePlayerResponse::Clear();
  clear_has_command_create_player_response();
}
const ::schema::improbable::core::CreatePlayerResponse& PlayerCreation_Commands::command_create_player_response() const {
  // @@protoc_insertion_point(field_get:schema.improbable.core.PlayerCreation.Commands.command_create_player_response)
  return command_create_player_response_ != NULL ? *command_create_player_response_
                         : *::schema::improbable::core::CreatePlayerResponse::internal_default_instance();
}
::schema::improbable::core::CreatePlayerResponse* PlayerCreation_Commands::mutable_command_create_player_response() {
  set_has_command_create_player_response();
  if (command_create_player_response_ == NULL) {
    command_create_player_response_ = new ::schema::improbable::core::CreatePlayerResponse;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.core.PlayerCreation.Commands.command_create_player_response)
  return command_create_player_response_;
}
::schema::improbable::core::CreatePlayerResponse* PlayerCreation_Commands::release_command_create_player_response() {
  // @@protoc_insertion_point(field_release:schema.improbable.core.PlayerCreation.Commands.command_create_player_response)
  clear_has_command_create_player_response();
  ::schema::improbable::core::CreatePlayerResponse* temp = command_create_player_response_;
  command_create_player_response_ = NULL;
  return temp;
}
void PlayerCreation_Commands::set_allocated_command_create_player_response(::schema::improbable::core::CreatePlayerResponse* command_create_player_response) {
  delete command_create_player_response_;
  command_create_player_response_ = command_create_player_response;
  if (command_create_player_response) {
    set_has_command_create_player_response();
  } else {
    clear_has_command_create_player_response();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.core.PlayerCreation.Commands.command_create_player_response)
}

inline const PlayerCreation_Commands* PlayerCreation_Commands::internal_default_instance() {
  return &PlayerCreation_Commands_default_instance_.get();
}
// -------------------------------------------------------------------

// PlayerCreation

inline const PlayerCreation* PlayerCreation::internal_default_instance() {
  return &PlayerCreation_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace core
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)
