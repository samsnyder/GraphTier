// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: improbable/core/WorldTransform.proto

#ifndef PROTOBUF_improbable_2fcore_2fWorldTransform_2eproto__INCLUDED
#define PROTOBUF_improbable_2fcore_2fWorldTransform_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "improbable/entity_state.pb.h"
#include "improbable/math/coordinates.pb.h"
#include "improbable/core/Quaternion.pb.h"
// @@protoc_insertion_point(includes)

namespace schema {
namespace improbable {
namespace core {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto();
void protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto();
void protobuf_AssignDesc_improbable_2fcore_2fWorldTransform_2eproto();
void protobuf_ShutdownFile_improbable_2fcore_2fWorldTransform_2eproto();

class WorldTransform;
class WorldTransformData;
class WorldTransform_Commands;
class WorldTransform_Events;

// ===================================================================

class WorldTransformData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.core.WorldTransformData) */ {
 public:
  WorldTransformData();
  virtual ~WorldTransformData();

  WorldTransformData(const WorldTransformData& from);

  inline WorldTransformData& operator=(const WorldTransformData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldTransformData& default_instance();

  static const WorldTransformData* internal_default_instance();

  void Swap(WorldTransformData* other);

  // implements Message ----------------------------------------------

  inline WorldTransformData* New() const { return New(NULL); }

  WorldTransformData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldTransformData& from);
  void MergeFrom(const WorldTransformData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldTransformData* other);
  void UnsafeMergeFrom(const WorldTransformData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .schema.improbable.math.Coordinates field1_position = 1;
  bool has_field1_position() const;
  void clear_field1_position();
  static const int kField1PositionFieldNumber = 1;
  const ::schema::improbable::math::Coordinates& field1_position() const;
  ::schema::improbable::math::Coordinates* mutable_field1_position();
  ::schema::improbable::math::Coordinates* release_field1_position();
  void set_allocated_field1_position(::schema::improbable::math::Coordinates* field1_position);

  // optional .schema.improbable.core.Quaternion field2_rotation = 2;
  bool has_field2_rotation() const;
  void clear_field2_rotation();
  static const int kField2RotationFieldNumber = 2;
  const ::schema::improbable::core::Quaternion& field2_rotation() const;
  ::schema::improbable::core::Quaternion* mutable_field2_rotation();
  ::schema::improbable::core::Quaternion* release_field2_rotation();
  void set_allocated_field2_rotation(::schema::improbable::core::Quaternion* field2_rotation);

  // @@protoc_insertion_point(class_scope:schema.improbable.core.WorldTransformData)
 private:
  inline void set_has_field1_position();
  inline void clear_has_field1_position();
  inline void set_has_field2_rotation();
  inline void clear_has_field2_rotation();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::schema::improbable::math::Coordinates* field1_position_;
  ::schema::improbable::core::Quaternion* field2_rotation_;
  friend void  protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fcore_2fWorldTransform_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fcore_2fWorldTransform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldTransformData> WorldTransformData_default_instance_;

// -------------------------------------------------------------------

class WorldTransform_Events : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.core.WorldTransform.Events) */ {
 public:
  WorldTransform_Events();
  virtual ~WorldTransform_Events();

  WorldTransform_Events(const WorldTransform_Events& from);

  inline WorldTransform_Events& operator=(const WorldTransform_Events& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldTransform_Events& default_instance();

  static const WorldTransform_Events* internal_default_instance();

  void Swap(WorldTransform_Events* other);

  // implements Message ----------------------------------------------

  inline WorldTransform_Events* New() const { return New(NULL); }

  WorldTransform_Events* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldTransform_Events& from);
  void MergeFrom(const WorldTransform_Events& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldTransform_Events* other);
  void UnsafeMergeFrom(const WorldTransform_Events& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.core.WorldTransform.Events)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fcore_2fWorldTransform_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fcore_2fWorldTransform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldTransform_Events> WorldTransform_Events_default_instance_;

// -------------------------------------------------------------------

class WorldTransform_Commands : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.core.WorldTransform.Commands) */ {
 public:
  WorldTransform_Commands();
  virtual ~WorldTransform_Commands();

  WorldTransform_Commands(const WorldTransform_Commands& from);

  inline WorldTransform_Commands& operator=(const WorldTransform_Commands& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldTransform_Commands& default_instance();

  static const WorldTransform_Commands* internal_default_instance();

  void Swap(WorldTransform_Commands* other);

  // implements Message ----------------------------------------------

  inline WorldTransform_Commands* New() const { return New(NULL); }

  WorldTransform_Commands* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldTransform_Commands& from);
  void MergeFrom(const WorldTransform_Commands& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldTransform_Commands* other);
  void UnsafeMergeFrom(const WorldTransform_Commands& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:schema.improbable.core.WorldTransform.Commands)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fcore_2fWorldTransform_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fcore_2fWorldTransform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldTransform_Commands> WorldTransform_Commands_default_instance_;

// -------------------------------------------------------------------

class WorldTransform : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:schema.improbable.core.WorldTransform) */ {
 public:
  WorldTransform();
  virtual ~WorldTransform();

  WorldTransform(const WorldTransform& from);

  inline WorldTransform& operator=(const WorldTransform& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldTransform& default_instance();

  static const WorldTransform* internal_default_instance();

  void Swap(WorldTransform* other);

  // implements Message ----------------------------------------------

  inline WorldTransform* New() const { return New(NULL); }

  WorldTransform* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WorldTransform& from);
  void MergeFrom(const WorldTransform& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WorldTransform* other);
  void UnsafeMergeFrom(const WorldTransform& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef WorldTransform_Events Events;
  typedef WorldTransform_Commands Commands;

  // accessors -------------------------------------------------------

  static const int kComponentExtensionFieldNumber = 1000;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityState,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::WorldTransformData >, 11, false >
    component_extension;
  static const int kEventExtensionFieldNumber = 1000;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityEvent,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::WorldTransform_Events >, 11, false >
    event_extension;
  static const int kCommandExtensionFieldNumber = 1000;
  static ::google::protobuf::internal::ExtensionIdentifier< ::schema::improbable::EntityCommand,
      ::google::protobuf::internal::MessageTypeTraits< ::schema::improbable::core::WorldTransform_Commands >, 11, false >
    command_extension;
  // @@protoc_insertion_point(class_scope:schema.improbable.core.WorldTransform)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_improbable_2fcore_2fWorldTransform_2eproto_impl();
  friend void  protobuf_AddDesc_improbable_2fcore_2fWorldTransform_2eproto_impl();
  friend void protobuf_AssignDesc_improbable_2fcore_2fWorldTransform_2eproto();
  friend void protobuf_ShutdownFile_improbable_2fcore_2fWorldTransform_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WorldTransform> WorldTransform_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WorldTransformData

// optional .schema.improbable.math.Coordinates field1_position = 1;
inline bool WorldTransformData::has_field1_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WorldTransformData::set_has_field1_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WorldTransformData::clear_has_field1_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WorldTransformData::clear_field1_position() {
  if (field1_position_ != NULL) field1_position_->::schema::improbable::math::Coordinates::Clear();
  clear_has_field1_position();
}
inline const ::schema::improbable::math::Coordinates& WorldTransformData::field1_position() const {
  // @@protoc_insertion_point(field_get:schema.improbable.core.WorldTransformData.field1_position)
  return field1_position_ != NULL ? *field1_position_
                         : *::schema::improbable::math::Coordinates::internal_default_instance();
}
inline ::schema::improbable::math::Coordinates* WorldTransformData::mutable_field1_position() {
  set_has_field1_position();
  if (field1_position_ == NULL) {
    field1_position_ = new ::schema::improbable::math::Coordinates;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.core.WorldTransformData.field1_position)
  return field1_position_;
}
inline ::schema::improbable::math::Coordinates* WorldTransformData::release_field1_position() {
  // @@protoc_insertion_point(field_release:schema.improbable.core.WorldTransformData.field1_position)
  clear_has_field1_position();
  ::schema::improbable::math::Coordinates* temp = field1_position_;
  field1_position_ = NULL;
  return temp;
}
inline void WorldTransformData::set_allocated_field1_position(::schema::improbable::math::Coordinates* field1_position) {
  delete field1_position_;
  field1_position_ = field1_position;
  if (field1_position) {
    set_has_field1_position();
  } else {
    clear_has_field1_position();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.core.WorldTransformData.field1_position)
}

// optional .schema.improbable.core.Quaternion field2_rotation = 2;
inline bool WorldTransformData::has_field2_rotation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WorldTransformData::set_has_field2_rotation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WorldTransformData::clear_has_field2_rotation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WorldTransformData::clear_field2_rotation() {
  if (field2_rotation_ != NULL) field2_rotation_->::schema::improbable::core::Quaternion::Clear();
  clear_has_field2_rotation();
}
inline const ::schema::improbable::core::Quaternion& WorldTransformData::field2_rotation() const {
  // @@protoc_insertion_point(field_get:schema.improbable.core.WorldTransformData.field2_rotation)
  return field2_rotation_ != NULL ? *field2_rotation_
                         : *::schema::improbable::core::Quaternion::internal_default_instance();
}
inline ::schema::improbable::core::Quaternion* WorldTransformData::mutable_field2_rotation() {
  set_has_field2_rotation();
  if (field2_rotation_ == NULL) {
    field2_rotation_ = new ::schema::improbable::core::Quaternion;
  }
  // @@protoc_insertion_point(field_mutable:schema.improbable.core.WorldTransformData.field2_rotation)
  return field2_rotation_;
}
inline ::schema::improbable::core::Quaternion* WorldTransformData::release_field2_rotation() {
  // @@protoc_insertion_point(field_release:schema.improbable.core.WorldTransformData.field2_rotation)
  clear_has_field2_rotation();
  ::schema::improbable::core::Quaternion* temp = field2_rotation_;
  field2_rotation_ = NULL;
  return temp;
}
inline void WorldTransformData::set_allocated_field2_rotation(::schema::improbable::core::Quaternion* field2_rotation) {
  delete field2_rotation_;
  field2_rotation_ = field2_rotation;
  if (field2_rotation) {
    set_has_field2_rotation();
  } else {
    clear_has_field2_rotation();
  }
  // @@protoc_insertion_point(field_set_allocated:schema.improbable.core.WorldTransformData.field2_rotation)
}

inline const WorldTransformData* WorldTransformData::internal_default_instance() {
  return &WorldTransformData_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldTransform_Events

inline const WorldTransform_Events* WorldTransform_Events::internal_default_instance() {
  return &WorldTransform_Events_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldTransform_Commands

inline const WorldTransform_Commands* WorldTransform_Commands::internal_default_instance() {
  return &WorldTransform_Commands_default_instance_.get();
}
// -------------------------------------------------------------------

// WorldTransform

inline const WorldTransform* WorldTransform::internal_default_instance() {
  return &WorldTransform_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace core
}  // namespace improbable
}  // namespace schema

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_improbable_2fcore_2fWorldTransform_2eproto__INCLUDED
